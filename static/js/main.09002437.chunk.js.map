{"version":3,"sources":["SidePlane.tsx","components/drawing-model/index.ts","BodyShape.tsx","DesignTools.ts","AppScene.tsx","components/drawing-canvas/drawing-canvas.tsx","components/drawing-canvas/drawing-wheels.tsx","DesignStore.tsx","tutorial.tsx","ToolbarFactory.tsx","components/side-editor/modal-side-editor.tsx","components/side-editor/side-editor.tsx","DesignStoreOperations.ts","MainToolbar.tsx","App.tsx","serviceWorker.js","index.tsx","lib/tools.ts","components/modal/modal.tsx","components/icon/icon.tsx","components/toolbar/toolbar.tsx","components/modal/modals-component.tsx","components/modal/forms.tsx","components/toolbar/toolbar-legend.tsx","components/toolbar/index.ts","lib/generate.ts","lib/buffer-stream.ts","lib/index.ts"],"names":["generationMode","generationParity","drawingMode","wheelDrawingType","sectionEditorMode","SidePlane","props","vertices","indices","uvs","normals","length","width","pointsMapper","this","Generate","range","l","w","push","vertice","handlers","p","facesFromIndexes","offset","side","mode","lHalf","wHalf","i0","i1","i2","i3","Uniform","LSymmetrical","WSymmetrical","LWSymmetrical","parityMatch","value","parity","Even","Odd","index","handler","scale","allPoints","map","v","points","forEach","h","x","y","z","log","r","BufferGeometry","transformedVertices","getVector","Vector3","normalIndex","setNormals","values","setNormalVectors","console","idx","v_0_1","subVectors","v_0_2","cross1","crossVectors","normalize","setAttribute","Float32BufferAttribute","setIndex","computeVertexNormals","CountourQuery","countour","segments","i","BodyShape","lengthPoints","widthPoints","heightPoints","left","right","front","back","top","bottom","height","scaled","sidePoints","contourFrontPoints","topPoints","wheels","frontSegments","offsetScale","contourQuery","frontPoints","query","apply","frontScale","yScale","zScale","wheel","find","Tools","betweenInclusive","center","arcRadius","wheelHeight","pythHB","Math","max","halfWidth","yTop","topOffset","wheelTop","design","section","result","every","transformed","sourcePoints","geometry","DesignTools","boxSize","interpolatedSegments","interpolationSource","existingSections","existingIndexes","startSectionIdx","startSection","nextSectionIdx","nextSection","dx","dy","sectionIdx","interpolatedSection","filter","AppScene","_subscription","_updateStream","Subject","scene","camera","light","renderer","bodyMesh","orbitControls","container","ang","state","flatShading","animate","bind","pipe","debounce","interval","subscribe","updateMesh","init","subscribeForResizeEvents","requestAnimationFrame","forceUpdate","next","unsubscribe","from","m","remove","renderSettings","colorOdd","colorEven","wireframes","parts","color","interpolateSections","body","applyContour","material","THREE","wireframe","add","ground","depthWrite","rotation","PI","receiveShadow","grid","gridMaterial","opacity","transparent","axesHelper","window","innerWidth","innerHeight","position","setPixelRatio","devicePixelRatio","shadowMap","enabled","OrbitControls","domElement","target","set","update","castShadow","shadow","mapSize","d","far","initGround","vec","applyAxisAngle","render","setSize","offsetWidth","offsetHeight","aspect","updateProjectionMatrix","appendChild","addEventListener","newWidth","newHeight","sizeProps","style","ref","onContainerCreated","React","Component","wheelDrawingMode","DrawingWheels","margin","toCtx","ctx","wheelArcFrontFrom","wheelRadius","wheelArcFrontTo","wheelArcBackFrom","wheelArcBackTo","wheelRadiusHandle","beginPath","arc","moveTo","lineTo","stroke","fill","innerCenter","outerCenter","mappedWheelCountour","DrawingCanvas","canvas","sectionCanvas","buffer","lastPoint","sectionSelectorHeight","wheelMode","Create","wheelIndex","onMouseUp","processPoints","BufferStream","document","updateScale","removeEventListener","contour","maxY","currentScale","min","floor","setState","onCountourChange","e","stopPropagation","preventDefault","mouseDisconnected","drawSignal","clearRect","setLineDash","lineWidth","col","row","strokeStyle","yAxis","scalePoint","pt","wheelDrawing","drawingWheels","translate","None","Side","drawWheelSide","Top","drawWheelTop","currentStyle","imageSmoothingEnabled","samplePoint","to","sectionMode","showSectionSelector","Pick","getContext","drawGrid","sectionBaseline","Edit","drawPoints","drawWheels","drawSections","samples","delta","inclusive","currentSamples","symmetrical","onSectionSelected","halfIndex","between","lerp","reflect","distToCenter","sqrt","pow","distToRadiusHandler","distToOffsetHandler","pythBP","distToWidthHandler","indexOf","wheelDataFromPoint","wheelData","some","rect","getBoundingClientRect","clientX","withinRange","round","clientY","wheelIndexFromPoint","Contour","Wheel","MoveCenter","onWheelChange","ChangeRadius","ChangeOffset","ChangeWidth","onSectionChanged","sections","sectionIndex","sectionSelected","className","type","onChange","parseInt","id","renderSectionSelector","onDoubleClick","onContextMenu","onPointerEnter","onPointerLeave","onPointerDown","buttons","setPosition","onPointerUp","onPointerMove","onPointerCancel","onMouseDown","onMouseMove","sectionPoints","s","newData","DesignStore","_stream","Rx","designStore","storageModel","defaultStorageModel","updateDesign","version","designs","newDesing","model","json","localStorage","getItem","JSON","parse","migrate","payload","stringify","setItem","loadFromLocalStorage","name","includes","saveStorageModel","saveToLocalStorage","setActiveDesign","newState","appendStorageModel","replaceStorageModel","Tutorial","title","content","image","src","mainToolbarItems","sideEditorToolbar","items","dialogFactory","ToolbarFactory","dsoFactory","renderSettingsFactory","renderSettingsModified","dso","icon","action","Toolbar","Modal","tutorials","isSeparator","resetAll","loadSampleDesigns","newDesign","downloadDesigns","uploadDesigns","exportSTL","cloneDesign","settings","deleteDesign","selected","open","SideEditorToolbar","hasWheels","currentSection","sectionParams","Dialogs","buttonsFactory","CloseButtons","data","actions","a","fullscreenEdit","setDrawingMode","hidden","moveUp","moveDown","allUp","allDown","smooth","iconParams","lockSection","removeSection","applyToRemaining","ModalSideEditor","_container","clone","clientWidth","clientHeight","newSamples","newWheels","SideEditor","OKCancelButtons","Notification","Confirm","onInterpolateSections","bordered","readOnly","readOnlyTitle","titleParts","renderMenu","Boolean","join","show","DesignStoreOperations","designStoreState","contentType","fileName","blob","Blob","exportBlob","link","createElement","display","href","URL","createObjectURL","download","click","Forms","stringName","intXRotationDeg","intYRotationDeg","intZRotationDeg","params","exporter","STLExporter","bodyShape","All","designTools","singleGeometry","mergeBufferGeometries","rotateX","MathUtils","degToRad","rotateY","rotateZ","mesh","stl","exportText","axios","get","response","flagAppendToExisting","fileInput","onchange","file","files","fr","FileReader","onload","ev","parsed","toString","readAsText","now","Date","toLocaleDateString","toLocaleTimeString","cloneDesignParams","clonedDesign","MainToolbar","diff","renderSettingsChanged","modify","size","App","currentSectionData","ontouchstart","event","touches","modifyDesign","modified","tableSizeProps","rowSizeProps","cellSizeProps","canvasWidth","canvasHeight","newPoints","modifiedSegments","classes","key","classNames","onClick","renderDesignSelector","renderDesign","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","mMin","mMax","source","Object","keys","k","hyp","base","perp","close","label","dialog","DialogsStream","override","Promise","resolve","reject","Remove","genericDialog","b","footer","genericDialogCallback","Add","Icon","iconProps","getIcon","IconSeparator","separatorParams","menuItems","ModalsComponent","internalDialogs","dialogs","op","o","newDialogs","backdrop","modalDialogs","modalContainer","modals","onSelect","createPortal","DynamicForm","components","split","findIndex","c","toUpperCase","fieldLabel","substring","formComponent","fieldEditor","newValue","newModel","assign","fieldType","checked","padStart","form","ToolbarLegend","rows","colSpan","time","onNext","_subject","bufferTime"],"mappings":"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","file":"static/js/main.09002437.chunk.js","sourcesContent":["import { Float32BufferAttribute, BufferGeometry, Vector3 } from \"three\";\r\nimport { Generate, IPoint3D } from \"./lib\";\r\n\r\nexport enum generationMode {\r\n    Uniform,\r\n    LSymmetrical,\r\n    WSymmetrical,\r\n    LWSymmetrical\r\n}\r\n\r\nexport enum generationParity {\r\n    All,\r\n    Odd,\r\n    Even\r\n}\r\n\r\nexport interface ISidePlaneProps {\r\n    length: number;\r\n    width: number;\r\n    pointsMapper: (l: number, w: number) => IPoint3D;\r\n    mode: generationMode;\r\n    parity: generationParity;\r\n    log?: boolean;\r\n}\r\n\r\nexport type pointMapper = (p: IPoint3D, allPoints: IPoint3D[]) => IPoint3D;\r\n\r\nexport interface IVerticeData {\r\n    vertice: IPoint3D;\r\n    handlers: pointMapper[];\r\n}\r\n\r\nexport class SidePlane {\r\n    props: ISidePlaneProps;\r\n    vertices: IVerticeData[] = [];\r\n    indices: number[] = [];\r\n    uvs: number[] = [];\r\n    normals: number[] = [];\r\n\r\n    get offset() {\r\n        return this.props.length * this.props.width;\r\n    }\r\n\r\n    get width() {\r\n        return this.props.width;\r\n    }\r\n\r\n    get length() {\r\n        return this.props.length;\r\n    }\r\n\r\n    constructor(props: ISidePlaneProps) {\r\n        const { length, width, pointsMapper } = props;\r\n        const { vertices, indices, uvs } = this;\r\n\r\n        this.props = props;\r\n\r\n        for (const l of Generate.range(0, length)) {\r\n            for (const w of Generate.range(0, width)) {\r\n                vertices.push({\r\n                    vertice: pointsMapper(l, w),\r\n                    handlers: []\r\n                });\r\n                uvs.push(0.5, 0.5);\r\n                //uvs.push(1, 1);\r\n            }\r\n        }\r\n\r\n        for (const l of Generate.range(0, length)) {\r\n            for (const w of Generate.range(0, width)) {\r\n                const p = pointsMapper(l, w);\r\n                vertices.push({\r\n                    vertice: p,\r\n                    handlers: []\r\n                });\r\n                uvs.push(0.5, 0.5);\r\n                //uvs.push(1, 1);\r\n            }\r\n        }\r\n\r\n        const facesFromIndexes = (\r\n            offset: number, \r\n            l: number, \r\n            w: number,\r\n            side: \"front\" | \"back\"\r\n            ) => {\r\n            const { mode } = this.props;\r\n\r\n            const lHalf = (length - 1) / 2;\r\n            const wHalf = (width - 1) / 2;\r\n\r\n            const i0 = offset + l * width + w;\r\n            const i1 = i0 + 1;\r\n            const i2 = i0 + width;\r\n            const i3 = i2 + 1;\r\n\r\n            switch (side) {\r\n                case \"front\":\r\n                    switch (mode) {\r\n                        case generationMode.Uniform: \r\n                            return [\r\n                                i0, i1, i2,\r\n                                i1, i3, i2,\r\n                            ];  \r\n                        case generationMode.LSymmetrical:\r\n                            if ( l < lHalf) {\r\n                                return [\r\n                                    i0, i1, i3,\r\n                                    i0, i3, i2,\r\n                                ]; \r\n                            }\r\n                            else {\r\n                                return [\r\n                                    i0, i1, i2,\r\n                                    i1, i3, i2,\r\n                                ]; \r\n                            }  \r\n                        case generationMode.WSymmetrical:\r\n                            if ( w < wHalf) {\r\n                                return [\r\n                                    i0, i1, i3,\r\n                                    i0, i3, i2,\r\n                                ]; \r\n                            }\r\n                            else {\r\n                                return [\r\n                                    i0, i1, i2,\r\n                                    i1, i3, i2,\r\n                                ]; \r\n                            }    \r\n                        case generationMode.LWSymmetrical:\r\n                            if ((w < wHalf) === (l < lHalf)) {\r\n                                return [\r\n                                    i0, i1, i3,\r\n                                    i0, i3, i2,\r\n                                ]; \r\n                            }\r\n                            else {\r\n                                return [\r\n                                    i0, i1, i2,\r\n                                    i1, i3, i2,\r\n                                ]; \r\n                            }  \r\n                    }\r\n                    break;\r\n                case \"back\":\r\n                    switch (mode) {\r\n                        case generationMode.Uniform: \r\n                            return [\r\n                                i0, i2, i1,\r\n                                i1, i2, i3,\r\n                            ]\r\n                        case generationMode.LSymmetrical:\r\n                            if ( l < lHalf) {\r\n                                return [\r\n                                    i0, i3, i1,\r\n                                    i0, i2, i3,\r\n                                ]  \r\n                            }\r\n                            else {\r\n                                return [\r\n                                    i0, i2, i1,\r\n                                    i1, i2, i3,\r\n                                ]  \r\n                            }   \r\n                        case generationMode.WSymmetrical:\r\n                            if ( w < wHalf) {\r\n                                return [\r\n                                    i0, i3, i1,\r\n                                    i0, i2, i3,\r\n                                ]  \r\n                            }\r\n                            else {\r\n                                return [\r\n                                    i0, i2, i1,\r\n                                    i1, i2, i3,\r\n                                ]  \r\n                            } \r\n                        case generationMode.LWSymmetrical:\r\n                            if ((w < wHalf) === (l < lHalf)) {\r\n                                return [\r\n                                    i0, i3, i1,\r\n                                    i0, i2, i3,\r\n                                ]  \r\n                            }\r\n                            else {\r\n                                return [\r\n                                    i0, i2, i1,\r\n                                    i1, i2, i3,\r\n                                ]  \r\n                            } \r\n                    }\r\n            }\r\n\r\n            return [];\r\n        }\r\n\r\n        for (const l of Generate.range(0, length - 1)) {\r\n            for (const w of Generate.range(0, width - 1)) {\r\n                if (!this.parityMatch((l + w) % 2 !== 0)) continue;\r\n\r\n                indices.push(...facesFromIndexes(0, l, w, \"front\"));\r\n            }\r\n        }\r\n\r\n        for (const l of Generate.range(0, length - 1)) {\r\n            for (const w of Generate.range(0, width - 1)) {\r\n                if (!this.parityMatch((l + w) % 2 !== 0)) continue;\r\n\r\n                indices.push(...facesFromIndexes(this.offset, l, w, \"back\"));\r\n            }\r\n        }\r\n    }\r\n\r\n    private parityMatch(value: boolean) {\r\n        const { parity } = this.props;\r\n        switch (parity) {\r\n            case generationParity.Even: return value === false;\r\n            case generationParity.Odd: return value === true;\r\n            default: return true;\r\n        }\r\n    }\r\n\r\n    public getVertice(index: number) {\r\n        return this.vertices[index].vertice;\r\n    }\r\n\r\n    public apply(handler: (l: number, w: number, p: IVerticeData) => void) {\r\n        const { length, width } = this.props;\r\n        const { vertices } = this;\r\n        for (const l of Generate.range(0, length)) {\r\n            for (const w of Generate.range(0, width)) {\r\n                handler(l, w, vertices[l * width + w]);\r\n            }\r\n        }\r\n\r\n        for (const l of Generate.range(0, length)) {\r\n            for (const w of Generate.range(0, width)) {\r\n                handler(l, w, vertices[this.offset + l * width + w]);\r\n            }\r\n        }     \r\n    }\r\n\r\n    public transformedVertices(scale: number) {\r\n        const { vertices } = this;\r\n        const allPoints = vertices.map(v => v.vertice);\r\n\r\n        const points: IPoint3D[] = [];\r\n        vertices.forEach(v => {\r\n            let p = v.vertice;\r\n            v.handlers.forEach(h => {\r\n                p = h(p, allPoints);\r\n            });\r\n            points.push({\r\n                x: p.x * scale,\r\n                y: p.y * scale,\r\n                z: p.z * scale\r\n            });\r\n        });\r\n\r\n        return points;\r\n    }\r\n    \r\n    public geometry(scale: number): BufferGeometry {\r\n        const { vertices, indices, uvs, normals } = this;\r\n        const { log } = this.props;\r\n\r\n        const r = new BufferGeometry();\r\n\r\n        const points: number[] = [];\r\n\r\n        const transformed = this.transformedVertices(scale);\r\n        transformed.forEach(p => points.push(p.x, p.y, p.z));\r\n\r\n        const getVector = (index: number) => {\r\n            const vertice =  vertices[index].vertice\r\n            return new Vector3(vertice.x, vertice.y, vertice.z);\r\n        }\r\n        \r\n        let normalIndex = 0;\r\n        const setNormals = (...values: number[]) => {\r\n            for (const value of values) {\r\n                normals[normalIndex++] = value;\r\n            }\r\n        }\r\n\r\n        const setNormalVectors = (...values: Vector3[]) => {\r\n            for (const value of values) {\r\n                if (log) console.log(value);\r\n                setNormals(value.x, value.y, value.z);\r\n            }\r\n        }\r\n\r\n        for (let idx = 0; idx < indices.length; idx += 3) {\r\n            const v_0_1 = new Vector3().subVectors(getVector(indices[idx + 1]), getVector(indices[idx]));\r\n            const v_0_2 = new Vector3().subVectors(getVector(indices[idx + 2]), getVector(indices[idx]));\r\n            const cross1 = new Vector3().crossVectors(v_0_1, v_0_2).normalize();\r\n            setNormalVectors(cross1, cross1, cross1);\r\n        }\r\n \r\n        r.setAttribute('position', new Float32BufferAttribute(points, 3));\r\n        r.setAttribute('normal', new Float32BufferAttribute(normals, 3));\r\n        r.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\r\n        r.setIndex(indices);\r\n\r\n        r.computeVertexNormals();\r\n\r\n        return r;\r\n    }\r\n}\r\n","import { IPoint2D } from \"../../lib\";\r\n\r\nexport enum drawingMode {\r\n    Contour,\r\n    Wheel\r\n}\r\n\r\nexport enum wheelDrawingType {\r\n    None,\r\n    Top,\r\n    Side\r\n}\r\n\r\nexport interface IWheelModel {\r\n    center: IPoint2D;\r\n    wheelRadius: number;\r\n    arcRadius: number;\r\n    offset: number;\r\n    width: number;\r\n}\r\n\r\nexport enum sectionEditorMode {\r\n    None,\r\n    Pick,\r\n    Edit\r\n}","import { BufferGeometry } from \"three\";\r\nimport { IWheelModel } from \"./components/drawing-model\";\r\nimport { IDesign } from \"./DesignStore\";\r\nimport { Generate, IPoint2D, IPoint3D, ISectionData, ISectionPoints, Tools } from \"./lib\";\r\nimport { generationMode, generationParity, SidePlane } from \"./SidePlane\";\r\n\r\nexport class CountourQuery\r\n{\r\n    constructor(private countour: IPoint2D[], private segments: IPoint2D[][]) {\r\n\r\n    }\r\n\r\n    query(l: number) {\r\n        const {countour, segments } = this;\r\n        for (let i = l; i >= 0; i--)\r\n            if (segments[i]) return segments[i];\r\n\r\n        return countour;\r\n    }\r\n}\r\n\r\nexport class BodyShape {\r\n    private left: SidePlane;\r\n    private right: SidePlane;\r\n    private front: SidePlane;\r\n    private back: SidePlane;\r\n    private top: SidePlane;\r\n    private bottom: SidePlane;\r\n\r\n    get halfLegth() {\r\n        return (this.lengthPoints - 1) / 2;\r\n    }\r\n    get halfWidth() {\r\n        return (this.widthPoints - 1) / 2;\r\n    }\r\n    get halfHeight() {\r\n        return (this.heightPoints - 1) / 2;\r\n    }\r\n\r\n    constructor(\r\n        private lengthPoints: number, \r\n        private widthPoints: number, \r\n        private heightPoints: number,\r\n        parity: generationParity) {\r\n\r\n        const length = lengthPoints - 1;\r\n        const width = widthPoints - 1;\r\n        const height = heightPoints - 1;\r\n\r\n        const halfLegth = 0;// (lengthPoints - 1) / 2;\r\n        const halfWidth = 0;//(widthPoints - 1) / 2;\r\n        const halfHeight = 0;//(heightPoints - 1) / 2;\r\n\r\n        //console.log(halfLegth, halfWidth, halfHeight);\r\n\r\n        const scale = (points: number[]): IPoint3D => {\r\n            const scaled = points.map(p => p);\r\n            return {\r\n                x: scaled[0],\r\n                y: scaled[1],\r\n                z: scaled[2]\r\n            };\r\n        };\r\n\r\n        this.left = new SidePlane({\r\n            length: lengthPoints,\r\n            width: heightPoints,\r\n            pointsMapper: (l, w) => scale([l - halfLegth, w - halfHeight, width - halfWidth]),\r\n            mode: generationMode.LSymmetrical,\r\n            parity: parity\r\n        });\r\n\r\n        this.right = new SidePlane({\r\n            length: lengthPoints,\r\n            width: heightPoints,\r\n            pointsMapper: (l, w) => scale([l - halfLegth, w - halfHeight, - halfWidth]),\r\n            mode: generationMode.LSymmetrical,\r\n            parity: parity\r\n        });\r\n\r\n        this.front = new SidePlane({\r\n            length: widthPoints,\r\n            width: heightPoints,\r\n            pointsMapper: (l, w) => scale([-halfLegth, w - halfHeight, l - halfWidth]),\r\n            mode: generationMode.LSymmetrical,\r\n            parity: parity \r\n        });\r\n\r\n        this.back = new SidePlane({\r\n            length: widthPoints,\r\n            width: heightPoints,\r\n            pointsMapper: (l, w) => scale([length - halfLegth, w - halfHeight, l - halfWidth]),\r\n            mode: generationMode.LSymmetrical,\r\n            parity: parity \r\n        });\r\n\r\n        this.top = new SidePlane({\r\n            length: lengthPoints,\r\n            width: widthPoints,\r\n            pointsMapper: (l, w) => scale([l - halfLegth, height - halfHeight, w - halfWidth]),\r\n            mode: generationMode.LWSymmetrical,\r\n            parity: parity \r\n        });    \r\n\r\n        this.bottom = new SidePlane({\r\n            length: lengthPoints,\r\n            width: widthPoints,\r\n            pointsMapper: (l, w) => scale([l - halfLegth, 0/*height - halfHeight*/, w - halfWidth]),\r\n            mode: generationMode.LWSymmetrical,\r\n            parity: parity \r\n        });  \r\n    }\r\n\r\n    public applyContour(\r\n        sidePoints: IPoint2D[],\r\n        contourFrontPoints: IPoint2D[],\r\n        topPoints: IPoint2D[],\r\n        wheels: IWheelModel[],\r\n        frontSegments: IPoint2D[][]\r\n    ) {\r\n        const { lengthPoints, widthPoints, heightPoints } = this;\r\n\r\n        const offsetScale = (value: number, offset: number, scale: number) => {\r\n            return (value - offset) * scale + offset;\r\n        }\r\n\r\n        const contourQuery = new CountourQuery(contourFrontPoints, frontSegments);\r\n        const frontPoints = (l: number) => {\r\n            return contourQuery.query(l);\r\n        }\r\n\r\n        this.left.apply((l, w, p) => {\r\n            const frontScale = frontPoints(l)[widthPoints - 1].y / heightPoints;\r\n            const yScale = sidePoints[l].y / heightPoints;\r\n            const zScale = topPoints[l].y / widthPoints;\r\n\r\n            p.handlers = [(p) => {\r\n                const wheel = wheels.find(w => Tools.betweenInclusive(p.x, w.center.x - w.arcRadius, w.center.x + w.arcRadius));\r\n\r\n                if (wheel) {\r\n                    const wheelHeight = Tools.pythHB(wheel.arcRadius, wheel.center.x - p.x );\r\n                    const y = Math.max(wheel.center.y + wheelHeight, p.y * yScale * frontScale);\r\n                    return {\r\n                        x: p.x,\r\n                        y: y,//p.y * yScale * frontScale,\r\n                        z: offsetScale(p.z, this.halfWidth, zScale)\r\n                    }\r\n                }\r\n                else {\r\n                    return {\r\n                        x: p.x,\r\n                        y: p.y * yScale * frontScale,\r\n                        z: offsetScale(p.z, this.halfWidth, zScale)\r\n                    }\r\n                }\r\n            }]\r\n        });\r\n\r\n        this.right.apply((l, w, p) => {\r\n            const frontScale = frontPoints(l)[0].y / heightPoints;\r\n            const yScale = sidePoints[l].y / heightPoints;\r\n            const zScale = topPoints[l].y / widthPoints;\r\n\r\n            p.handlers = [(p) => {\r\n                const wheel = wheels.find(w => Tools.betweenInclusive(p.x, w.center.x - w.arcRadius, w.center.x + w.arcRadius));\r\n\r\n                if (wheel) {\r\n                    const wheelHeight = Tools.pythHB(wheel.arcRadius, wheel.center.x - p.x );\r\n                    const y = Math.max(wheel.center.y + wheelHeight, p.y * yScale * frontScale);\r\n                    return {\r\n                        x: p.x,\r\n                        y: y,//p.y * yScale * frontScale,\r\n                        z: offsetScale(p.z, this.halfWidth, zScale)\r\n                    }\r\n                }\r\n                else {\r\n                    return {\r\n                        x: p.x,\r\n                        y: p.y * yScale * frontScale,\r\n                        z: offsetScale(p.z, this.halfWidth, zScale)\r\n                    }\r\n                }\r\n            }]\r\n        });\r\n\r\n        this.top.apply((l, w, p) => {\r\n            const frontScale = frontPoints(l)[w].y / heightPoints;\r\n            const yScale = sidePoints[l].y / heightPoints;\r\n            const zScale = topPoints[l].y / widthPoints;\r\n\r\n            p.handlers = [(p) => {\r\n                const wheel = wheels.find(w => Tools.betweenInclusive(p.x, w.center.x - w.arcRadius, w.center.x + w.arcRadius));\r\n\r\n                if (wheel) {\r\n                    const wheelHeight = Tools.pythHB(wheel.arcRadius, wheel.center.x - p.x );\r\n\r\n                    const yTop = p.y * yScale * frontScale;\r\n                    const topOffset = p.z == 0 || p.z == widthPoints - 1 ? 0 : 1;\r\n\r\n                    const wheelTop = wheel.center.y + wheelHeight + topOffset;\r\n\r\n                    const y = Tools.betweenInclusive(p.z, this.halfWidth - wheel.offset + 1, this.halfWidth + wheel.offset - 1)\r\n                        ? yTop\r\n                        : Math.max(yTop, wheelTop);\r\n\r\n                    return {\r\n                        x: p.x,\r\n                        y: y,\r\n                        z: offsetScale(p.z, this.halfWidth, zScale)\r\n                    }         \r\n                }\r\n                else {\r\n                    return {\r\n                        x: p.x,\r\n                        y: p.y * yScale * frontScale,\r\n                        z: offsetScale(p.z, this.halfWidth, zScale)\r\n                    }\r\n                }\r\n            }]\r\n        });\r\n\r\n        this.bottom.apply((l, w, p) => {\r\n            const frontScale = frontPoints(l)[w].y / heightPoints;\r\n            const yScale = sidePoints[l].y / heightPoints;\r\n            const zScale = topPoints[l].y / widthPoints;\r\n\r\n            p.handlers = [(p, allPoints) => {\r\n                const wheel = wheels.find(w => Tools.betweenInclusive(p.x, w.center.x - w.arcRadius, w.center.x + w.arcRadius));\r\n\r\n                if (wheel) {\r\n                    const wheelHeight = Tools.pythHB(wheel.arcRadius, wheel.center.x - p.x );\r\n\r\n                    const y = Tools.betweenInclusive(p.z, this.halfWidth - wheel.offset, this.halfWidth + wheel.offset)\r\n                        ? p.y * yScale * frontScale\r\n                        : wheel.center.y + wheelHeight;\r\n\r\n                    return {\r\n                        x: p.x,\r\n                        y: y,\r\n                        z: offsetScale(p.z, this.halfWidth, zScale)\r\n                    }         \r\n                }\r\n                else {\r\n                    return {\r\n                        x: p.x,\r\n                        y: p.y * yScale * frontScale,\r\n                        z: offsetScale(p.z, this.halfWidth, zScale)\r\n                    }\r\n                }\r\n            }]\r\n        });\r\n\r\n        this.front.apply((l, w, p) => {\r\n            const frontScale = frontPoints(0)[l].y / heightPoints;\r\n            const yScale = sidePoints[0].y / heightPoints;\r\n            const zScale = topPoints[0].y / widthPoints;\r\n\r\n            p.handlers = [(p) => {\r\n                return {\r\n                    x: p.x,\r\n                    y: p.y * yScale * frontScale,\r\n                    z: offsetScale(p.z, this.halfWidth, zScale)\r\n                }\r\n            }]\r\n        });\r\n\r\n        this.back.apply((l, w, p) => {\r\n            const frontScale = frontPoints(this.top.length - 1)[l].y / heightPoints;\r\n            const yScale = sidePoints[lengthPoints - 1].y / heightPoints;\r\n            const zScale = topPoints[lengthPoints - 1].y / widthPoints;\r\n\r\n            p.handlers = [(p) => {\r\n                return {\r\n                    x: p.x,\r\n                    y: p.y * yScale * frontScale,\r\n                    z: offsetScale(p.z, this.halfWidth, zScale)\r\n                }\r\n            }]\r\n        });\r\n    }\r\n\r\n\r\n    public sectionPoints(\r\n        design: IDesign,\r\n        section: ISectionData): ISectionPoints {\r\n        const { \r\n            front, top,\r\n            //left, right, \r\n            //back,  bottom \r\n        } = this;\r\n\r\n        const result : ISectionPoints = {\r\n            front: [],\r\n            side: [],\r\n            top: []\r\n        }\r\n\r\n        if (section === null || [section.front, section.side, section.top].every(p => p === null)) return result;\r\n\r\n        const transformed = top.transformedVertices(1);\r\n\r\n        if (section.front !== null) {\r\n            if (design.frontSegments[section.front]) {\r\n                result.front.push(...design.frontSegments[section.front]);\r\n            }\r\n            else {\r\n                const sourcePoints = Generate\r\n                .range(0, front.length)\r\n                .map(y => transformed[y + (section.front || 0) * front.length])\r\n                ;\r\n\r\n                result.front.push(...sourcePoints.map(p => ({ x: p.x, y: p.y })));\r\n            }\r\n        }\r\n\r\n        if (section.top !== null) {\r\n            const sourcePoints = Generate\r\n                .range(0, top.length)\r\n                .map(y => transformed[(section.top || 0) + y * top.width])\r\n                ;\r\n\r\n            result.top.push(...sourcePoints.map(p => ({ x: p.x, y: p.z })));\r\n        }\r\n\r\n        if (section.side !== null) {\r\n            const sourcePoints = Generate\r\n                .range(0, top.length)\r\n                .map(y => transformed[(section.side || 0) + y * top.width])\r\n                ;\r\n\r\n            result.side.push(...sourcePoints.map(p => ({ x: p.x, y: p.y })));\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public get geometry(): BufferGeometry[] {\r\n        const { left, right, front, back, top, bottom } = this;\r\n        return [\r\n            left,\r\n            right,\r\n            front, \r\n            back, \r\n            top,\r\n            bottom\r\n        ].map(p => p.geometry(5));\r\n    }   \r\n}\r\n","import { IDesign } from \"./DesignStore\";\r\nimport { Generate, IPoint2D } from \"./lib\";\r\n\r\nexport class DesignTools {\r\n    constructor(private design: IDesign) {\r\n\r\n    }\r\n\r\n    get interpolationSource() {\r\n        const { design } = this;\r\n        const { frontSegments, frontPoints  } = design;\r\n        const interpolatedSegments: IPoint2D[][] = [...frontSegments];\r\n\r\n        // prefill first segmet with from countour\r\n        if (!interpolatedSegments[0]) interpolatedSegments[0] = [...frontPoints];\r\n\r\n        return interpolatedSegments;\r\n    }\r\n\r\n    get existingIndexes() {\r\n        const { design } = this;\r\n        const { boxSize } = design;\r\n        const interpolationSource = this.interpolationSource;\r\n        const sectionsIndexes = Generate.range(0, boxSize.x);\r\n        const existingSections = sectionsIndexes.filter(i => interpolationSource[i]);\r\n\r\n        return existingSections;\r\n    }\r\n\r\n    interpolateSections() {\r\n        const { design } = this;\r\n        const { boxSize } = design;\r\n\r\n        const interpolatedSegments = this.interpolationSource;\r\n        const existingSections = this.existingIndexes;\r\n\r\n        for (let idx = 0; idx < existingSections.length - 1; idx++)\r\n        {\r\n            const startSectionIdx = existingSections[idx];\r\n            const startSection = interpolatedSegments[startSectionIdx];\r\n\r\n            const nextSectionIdx = existingSections[idx + 1];\r\n            const nextSection = interpolatedSegments[nextSectionIdx];\r\n            const dx = nextSectionIdx - startSectionIdx;\r\n            const dy = Generate.range(0, boxSize.y).map(i => (nextSection[i].y - startSection[i].y) / dx);\r\n\r\n            for (let sectionIdx = startSectionIdx + 1; sectionIdx < nextSectionIdx; sectionIdx++) {\r\n                const interpolatedSection = Generate.range(0, boxSize.y).map((i): IPoint2D => ({\r\n                    x: i,\r\n                    y: startSection[i].y + dy[i] * (sectionIdx - startSectionIdx)\r\n                }));\r\n                interpolatedSegments[sectionIdx] = interpolatedSection;\r\n            }\r\n        }\r\n\r\n        return interpolatedSegments;\r\n    }\r\n}","import React from \"react\"\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport { BodyShape } from \"./BodyShape\";\r\nimport { IRenderSettings } from \"./lib\";\r\nimport { Vector3 } from \"three\";\r\nimport { generationParity } from \"./SidePlane\";\r\nimport { Subject, debounce, Subscription, interval } from \"rxjs\";\r\nimport { IDesign } from \"./DesignStore\";\r\nimport { DesignTools } from \"./DesignTools\";\r\n// https://dustinpfister.github.io/2018/04/13/threejs-orbit-controls/\r\n// https://stackoverflow.com/questions/2368784/draw-on-html5-canvas-using-a-mouse\r\n// https://threejs.org/docs/#examples/en/controls/OrbitControls\r\n\r\nexport interface IProps {\r\n    height: number;\r\n    width: number;\r\n    design: IDesign;\r\n    renderSettings: IRenderSettings;\r\n}\r\n\r\ninterface IState {\r\n}\r\n\r\nexport class AppScene extends React.Component<IProps, IState> {\r\n    _subscription: Subscription;\r\n    _updateStream: Subject<{}> = new Subject<{}>();\r\n\r\n    scene: THREE.Scene | null = null;\r\n    camera: THREE.PerspectiveCamera | null = null;\r\n    light: THREE.DirectionalLight | null = null;\r\n    renderer: THREE.WebGLRenderer | null = null;\r\n    bodyMesh: THREE.Mesh[] | null = null;\r\n    orbitControls: OrbitControls | null = null;\r\n\r\n    container: HTMLDivElement | null = null;\r\n\r\n    public constructor(props: IProps)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            flatShading: true\r\n        }\r\n        this.animate = this.animate.bind(this);\r\n        \r\n        this._subscription = this\r\n            ._updateStream\r\n            .pipe(debounce(() => interval(500)))\r\n            .subscribe(() => this.updateMesh(\"debounce\"));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.init();\r\n        this.subscribeForResizeEvents();\r\n        this.updateMesh(\"mount\");\r\n\r\n        requestAnimationFrame(this.animate);\r\n        this.forceUpdate();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this._updateStream.next({});\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._subscription.unsubscribe();\r\n    }\r\n\r\n    updateMesh(from: string) {\r\n        const { scene } = this;\r\n\r\n        if (!scene) return;\r\n\r\n        if (this.bodyMesh)\r\n            this.bodyMesh.forEach(m => this.scene?.remove(m));\r\n\r\n        this.bodyMesh = [];\r\n\r\n        const { \r\n            design,\r\n            renderSettings\r\n        } = this.props;\r\n        const { \r\n            boxSize, \r\n            frontPoints, \r\n            sidePoints, \r\n            topPoints, \r\n            colorOdd, \r\n            colorEven, \r\n            wheels \r\n        } = design;\r\n\r\n        const { flatShading, wireframes } = renderSettings;\r\n        const wireframesColor = 0x00FF00;\r\n        \r\n        const parts = [\r\n            { parity: generationParity.Odd, color: colorOdd },\r\n            { parity: generationParity.Even, color: colorEven }          \r\n        ];\r\n\r\n        const designTools = new DesignTools(design);\r\n        const interpolatedSegments = designTools.interpolateSections();\r\n    \r\n        for (const p of parts) {\r\n            const body = new BodyShape(boxSize.x, boxSize.y, boxSize.z, p.parity);\r\n            body.applyContour(sidePoints, frontPoints, topPoints, wheels, interpolatedSegments);\r\n\r\n            //const material = new THREE.MeshBasicMaterial( { color: 0xffff00, wireframe: true } );\r\n            //const material = new THREE.MeshBasicMaterial( { color: 0xffff00 } );\r\n            const material = new THREE.MeshPhongMaterial({ \r\n                color: wireframes ? wireframesColor : p.color, \r\n                wireframe: wireframes, \r\n                flatShading: flatShading \r\n            });\r\n            this.bodyMesh.push(...body.geometry.map(m => new THREE.Mesh( m, material )));\r\n        }\r\n\r\n        this.bodyMesh.forEach(m => scene.add( m ));\r\n    }\r\n\r\n    initGround() {\r\n        if (!this.scene) return;\r\n\r\n        const ground = new THREE.Mesh( new THREE.PlaneGeometry( 2000, 2000 ), new THREE.MeshPhongMaterial( { color: 0x999999, depthWrite: false } ) );\r\n        ground.rotation.x = - Math.PI / 2;\r\n        ground.receiveShadow = true;\r\n        this.scene.add( ground );\r\n\r\n        const grid = new THREE.GridHelper( 2000, 20, 0x000000, 0x000000 );\r\n        const gridMaterial = grid.material as THREE.Material;\r\n        gridMaterial.opacity = 0.2;\r\n        gridMaterial.transparent = true;\r\n        this.scene.add( grid );\r\n    }\r\n\r\n    init()\r\n    {\r\n        this.scene = new THREE.Scene();\r\n    \r\n        // The X axis is red. The Y axis is green. The Z axis is blue.\r\n        var axesHelper = new THREE.AxesHelper( 500 );\r\n        this.scene.add( axesHelper );\r\n\r\n        //this.scene.background = new THREE.Color( 0xa0a0a0 );\r\n        //this.scene.fog = new THREE.Fog( 0xa0a0a0, 200, 5000 );\r\n\r\n        this.camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 1, 10000 );\r\n        this.camera.position.z = 1000;\r\n        \r\n        this.renderer = new THREE.WebGLRenderer();\r\n        this.renderer.setPixelRatio( window.devicePixelRatio );\r\n        this.renderer.shadowMap.enabled = true;\r\n\r\n        this.orbitControls = new OrbitControls(this.camera, this.renderer.domElement);\r\n        this.orbitControls.target.set( 0, 25, 0 );\r\n        this.orbitControls.update();\r\n\r\n        this.scene.add( new THREE.AmbientLight( 0x777777 ) );\r\n\r\n        this.light = new THREE.DirectionalLight( 0xdfebff, 1 );\r\n        this.light.position.set( 500, 600, 700 );\r\n        //light.position.multiplyScalar( 1.3 );\r\n\r\n        this.light.castShadow = true;\r\n\r\n        this.light.shadow.mapSize.width = 1024;\r\n        this.light.shadow.mapSize.height = 1024;\r\n\r\n        const d = 300;\r\n\r\n        this.light.shadow.camera.left = - d;\r\n        this.light.shadow.camera.right = d;\r\n        this.light.shadow.camera.top = d;\r\n        this.light.shadow.camera.bottom = - d;\r\n\r\n        this.light.shadow.camera.far = 1000;\r\n\r\n        this.scene.add( this.light );\r\n\r\n        this.initGround();\r\n    }\r\n\r\n    ang = 0;\r\n    animate()\r\n    {\r\n        const { renderer, scene, camera, orbitControls } = this;\r\n\r\n        requestAnimationFrame(this.animate);\r\n\r\n       \r\n        this.ang += 0.01;\r\n        const vec = new Vector3(500, 600, 700);\r\n        vec.applyAxisAngle(new Vector3(0, 1, 0), this.ang);\r\n\r\n        this.light?.position?.set(vec.x, vec.y, vec.z);\r\n\r\n        orbitControls?.update();\r\n\r\n        if (renderer && scene && camera) {\r\n            renderer.render( scene, camera );\r\n        }\r\n    }\r\n\r\n    onContainerCreated(d: HTMLDivElement | null) {\r\n        this.container = d;\r\n        if (d && this.renderer?.domElement)\r\n        {\r\n            this.renderer.setSize(d.offsetWidth - 2, d.offsetHeight - 2);\r\n            if (this.camera) {\r\n                this.camera.aspect = d.offsetWidth / d.offsetHeight;\r\n                this.camera.updateProjectionMatrix();\r\n            }\r\n\r\n            d.appendChild?.(this.renderer.domElement);                \r\n        }\r\n    }\r\n\r\n    subscribeForResizeEvents() {\r\n        window.addEventListener(\"resize\", () => {\r\n            const { renderer, camera, container } = this;\r\n\r\n            if (renderer && container && camera) {\r\n                const newWidth = container.offsetWidth - 2;\r\n                const newHeight = container.offsetHeight - 2;\r\n                camera.aspect = newWidth / newHeight;\r\n                camera.updateProjectionMatrix();\r\n                renderer.setSize(newWidth, newHeight);\r\n            }\r\n        });\r\n    }\r\n\r\n    public render() {\r\n        const { width, height } = this.props;\r\n        console.log('scene', width, height);\r\n        const sizeProps: React.CSSProperties = {\r\n            width: width,\r\n            height: height\r\n          };\r\n        return (\r\n            <div style={sizeProps}>\r\n                <div style={sizeProps} ref={(d) => this.onContainerCreated(d)} />\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { useCallback } from \"react\";\r\nimport { Component } from \"react\";\r\nimport { IDesign } from \"../../DesignStore\";\r\nimport { DesignTools } from \"../../DesignTools\";\r\nimport { BufferStream, Generate, IPoint2D } from \"../../lib\";\r\nimport { Tools } from \"../../lib/tools\";\r\nimport { drawingMode, IWheelModel, sectionEditorMode, wheelDrawingType } from \"../drawing-model\";\r\nimport \"./drawing-canvas.scss\";\r\nimport { DrawingWheels } from \"./drawing-wheels\";\r\n\r\nexport interface IDrawingCanvasProps {\r\n    id: string;\r\n    symmetrical: boolean;\r\n    height: number;\r\n    width: number;\r\n    maxY: number;\r\n    contour: IPoint2D[];\r\n    section: IPoint2D[] | null;\r\n    sectionBaseline: IPoint2D[] | null;\r\n    wheelDrawing: wheelDrawingType;\r\n    wheels: IWheelModel[] | null;\r\n    onCountourChange: (samples: IPoint2D[], wheels: IWheelModel[] | null) => void;\r\n    onSectionSelected: (showSectionSelector: boolean, section: number) => void;\r\n    onSectionChanged: (sections: number[], points: IPoint2D[] | null) => void;\r\n    sections: number;\r\n    design: IDesign;\r\n    sectionMode: sectionEditorMode;\r\n}\r\n\r\nenum wheelDrawingMode {\r\n    Create,\r\n    MoveCenter,\r\n    ChangeRadius,\r\n    ChangeWidth,\r\n    ChangeOffset\r\n}\r\n\r\ninterface IWheelData {\r\n    wheel: IWheelModel | null;\r\n    wheelIndex: number;\r\n    distToCenter: number;\r\n    distToRadiusHandler: number;\r\n    distToOffsetHandler: number;\r\n    distToWidthHandler: number;\r\n}\r\n\r\ninterface IProps extends IDrawingCanvasProps {\r\n    mode: drawingMode;\r\n    showSectionSelector: boolean;\r\n    sectionIndex: number;\r\n}\r\n\r\ninterface IState {\r\n    margin: number;\r\n    sectionSelectorHeight: number;\r\n    //width: number;\r\n    //height: number;\r\n    scale: number;\r\n    wheelMode: wheelDrawingMode;\r\n    wheelIndex: number;\r\n}\r\n\r\nexport class DrawingCanvas extends Component<IProps, IState> {\r\n    canvas: HTMLCanvasElement | null = null;\r\n    sectionCanvas: HTMLCanvasElement | null = null;\r\n\r\n    buffer: BufferStream<IPoint2D> | null = null;\r\n\r\n    enabled = false;\r\n    lastPoint: IPoint2D | null = null;\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            scale: 0,\r\n            margin: 25,\r\n            sectionSelectorHeight: 80,\r\n            wheelMode: wheelDrawingMode.Create,\r\n            wheelIndex: -1\r\n        }\r\n\r\n        this.onMouseUp = this.onMouseUp.bind(this);\r\n        this.processPoints = this.processPoints.bind(this);\r\n        this.buffer = new BufferStream<IPoint2D>(50, this.processPoints);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mouseup\", this.onMouseUp);\r\n        this.updateScale();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mouseup\", this.onMouseUp);\r\n    }\r\n\r\n    updateScale() {\r\n        const { width, height, contour, maxY} = this.props;\r\n        const { sectionSelectorHeight, scale: currentScale, margin } = this.state;\r\n\r\n        const scale = Math.min(\r\n            Math.floor((width - 2 * margin - 20) / contour.length),\r\n            Math.floor((height - 2 * margin - sectionSelectorHeight) / maxY)\r\n        );\r\n\r\n        console.log('scale', scale);\r\n\r\n        if (currentScale != scale) {\r\n            this.setState({\r\n                scale\r\n            })\r\n        }\r\n    }\r\n\r\n    get currentSamples(): IPoint2D[] {\r\n        const { contour, section, sectionBaseline, showSectionSelector } = this.props;\r\n\r\n        const sectionPoints = section || sectionBaseline;\r\n        const source = \r\n            showSectionSelector && sectionPoints\r\n            ? sectionPoints\r\n            : contour;\r\n        \r\n        return source.map(s => ({ ...s }));\r\n    }\r\n\r\n    set currentSamples(newData: IPoint2D[]) {\r\n        const { wheels, showSectionSelector, sectionIndex, onCountourChange, onSectionChanged } = this.props;\r\n\r\n        if (showSectionSelector) {\r\n            onSectionChanged([sectionIndex], newData);\r\n        }\r\n        else {\r\n            onCountourChange(newData, wheels);\r\n        }\r\n    }\r\n\r\n    mouseDisconnected() {\r\n        this.enabled = false;\r\n        this.lastPoint = null;\r\n        this.setState({\r\n            wheelMode: wheelDrawingMode.Create,\r\n            wheelIndex: -1\r\n        }, () => {\r\n            const { contour, wheels, onCountourChange } = this.props;\r\n            if (wheels) {\r\n                const validWheels = wheels.filter(w => w.arcRadius > 2);\r\n                onCountourChange(contour, validWheels);     \r\n            }\r\n        });\r\n    }\r\n\r\n    onMouseUp(e: MouseEvent | null) {\r\n        if (!this.enabled) return;\r\n\r\n        e?.stopPropagation();\r\n        e?.preventDefault();\r\n\r\n        this.mouseDisconnected();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.drawSignal();\r\n        this.updateScale();\r\n    }\r\n\r\n    get width() {\r\n        const { contour } = this.props;\r\n        const { scale } = this.state;\r\n        \r\n        return (contour.length - 1) * scale;\r\n    }\r\n\r\n    get height() {\r\n        const { maxY } = this.props;\r\n        const { scale } = this.state;\r\n\r\n        return maxY * scale;\r\n    }\r\n\r\n    drawGrid(ctx: CanvasRenderingContext2D) {\r\n        const { contour, maxY } = this.props;\r\n        const { scale, margin } = this.state;\r\n        \r\n        const width = (contour.length - 1) * scale;\r\n        const height = maxY * scale;\r\n\r\n        ctx.clearRect(0, 0, width + 2 * margin, height + 2 * margin);\r\n\r\n        ctx.setLineDash([]);\r\n        ctx.lineWidth = 1;\r\n\r\n        ctx.beginPath();\r\n        ctx.moveTo(margin, margin + height);\r\n        ctx.lineTo(margin + width, margin + height);\r\n        ctx.stroke();\r\n\r\n        ctx.setLineDash([1, 2])\r\n\r\n        for (const col of Generate.range(0, contour.length)) {\r\n            ctx.moveTo(margin + col * scale, margin);\r\n            ctx.lineTo(margin + col * scale, margin + height);    \r\n        }\r\n\r\n        for (const row of Generate.range(0, maxY)) {\r\n            ctx.moveTo(margin + 0, margin + row * scale);\r\n            ctx.lineTo(margin + width, margin + row * scale);    \r\n        }\r\n\r\n        ctx.strokeStyle = \"#000000\";\r\n        ctx.stroke();\r\n        ctx.setLineDash([]);\r\n    }\r\n\r\n    translate(p: IPoint2D | null): IPoint2D {\r\n        const { maxY } = this.props;\r\n        const { scale } = this.state;\r\n        const yAxis = maxY * scale;\r\n\r\n        if (!p) return { x: 0, y: 0 };\r\n\r\n        return {\r\n            x: Math.floor(p.x),\r\n            y: yAxis - p.y\r\n        };\r\n    }\r\n\r\n    samplePoint(points: IPoint2D[], idx: number): IPoint2D | null {\r\n        return this.scalePoint(points[idx]);\r\n    }\r\n\r\n    scalePoint(pt: IPoint2D | null) {\r\n        const { scale } = this.state;\r\n        if (!pt) return null;\r\n\r\n        return {\r\n            x: pt.x * scale,\r\n            y: pt.y * scale\r\n        }\r\n    }\r\n\r\n    drawWheels(ctx: CanvasRenderingContext2D) {\r\n        const { wheels, wheelDrawing } = this.props;\r\n        const { margin, scale } = this.state;\r\n\r\n        const drawingWheels = new DrawingWheels(margin, scale, (p) => this.translate(this.scalePoint(p)));\r\n\r\n        for (const wheel of wheels || []) {\r\n            switch (wheelDrawing) {\r\n                case wheelDrawingType.None: break;\r\n                case wheelDrawingType.Side: drawingWheels.drawWheelSide(ctx, wheel); break;\r\n                case wheelDrawingType.Top: drawingWheels.drawWheelTop(ctx, wheel); break;\r\n            }\r\n        }\r\n    }\r\n\r\n    drawPoints(ctx: CanvasRenderingContext2D, points: IPoint2D[], color: string) {\r\n        const { margin } = this.state;\r\n\r\n        const currentStyle = ctx.strokeStyle;\r\n        ctx.lineWidth = 3;\r\n        ctx.imageSmoothingEnabled = true;\r\n        ctx.strokeStyle = color;\r\n\r\n        ctx.beginPath();\r\n\r\n        for (let i = 0; i < points.length - 1; i++) {\r\n            const from = this.translate(this.samplePoint(points, i));\r\n            const to = this.translate(this.samplePoint(points, i + 1));\r\n\r\n            ctx.moveTo(margin + from.x, margin + from.y);\r\n            ctx.lineTo(margin + to.x, margin + to.y);\r\n        }\r\n\r\n        ctx.stroke();\r\n        ctx.strokeStyle = currentStyle;\r\n    }\r\n\r\n    drawSections(ctx: CanvasRenderingContext2D) {\r\n        const { margin } = this.state;\r\n        const { design, sectionMode, showSectionSelector } = this.props;\r\n    \r\n        if (!showSectionSelector || sectionMode !== sectionEditorMode.Pick) return;\r\n        const designTools = new DesignTools(design);\r\n        const existingIndexes = designTools.existingIndexes;\r\n\r\n        ctx.beginPath();\r\n\r\n        for (const idx of existingIndexes) {\r\n            const from = this.translate(this.scalePoint({ x: idx, y: 0 }));\r\n            const to = this.translate(this.scalePoint({x: idx, y: this.height}));\r\n\r\n            ctx.moveTo(margin + from.x, margin + from.y);\r\n            ctx.lineTo(margin + to.x, margin + to.y);\r\n        }\r\n\r\n        ctx.stroke();\r\n    }\r\n\r\n    drawSignal() {\r\n        const { canvas } = this;\r\n        if (!canvas) return;\r\n\r\n        const ctx = canvas.getContext(\"2d\");\r\n        if (!ctx) return;\r\n\r\n        this.drawGrid(ctx);\r\n\r\n        const { contour, section, sectionBaseline, showSectionSelector, sectionMode } = this.props;\r\n\r\n        if (showSectionSelector && sectionMode === sectionEditorMode.Edit) {            \r\n            if (sectionBaseline)\r\n                this.drawPoints(ctx, sectionBaseline, \"gray\");\r\n\r\n            if (section)\r\n                this.drawPoints(ctx, section, \"black\");\r\n        }\r\n        else {\r\n            this.drawPoints(ctx, contour, \"black\");\r\n        }\r\n\r\n\r\n        this.drawWheels(ctx);\r\n        this.drawSections(ctx);\r\n    }\r\n\r\n    lerp(samples: IPoint2D[], from: IPoint2D, to: IPoint2D) {\r\n        const dx = to.x - from.x;\r\n        const dy = to.y - from.y;\r\n        const delta = dy / dx;\r\n\r\n        Generate\r\n        .inclusive(from.x, to.x)\r\n        .forEach((i, idx) => {\r\n            samples[i].y = from.y + idx * delta;\r\n        })\r\n    }\r\n\r\n    reflect(pt: IPoint2D): IPoint2D {\r\n        const samples = this.currentSamples;\r\n        const halfIndex = (samples.length - 1) / 2;\r\n\r\n        return {\r\n            x: 2 * halfIndex - pt.x,\r\n            y: pt.y\r\n        }\r\n    }\r\n\r\n    processPoints(points: IPoint2D[]) {\r\n        const { symmetrical, showSectionSelector, sectionMode, onSectionSelected } = this.props;\r\n\r\n        if (showSectionSelector && sectionMode === sectionEditorMode.Pick) {\r\n            onSectionSelected(showSectionSelector, points[points.length - 1].x);\r\n            return;\r\n        }\r\n        \r\n        const samples = this.currentSamples;\r\n\r\n        const halfIndex = (samples.length - 1) / 2;\r\n\r\n        for (const pt of points) {\r\n            const { lastPoint } = this;\r\n            if (lastPoint && pt.x !== lastPoint.x) {\r\n                if (symmetrical) {\r\n                    if (Tools.between(halfIndex, lastPoint.x, pt.x)) {\r\n                        // do nothing here\r\n                        console.log(\"skipped\", halfIndex, lastPoint.x, pt.x);\r\n\r\n                        //this.lerp(samples, lastPoint, pt);\r\n                        //this.lerp(samples, this.reflect(pt), this.reflect(lastPoint));\r\n                    }\r\n                    else {\r\n                        this.lerp(samples, lastPoint, pt);\r\n                        this.lerp(samples, this.reflect(pt), this.reflect(lastPoint));\r\n                    }\r\n                }\r\n                else {\r\n                    this.lerp(samples, lastPoint, pt);\r\n                }                \r\n            }\r\n            else {\r\n                if (symmetrical) {\r\n                    samples[pt.x].y = pt.y;\r\n                    samples[this.reflect(pt).x].y = pt.y;\r\n                }\r\n                else {\r\n                    samples[pt.x].y = pt.y;\r\n                }\r\n            }\r\n\r\n            this.lastPoint = pt;\r\n        }\r\n\r\n        this.currentSamples = samples;\r\n    }\r\n\r\n    onWheelChange(wheel: IWheelModel, wheelIndex: number) {\r\n        const { contour, wheels, onCountourChange } = this.props;\r\n        if (!wheels ) return;\r\n\r\n        if (wheelIndex === -1) {\r\n            this.setState({\r\n                wheelIndex: wheels.length\r\n            }, () => {\r\n                onCountourChange(contour, [...wheels, wheel])\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                wheelIndex: wheelIndex\r\n            }, () => {\r\n                onCountourChange(contour, wheels.map((w, idx) => idx === wheelIndex ? wheel : w))\r\n            })\r\n        }\r\n    }\r\n\r\n    wheelDataFromPoint(pt: IPoint2D, wheel: IWheelModel): IWheelData {\r\n        const { wheels } = this.props;\r\n\r\n        const distToCenter = Math.sqrt(\r\n            Math.pow(pt.x - wheel.center.x, 2) + \r\n            Math.pow(pt.y - wheel.center.y, 2),\r\n        );\r\n\r\n        const distToRadiusHandler = Math.sqrt(\r\n            Math.pow(pt.x - wheel.center.x, 2) + \r\n            Math.pow(pt.y - (wheel.center.y + wheel.wheelRadius), 2),\r\n        );\r\n\r\n        const distToOffsetHandler = Tools.pythBP(pt.x - wheel.center.x, pt.y - 2 * wheel.offset);\r\n        const distToWidthHandler = Tools.pythBP(pt.x - wheel.center.x, pt.y - 2 * (wheel.offset + wheel.width ));\r\n\r\n        return {\r\n            wheel,\r\n            wheelIndex: (wheels || []).indexOf(wheel),\r\n            distToCenter,\r\n            distToRadiusHandler,\r\n            distToOffsetHandler,\r\n            distToWidthHandler\r\n        }\r\n    }\r\n\r\n    wheelIndexFromPoint(pt: IPoint2D): IWheelData {\r\n        const { wheels } = this.props;\r\n        const { wheelIndex } = this.state;\r\n\r\n        if (wheels && wheels[wheelIndex]) return this.wheelDataFromPoint(pt, wheels[wheelIndex]);\r\n\r\n        for (const wheel of wheels || []) {\r\n            const wheelData = this.wheelDataFromPoint(pt, wheel);\r\n\r\n            const distances = [\r\n                wheelData.distToCenter,\r\n                wheelData.distToRadiusHandler,\r\n                wheelData.distToOffsetHandler,\r\n                wheelData.distToWidthHandler\r\n            ]\r\n\r\n            if (distances.some(d => d < 2)) {\r\n                return wheelData;\r\n            }\r\n        }\r\n\r\n        return {\r\n            wheel: null,\r\n            wheelIndex: -1,\r\n            distToCenter: 0,\r\n            distToRadiusHandler: 0,\r\n            distToOffsetHandler: 0,\r\n            distToWidthHandler: 0\r\n        }\r\n    };\r\n\r\n    fromCanvasCoordinates(canvas: HTMLCanvasElement | null, e: React.MouseEvent<HTMLCanvasElement>): IPoint2D {\r\n        const { contour, maxY } = this.props;\r\n        const { scale, margin } = this.state;\r\n\r\n        if (!canvas) return { x: 0, y: 0 };\r\n\r\n        var rect = canvas.getBoundingClientRect();\r\n        const pt = this.translate({ \r\n            x: e.clientX - rect.left - margin, \r\n            y: 0\r\n        });\r\n\r\n        pt.x = Tools.withinRange(Math.round(pt.x / scale), 0, contour.length - 1);\r\n        pt.y = Tools.withinRange(pt.y / scale, 0, maxY);\r\n\r\n        return pt;\r\n    }\r\n\r\n    setPosition(e: React.MouseEvent<HTMLCanvasElement>) {\r\n        const { contour, maxY, mode, wheelDrawing } = this.props;\r\n        const { scale, margin, wheelMode } = this.state;\r\n        if (!this.canvas) return;\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n\r\n        var rect = this.canvas.getBoundingClientRect();\r\n        const pt = this.translate({ \r\n            x: e.clientX - rect.left - margin, \r\n            y: e.clientY - rect.top - margin \r\n        });\r\n        \r\n        pt.x = Tools.withinRange(Math.round(pt.x / scale), 0, contour.length - 1);\r\n        pt.y = Tools.withinRange(pt.y / scale, 0, maxY);\r\n\r\n        const wheelData = this.wheelIndexFromPoint(pt);\r\n\r\n        const { wheel, wheelIndex, distToCenter, distToRadiusHandler, distToOffsetHandler, distToWidthHandler } = wheelData;\r\n\r\n        if (mode === drawingMode.Contour && !wheel) {\r\n            this.buffer?.next(pt);\r\n            return;\r\n        }\r\n        else if (mode === drawingMode.Wheel || (mode === drawingMode.Contour && wheel)) {\r\n            const { wheels } = this.props;\r\n\r\n            if (!wheels) return;\r\n\r\n            if (wheel) {\r\n                switch (wheelDrawing) {\r\n                    case wheelDrawingType.Side: {\r\n                        pt.x = Tools.withinRange(pt.x, wheel.wheelRadius, contour.length - 1 - wheel.wheelRadius); \r\n                        pt.y = Tools.withinRange(pt.y, 0, maxY - wheel.wheelRadius); \r\n                    } break;\r\n                    case wheelDrawingType.Top: {\r\n                        pt.x = Tools.withinRange(pt.x, wheel.wheelRadius, contour.length - 1 - wheel.wheelRadius); \r\n                        pt.y = Tools.withinRange(pt.y, 0, maxY); \r\n                    }\r\n                }\r\n            }\r\n\r\n            switch (wheelMode) {\r\n                case wheelDrawingMode.MoveCenter: {\r\n                    if (wheel) {\r\n                        this.onWheelChange({\r\n                            ...wheel,\r\n                            center: pt,\r\n                        }, wheelIndex);\r\n                    }\r\n                } break;\r\n                case wheelDrawingMode.ChangeRadius: {\r\n                    if (wheel) {\r\n                        this.onWheelChange({\r\n                            ...wheel,\r\n                            arcRadius: distToCenter,\r\n                            wheelRadius: distToCenter\r\n                        }, wheelIndex);\r\n                    }\r\n                } break;\r\n                case wheelDrawingMode.ChangeOffset: {\r\n                    if (wheel) {\r\n                        this.onWheelChange({\r\n                            ...wheel,\r\n                            offset: pt.y / 2\r\n                        }, wheelIndex);\r\n                    }\r\n                } break;\r\n                case wheelDrawingMode.ChangeWidth: {\r\n                    if (wheel) {\r\n                        this.onWheelChange({\r\n                            ...wheel,\r\n                            width: (pt.y / 2) - wheel.offset\r\n                        }, wheelIndex);\r\n                    }\r\n                } break;\r\n                case wheelDrawingMode.Create: {\r\n                    switch (wheelDrawing) {\r\n                        case wheelDrawingType.Side: {\r\n                            if (wheel) {\r\n                                if (distToCenter < 2) {\r\n                                    this.setState({\r\n                                        wheelMode: wheelDrawingMode.MoveCenter\r\n                                    });\r\n                                    return;\r\n                                }\r\n                                else if (distToRadiusHandler < 3) {\r\n                                    this.setState({\r\n                                        wheelMode: wheelDrawingMode.ChangeRadius\r\n                                    });\r\n                                    return;\r\n                                }\r\n                            }\r\n                        } break;\r\n                        case wheelDrawingType.Top: {\r\n                            if (wheel) {\r\n                                if (distToOffsetHandler < 2) {\r\n                                    this.setState({\r\n                                        wheelMode: wheelDrawingMode.ChangeOffset\r\n                                    });\r\n                                    return;\r\n                                }\r\n                                else if (distToWidthHandler < 3) {\r\n                                    this.setState({\r\n                                        wheelMode: wheelDrawingMode.ChangeWidth\r\n                                    });\r\n                                    return;\r\n                                }\r\n                            }\r\n                        } break;\r\n                    }\r\n\r\n                    this.setState({\r\n                        wheelMode: wheelDrawingMode.ChangeRadius,\r\n                    }, () => {\r\n                        this.onWheelChange({\r\n                            center: pt,\r\n                            arcRadius: 0,\r\n                            wheelRadius: 0,\r\n                            offset: 10,\r\n                            width: 10\r\n                        }, wheelIndex);\r\n                    });\r\n                } break;\r\n            }\r\n        }\r\n    }\r\n\r\n    renderSectionSelector() {\r\n        const { sectionMode, onSectionChanged, onSectionSelected, sections, sectionIndex, showSectionSelector } = this.props;\r\n\r\n        if (sectionMode !== sectionEditorMode.Edit) return null;\r\n        if (!onSectionChanged) return null;\r\n        if (!showSectionSelector) return null;\r\n\r\n        const sectionSelected = (section: number) => {\r\n            onSectionSelected(showSectionSelector, section)\r\n        }\r\n\r\n        const max = sections - 1;\r\n        return (\r\n            <div className=\"section-selector\">\r\n                <input type=\"range\" min={0} max={max} value={sectionIndex} onChange={e => sectionSelected(parseInt(e.target.value))}/>\r\n                <input type=\"number\" value={sectionIndex} min={0} max={max} onChange={e => sectionSelected(parseInt(e.target.value))}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { id, contour, maxY } = this.props;\r\n        const { scale, margin } = this.state;\r\n        if (!scale) return null;\r\n\r\n        const width = contour.length * scale  + 2 * margin;\r\n        const height = maxY * scale  + 2 * margin;\r\n\r\n        console.log(id, scale, width, height);\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    {this.renderSectionSelector()}\r\n                    <canvas\r\n                        width={width}\r\n                        height={height}\r\n                        className=\"drawing-canvas\"\r\n                        onDoubleClick={e => {\r\n                            e.stopPropagation();\r\n                            e.preventDefault();         \r\n                        }}\r\n                        onContextMenu={e => {\r\n                            e.stopPropagation();\r\n                            e.preventDefault();\r\n                        }}\r\n                        onPointerEnter={e => {\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                        }}\r\n                        onPointerLeave={e => {\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                            this.mouseDisconnected();\r\n                        }}\r\n                        onPointerDown={e => {\r\n                            if (e.buttons !== 1) return;\r\n\r\n                            this.enabled = true;\r\n                            this.lastPoint = null;\r\n                            this.setPosition(e);\r\n\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                        }}\r\n                        onPointerUp={e => {\r\n                            this.mouseDisconnected();\r\n \r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                        }}\r\n                        onPointerMove={e => {\r\n                            if (!this.enabled) return;\r\n                            this.setPosition(e);\r\n\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                        }}\r\n                        onPointerCancel={e => {\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                        }}\r\n                        onMouseDown={(e) => {\r\n                            if (e.buttons !== 1) return;\r\n                            this.enabled = true;\r\n                            this.lastPoint = null;\r\n                            this.setPosition(e);\r\n                            e.preventDefault();\r\n                            e.stopPropagation(); \r\n                        }}\r\n                        onMouseMove={(e) => {\r\n                            if (!this.enabled) return;\r\n                            this.setPosition(e);\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                        }}\r\n                        onMouseUp={e => {\r\n                            this.mouseDisconnected();\r\n                            e.stopPropagation();\r\n                            e.preventDefault();\r\n                        }}\r\n                        ref={(r) => {\r\n                            this.canvas = r;\r\n                            this.drawSignal();\r\n                        }}\r\n                    />                \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import { IPoint2D } from \"../../lib\";\r\nimport { IWheelModel } from \"../drawing-model\";\r\n\r\nexport class DrawingWheels {\r\n    constructor(\r\n        private margin: number, \r\n        private scale: number,\r\n        private toCtx: (p: IPoint2D) => IPoint2D) {\r\n\r\n    }\r\n\r\n    drawWheelSide(ctx: CanvasRenderingContext2D, wheel: IWheelModel) {\r\n        const { margin, scale, toCtx } = this;\r\n\r\n        const center = toCtx(wheel.center);\r\n        const wheelArcFrontFrom = toCtx({ x: wheel.center.x - wheel.wheelRadius, y: wheel.center.y });\r\n        const wheelArcFrontTo = toCtx({ x: wheel.center.x - wheel.wheelRadius, y: 0 });\r\n\r\n        const wheelArcBackFrom = toCtx({ x: wheel.center.x + wheel.wheelRadius, y: wheel.center.y });\r\n        const wheelArcBackTo = toCtx({ x: wheel.center.x + wheel.wheelRadius, y: 0 });\r\n\r\n        const wheelRadiusHandle = toCtx({ x: wheel.center.x, y: wheel.center.y + wheel.wheelRadius });\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(\r\n            margin + center.x, \r\n            margin + center.y,\r\n            wheel.wheelRadius * scale,\r\n            Math.PI, \r\n            2 * Math.PI\r\n        );\r\n\r\n        ctx.moveTo(margin + wheelArcFrontFrom.x, margin + wheelArcFrontFrom.y);\r\n        ctx.lineTo(margin + wheelArcFrontTo.x, margin + wheelArcFrontTo.y);\r\n\r\n        ctx.moveTo(margin + wheelArcBackFrom.x, margin + wheelArcBackFrom.y);\r\n        ctx.lineTo(margin + wheelArcBackTo.x, margin + wheelArcBackTo.y);\r\n\r\n        ctx.stroke();\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(\r\n            margin + center.x, \r\n            margin + center.y,\r\n            5,\r\n            0,\r\n            2 * Math.PI,\r\n        )\r\n\r\n        ctx.arc(\r\n            margin + wheelRadiusHandle.x, \r\n            margin + wheelRadiusHandle.y,\r\n            5,\r\n            0,\r\n            2 * Math.PI,\r\n        )\r\n        ctx.fill();\r\n    }\r\n\r\n    drawWheelTop(ctx: CanvasRenderingContext2D, wheel: IWheelModel) {\r\n        const { margin, toCtx } = this;\r\n\r\n        const innerCenter = toCtx({\r\n            x: wheel.center.x,\r\n            y: 2 * wheel.offset\r\n        });\r\n        const outerCenter = toCtx({\r\n            x: wheel.center.x,\r\n            y: 2 * (wheel.offset + wheel.width)\r\n        });        \r\n\r\n        const wheelContour: IPoint2D[] = [\r\n            {\r\n                x: wheel.center.x - wheel.wheelRadius,\r\n                y: 2 * wheel.offset\r\n            },\r\n            {\r\n                x: wheel.center.x + wheel.wheelRadius,\r\n                y: 2 * wheel.offset\r\n            },\r\n            {\r\n                x: wheel.center.x + wheel.wheelRadius,\r\n                y: 2 * (wheel.offset + wheel.width)\r\n            },\r\n            {\r\n                x: wheel.center.x - wheel.wheelRadius,\r\n                y: 2 * (wheel.offset + wheel.width)\r\n            },\r\n        ];\r\n\r\n        const mappedWheelCountour = wheelContour.map(toCtx);\r\n \r\n        ctx.beginPath();\r\n        ctx.moveTo(margin + mappedWheelCountour[3].x, margin + mappedWheelCountour[3].y);\r\n        mappedWheelCountour.forEach((p, idx) => {\r\n            ctx.lineTo(margin + p.x, margin + p.y);\r\n        })\r\n        ctx.stroke();\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(\r\n            margin + innerCenter.x, \r\n            margin + innerCenter.y,\r\n            5,\r\n            0,\r\n            2 * Math.PI,\r\n        )\r\n\r\n        ctx.arc(\r\n            margin + outerCenter.x, \r\n            margin + outerCenter.y,\r\n            5,\r\n            0,\r\n            2 * Math.PI,\r\n        )\r\n        ctx.fill();\r\n    }\r\n}","import { IWheelModel } from \"./components/drawing-model\";\r\nimport { Generate, IPoint2D, IPoint3D } from \"./lib\";\r\nimport * as Rx from \"rxjs\";\r\n\r\nexport interface IDesign {\r\n    name: string;\r\n    boxSize: IPoint3D;\r\n    sidePoints: IPoint2D[];\r\n    frontPoints: IPoint2D[];\r\n    topPoints: IPoint2D[];\r\n    colorOdd: number;\r\n    colorEven: number;\r\n    wheels: IWheelModel[];\r\n    frontSegments: IPoint2D[][];\r\n}\r\n  \r\nexport interface IStorageModel {\r\n    version: number;\r\n    designs: IDesign[];\r\n}\r\n\r\nexport interface IDesignStore {\r\n    replaceStorageModel(storageModel: IStorageModel): void;\r\n    appendStorageModel(storageModel: IStorageModel): void;\r\n    resetAll(): void;\r\n    newDesing(name: string): IDesign;\r\n    updateDesign(design: IDesign | null, update?: (design: IDesign) => void): void;\r\n    deleteDesign(design: IDesign | null): void;\r\n}\r\n\r\nexport interface IDesignStoreState {\r\n    designStore: IDesignStore;\r\n    storageModel: IStorageModel;\r\n    design: IDesign | null;\r\n}\r\n\r\nexport class DesignStore {\r\n    _stream: Rx.BehaviorSubject<IDesignStoreState>;\r\n\r\n    constructor() {\r\n        this._stream = new Rx.BehaviorSubject<IDesignStoreState>({ \r\n            designStore: this, \r\n            storageModel: this.defaultStorageModel(), \r\n            design: null\r\n        });\r\n\r\n        this.updateDesign(null);\r\n    }\r\n\r\n    subscribe(handler: (state: IDesignStoreState) => void) {\r\n        this._stream.subscribe(handler);\r\n    }\r\n\r\n    get state() {\r\n        return this._stream.value;\r\n    }\r\n\r\n    defaultStorageModel(): IStorageModel {\r\n        return { version: 1, designs: [this.newDesing(\"Default\")] }\r\n    }\r\n\r\n    migrate(model: IStorageModel) {\r\n        model.designs.forEach(d => {\r\n            if (!d.wheels) d.wheels = [];\r\n            d.wheels.forEach(w => {\r\n                if (!w.offset) w.offset = 10;\r\n                if (!w.width) w.width = 10;\r\n            });\r\n\r\n            if (!d.frontSegments) d.frontSegments = [];\r\n        });\r\n    }\r\n\r\n    loadFromLocalStorage() : IStorageModel {\r\n        const json = localStorage.getItem(\"Designs\");\r\n        if (!json) return this.defaultStorageModel();\r\n    \r\n        const model = JSON.parse(json) as IStorageModel;\r\n        this.migrate(model);\r\n        \r\n        return model;\r\n    }\r\n\r\n    saveStorageModel(model: IStorageModel) {\r\n        if (!model) return;\r\n\r\n        const payload = JSON.stringify(model);\r\n        localStorage.setItem(\"Designs\", payload);\r\n    }\r\n\r\n    saveToLocalStorage(design: IDesign | null, update?: (design: IDesign) => void) {\r\n        if (!design) return;\r\n    \r\n        const model = this.loadFromLocalStorage()\r\n        model.designs = model.designs.map(d => {\r\n            if (d.name === design.name) {\r\n                update?.(design);\r\n                return design;\r\n            }\r\n\r\n            return d;\r\n        });\r\n        if (!model.designs.includes(design)) model.designs.push(design);\r\n    \r\n        this.saveStorageModel(model);\r\n    }\r\n\r\n    deleteDesign(design: IDesign | null) {\r\n        if (!design) return;\r\n        const model = this.loadFromLocalStorage();\r\n        model.designs = model.designs.filter(d => d.name !== design.name);\r\n        this.saveStorageModel(model);\r\n        this.updateDesign(null);\r\n    }\r\n\r\n    updateDesign(design: IDesign | null, update?: (design: IDesign) => void) {\r\n        if (design) {\r\n            this.saveToLocalStorage(design, update);\r\n        }\r\n\r\n        this.setActiveDesign(design);\r\n    }\r\n\r\n    setActiveDesign(design: IDesign | null) {\r\n        const storageModel = this.loadFromLocalStorage();\r\n\r\n        const newState: IDesignStoreState = {\r\n            designStore: this,\r\n            storageModel: storageModel, \r\n            design: storageModel.designs.find(d => d.name === design?.name) || storageModel.designs[0]\r\n        }\r\n\r\n        this._stream.next(newState);\r\n    }\r\n\r\n    newDesing(name: string): IDesign {\r\n        const boxSize: IPoint3D = {x: 101, y: 41, z: 31};\r\n        const sidePoints = Generate.range(0, boxSize.x).map(i => ({ x: i, y: boxSize.z }));\r\n        const frontPoints = Generate.range(0, boxSize.y).map(i => ({ x: i, y: boxSize.z }));\r\n        const topPoints = Generate.range(0, boxSize.x).map(i => ({ x: i, y: boxSize.y }));\r\n    \r\n        return {\r\n            name,\r\n            boxSize,\r\n            sidePoints,\r\n            frontPoints,\r\n            topPoints,\r\n            colorOdd: 0xEB7D09,\r\n            colorEven: 0x000000,\r\n            wheels: [],\r\n            frontSegments: []\r\n        }\r\n    }\r\n\r\n    resetAll() {\r\n        this.saveStorageModel(this.defaultStorageModel());\r\n        this.setActiveDesign(null);\r\n    }\r\n\r\n    replaceStorageModel(storageModel: IStorageModel) {\r\n        this.migrate(storageModel);\r\n        this.saveStorageModel(storageModel ?? this.defaultStorageModel());\r\n        this.setActiveDesign(null);\r\n    }\r\n\r\n    appendStorageModel(appendStorageModel: IStorageModel) {\r\n        const { storageModel } = this._stream.value;\r\n\r\n        this.migrate(storageModel);\r\n        storageModel.designs.push(...appendStorageModel.designs);\r\n        this.replaceStorageModel(storageModel);\r\n    }\r\n}","import React from 'react';\r\nimport { IToolbarItem, ToolbarLegend } from './components/toolbar';\r\nimport \"./tutorial.scss\";\r\n\r\ninterface IProps {\r\n    mainToolbarItems: IToolbarItem[];\r\n    sideEditorToolbar: IToolbarItem[];\r\n}\r\n\r\nexport class Tutorial extends React.Component<IProps> {\r\n    section(title: string, content: string | JSX.Element | null, image: string | null = null) {\r\n        return (\r\n            <div className=\"tutorial-section\">\r\n                <header>{title}</header>\r\n                {content && <p>{content}</p>}\r\n                {image && <img src={`tutorial/${image}.gif`} />}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { mainToolbarItems, sideEditorToolbar } = this.props;\r\n\r\n        return (\r\n            <div className=\"tutorial\">\r\n                {this.section(\"Main Toolbar\", <ToolbarLegend items={mainToolbarItems} dialogFactory={null} />)}\r\n                {this.section(\"Side Editor Toolbar\", <ToolbarLegend items={sideEditorToolbar} dialogFactory={null} />)}\r\n                {this.section(\"Front view\", \"Draw front view of car body, then smooth contour\", \"car_front\")}\r\n                {this.section(\"Top view\", \"Draw top view of car body, then smooth contour\", \"car_top\")}\r\n                {this.section(\"Side view\", \"Draw side view of car body, then smooth contour\", \"car_side\")}\r\n                {this.section(\"Add wheels\", \"\", \"car_wheels\")}\r\n                {this.section(\"Front section\", \"Draw front sections view of car body, then smooth contour\", \"car_sections\")}\r\n                {this.section(\"3D View\", \"\", \"car_fly_by\")}\r\n          </div>\r\n        )\r\n    }\r\n}","import React from \"react\"\r\nimport { Dialogs, IIconProps, Toolbar } from \"./components\"\r\nimport { drawingMode } from \"./components/drawing-model\";\r\nimport { IToolbarItem } from \"./components/toolbar\";\r\nimport { DesignStoreOperations } from \"./DesignStoreOperations\"\r\nimport { IRenderSettings } from \"./lib\";\r\nimport { Tutorial } from \"./tutorial\"\r\n\r\nexport interface ISideEditorData {\r\n    mode: drawingMode;\r\n    showSectionSelector: boolean;\r\n    hasWheels: boolean;\r\n    currentSection: number;\r\n    sectionParams: Partial<IIconProps>;\r\n}\r\n\r\nexport interface ISideEditorActions {\r\n    fullscreenEdit() : Promise<void>;\r\n    moveUp(): void;\r\n    moveDown(): void;\r\n    allUp(): void;\r\n    allDown(): void;\r\n    smooth(): void;\r\n    lockSection(): void;\r\n    removeSection(): void;\r\n    applyToRemaining(): void;\r\n    onSectionSelected(showSectionSelector: boolean, currentSection: number): void;\r\n    setDrawingMode(mode: drawingMode): void;\r\n}\r\n\r\nexport class ToolbarFactory {\r\n    MainToolbar(\r\n        dsoFactory: () => DesignStoreOperations,\r\n        renderSettingsFactory: () => IRenderSettings,\r\n        renderSettingsModified: (diff: Partial<IRenderSettings>) => void\r\n        ): IToolbarItem[] {\r\n        const dso = () => dsoFactory();\r\n        const renderSettings = () => renderSettingsFactory();\r\n\r\n        const items: IToolbarItem[] = [\r\n            { icon: \"FcViewDetails\", title: \"Legend\", action: () => Toolbar.Modal(\"Main Toolbar\", items) },\r\n            { icon: \"FaUniversity\", title: \"Tutorials\", action: () => this.tutorials(items) },\r\n            { isSeparator: true },\r\n            { icon: \"GrPowerReset\", title: \"Reset All\", action: () => dso().resetAll() },\r\n            { icon: \"GrFavorite\", title: \"Load sample designs\", action: () => dso().loadSampleDesigns() },\r\n            { isSeparator: true },\r\n            { icon: \"VscNewFile\", title: \"New Design\", action: () => dso().newDesign()},\r\n            { icon: \"FiDownload\", title: \"Download designs\" , action: () => dso().downloadDesigns()},\r\n            { icon: \"FiUpload\", title: \"Upload designs\", action: () => dso().uploadDesigns()},\r\n            { icon: \"AiOutlineExport\", title: \"Export STL\", action: () => dso().exportSTL()},\r\n            { isSeparator: true },\r\n            { icon: \"GrClone\", title: \"Clone Design\", action: () => dso().cloneDesign()},\r\n            { icon: \"AiOutlineSetting\", title: \"Settings\", action: () => dso().settings()},\r\n            { icon: \"AiOutlineCloseCircle\", title: \"Delete Design\", action: () => dso().deleteDesign()},\r\n            { isSeparator: true },\r\n            { icon: \"GiWireframeGlobe\", title: \"Wireframes\", selected: () => renderSettings().wireframes, action: () => renderSettingsModified({ wireframes: !renderSettings().wireframes })} ,\r\n            { icon: \"CgEditShadows\", title: \"Flat Shading\", selected: () => renderSettings().flatShading, action: () => renderSettingsModified({ flatShading: !renderSettings().flatShading })},\r\n            { isSeparator: true },\r\n            { icon: \"AiOutlineGithub\", title: \"Github\", action: () => { window.open(\"https://github.com\")}},\r\n            { icon: \"AiOutlineTwitter\", title: \"Twitter\", action: () => { window.open(\"https://twitter.com\")}},\r\n            { icon: \"BiChip\", title: \"QuSoC\", action: () => { window.open(\"https://github.com/EvgenyMuryshkin/qusoc\")}},\r\n        ];\r\n\r\n        return items;\r\n    }\r\n\r\n    async tutorials(mainToolbarItems: IToolbarItem[]) {\r\n        const sideEditorToolbar = this.SideEditorToolbar(\r\n            {\r\n                mode: drawingMode.Contour,\r\n                showSectionSelector: false,\r\n                hasWheels: false,\r\n                currentSection: 0,\r\n                sectionParams: {}\r\n            },\r\n            null\r\n        );\r\n\r\n        await Dialogs.Modal({\r\n            title: \"How to create a car model\",\r\n            icon: \"FaUniversity\",\r\n            body: <Tutorial mainToolbarItems={mainToolbarItems} sideEditorToolbar={sideEditorToolbar}/>,\r\n            buttonsFactory: Dialogs.CloseButtons\r\n        });\r\n    }\r\n\r\n    SideEditorToolbar(data: ISideEditorData, actions: ISideEditorActions | null): IToolbarItem[] {\r\n        const { mode, hasWheels, sectionParams, showSectionSelector, currentSection } = data;\r\n\r\n        const items: IToolbarItem[] = [\r\n            { icon: \"FcViewDetails\", title: \"Legend\", action: () => Toolbar.Modal(\"Main Toolbar\", items) },\r\n            { icon: \"AiOutlineFullscreen\", title: \"Fullscreen edit\",  action: async () => await actions?.fullscreenEdit() },\r\n            { isSeparator: true },\r\n            { icon: \"ImPencil2\", title: \"Draw countour\", selected: () => mode === drawingMode.Contour, action: () => actions?.setDrawingMode(drawingMode.Contour)},   \r\n            { icon: \"GiCartwheel\", title:\"Draw wheel\", selected: () => mode === drawingMode.Wheel, \r\n                hidden: () => !hasWheels,\r\n                action: () => actions?.setDrawingMode(drawingMode.Wheel)\r\n            },\r\n            { isSeparator: true },\r\n            { icon: \"ImMoveUp\", title: \"Move Up\", action: () => actions?.moveUp()},\r\n            { icon: \"ImMoveDown\", title: \"Move Down\", action: () => actions?.moveDown()},\r\n            { icon: \"AiOutlineBorderTop\", title: \"All Up\", action: () => actions?.allUp()},\r\n            { icon: \"AiOutlineBorderBottom\", title: \"All Down\", action: () => actions?.allDown()},\r\n            { icon: \"GiWhiplash\", title: \"Smooth\", action: () => actions?.smooth()},\r\n            { isSeparator: true },\r\n            { icon: \"GiSlicedBread\" ,\r\n                title: \"Slice Edit\",\r\n                selected: () => showSectionSelector,\r\n                action: () => actions?.onSectionSelected(!showSectionSelector, currentSection)\r\n            },\r\n            { icon: \"AiFillLock\",\r\n                title: \"Lock section\",\r\n                iconParams: sectionParams,\r\n                action: () => actions?.lockSection()\r\n            },\r\n            { icon: \"RiDeleteBack2Line\", \r\n                title: \"Revert section\",\r\n                iconParams: sectionParams,\r\n                action: () => actions?.removeSection()\r\n            },                \r\n            { icon: \"TiArrowForwardOutline\", \r\n                title: \"Apply to remaining sections\",\r\n                iconParams: sectionParams,\r\n                action: () => actions?.applyToRemaining()\r\n            }\r\n            /*,\r\n            { \r\n                icon: \"AiOutlineFunction\", \r\n                iconParams: sectionParams,\r\n                title: \"Interpolate sections\",\r\n                hidden: () => !onInterpolateSections,\r\n                action: () => this.interpolateSections()\r\n            }*/\r\n        ];\r\n\r\n        return items;\r\n    }\r\n}","import * as React from \"react\"\r\nimport { IPoint2D, Tools } from \"../../lib\";\r\nimport { IWheelModel } from \"../drawing-model\";\r\nimport { ISideEditorProps, SideEditor } from \"./side-editor\";\r\nimport \"./side-editor.scss\";\r\n\r\ninterface IProps extends ISideEditorProps {\r\n\r\n}\r\n\r\ninterface IState {\r\n    contour: IPoint2D[];\r\n    wheels: IWheelModel[] | null;\r\n}\r\n\r\nexport class ModalSideEditor extends React.Component<IProps, IState> {\r\n    _container: HTMLDivElement | null = null;\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            contour: [],\r\n            wheels: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { contour, wheels } = this.props;\r\n        this.setState({\r\n            contour: contour.map((s): IPoint2D => ({ x: s.x, y: s.y })),\r\n            wheels: wheels ? wheels.map(w => Tools.clone(w)) : null\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { \r\n            id, \r\n            title, \r\n            symmetrical, \r\n            maxY, \r\n            onCountourChange, \r\n            wheelDrawing, \r\n            sections, \r\n            onSectionSelected, \r\n            onSectionChanged,\r\n            section,\r\n            sectionBaseline,\r\n            showSectionSelector,\r\n            currentSection,\r\n            design,\r\n            sectionMode\r\n        } = this.props;\r\n        const { contour, wheels } = this.state;\r\n\r\n        const width = (this._container?.clientWidth ?? 0) * 0.9;\r\n        const height = (this._container?.clientHeight ?? 0) * 0.9;\r\n\r\n        return (\r\n            <div className=\"modal-side-editor\" ref={r => this._container = r}>\r\n                ({this._container?.clientWidth}x{this._container?.clientHeight})\r\n                { width && height ? <SideEditor \r\n                    id={`${id}_modal`}\r\n                    title={title}\r\n                    symmetrical={symmetrical}\r\n                    width={width}\r\n                    height={height}\r\n                    contour={contour} \r\n                    maxY={maxY}\r\n                    onCountourChange={(newSamples, newWheels) => {\r\n                        this.setState({\r\n                            contour: newSamples,\r\n                            wheels: newWheels\r\n                        }, \r\n                        () => onCountourChange(this.state.contour, this.state.wheels))\r\n                    }}\r\n                    wheels={wheels}\r\n                    wheelDrawing={wheelDrawing}\r\n                    sections={sections}\r\n                    sectionBaseline={sectionBaseline}\r\n                    onSectionChanged={onSectionChanged}\r\n                    onSectionSelected={onSectionSelected}\r\n                    section={section}\r\n                    showSectionSelector={showSectionSelector}\r\n                    currentSection={currentSection}\r\n                    design={design}\r\n                    sectionMode={sectionMode}\r\n                    /> : null\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from \"react\"\r\nimport { Generate, IPoint2D } from \"../../lib\";\r\nimport { ISideEditorActions, ToolbarFactory } from \"../../ToolbarFactory\";\r\nimport { DrawingCanvas, IDrawingCanvasProps } from \"../drawing-canvas/drawing-canvas\";\r\nimport { drawingMode } from \"../drawing-model\";\r\nimport { IIconProps } from \"../icon/icon\";\r\nimport { Dialogs } from \"../modal/modal\";\r\nimport { IToolbarItem } from \"../toolbar\";\r\nimport { Toolbar } from \"../toolbar/toolbar\";\r\nimport { ModalSideEditor } from \"./modal-side-editor\";\r\nimport \"./side-editor.scss\";\r\n\r\nexport interface ISideEditorProps extends IDrawingCanvasProps {\r\n    title: string;\r\n    currentSection: number;\r\n    showSectionSelector: boolean;\r\n    onInterpolateSections?: () => void;\r\n}\r\n\r\ninterface IState {\r\n    mode: drawingMode;\r\n}\r\n\r\nexport class SideEditor extends React.Component<ISideEditorProps, IState> implements ISideEditorActions {\r\n    constructor(props: ISideEditorProps) {\r\n        super(props);\r\n        this.state = {\r\n            mode: drawingMode.Contour\r\n        }\r\n    }\r\n\r\n    get currentSamples(): IPoint2D[] {\r\n        const { contour, section, sectionBaseline, showSectionSelector } = this.props;\r\n        const sectionPoints = section || sectionBaseline;\r\n\r\n        const source = \r\n            showSectionSelector && sectionPoints \r\n            ? sectionPoints\r\n            : contour;\r\n        \r\n        return source.map(s => ({ ...s }));\r\n    }\r\n\r\n    set currentSamples(newData: IPoint2D[]) {\r\n        const { wheels, currentSection, showSectionSelector, onCountourChange, onSectionChanged } = this.props;\r\n\r\n        if (showSectionSelector) {\r\n            onSectionChanged([currentSection], newData);\r\n        }\r\n        else {\r\n            onCountourChange(newData, wheels);\r\n        }\r\n    }\r\n\r\n    moveUp() {\r\n        const { maxY } = this.props;\r\n        const samples = this.currentSamples;\r\n        if (samples.some(s => s.y > maxY - 1)) return;\r\n        samples.forEach(s => s.y++);\r\n        this.currentSamples = samples;\r\n    }\r\n\r\n    moveDown() {\r\n        const samples = this.currentSamples;\r\n        if (samples.some(s => s.y < 1)) return;\r\n        samples.forEach(s => s.y--);\r\n        this.currentSamples = samples;\r\n    }\r\n    \r\n    allUp() {\r\n        const { maxY } = this.props;\r\n        const samples = this.currentSamples;\r\n        samples.forEach(s => s.y = maxY);\r\n        this.currentSamples = samples;\r\n\r\n    }\r\n\r\n    allDown() {\r\n        const samples = this.currentSamples;\r\n        samples.forEach(s => s.y = 0);\r\n        this.currentSamples = samples;\r\n    }\r\n\r\n    async fullscreenEdit() {\r\n        const { title, contour, wheels, onCountourChange } = this.props;\r\n        let newSamples = contour;\r\n        let newWheels = wheels;\r\n\r\n        if (await Dialogs.Modal({\r\n            title: title,\r\n            body: <ModalSideEditor {...this.props} onCountourChange={(s, w) => {\r\n                newSamples = s;\r\n                newWheels = w;\r\n            }}/>,\r\n            buttonsFactory: Dialogs.OKCancelButtons\r\n        })) {\r\n            onCountourChange(newSamples, newWheels);\r\n        }\r\n    }\r\n\r\n    smooth() {\r\n        const { currentSamples } = this;\r\n        const newSamples = this\r\n            .currentSamples\r\n            .map((s, idx): IPoint2D => {\r\n                if (idx === 0 || idx === currentSamples.length - 1) return s;\r\n                return {\r\n                    x: s.x,\r\n                    y: (currentSamples[idx-1].y + currentSamples[idx].y + currentSamples[idx + 1].y) / 3\r\n                }\r\n            });\r\n        this.currentSamples = newSamples;\r\n    }\r\n\r\n    async applyToRemaining() {\r\n        const { showSectionSelector, currentSection, sections, onSectionChanged } = this.props;\r\n        if (!showSectionSelector) {\r\n            await Dialogs.Notification(\"Section editor is disabled\");\r\n            return;\r\n        }\r\n\r\n        if (!await Dialogs.Confirm(\"Apply current contour to the rest of the model?\")) return;\r\n\r\n        const { currentSamples } = this;\r\n\r\n        onSectionChanged(Generate.inclusive(currentSection, sections), currentSamples);\r\n    }\r\n\r\n    async removeSection() {\r\n        const { currentSection, onSectionChanged } = this.props;\r\n\r\n        if (!await Dialogs.Confirm(\"Revert current section to baseline?\")) return;\r\n        onSectionChanged([currentSection], null);\r\n    }\r\n\r\n    async lockSection() {\r\n        const { currentSection, sectionBaseline, onSectionChanged } = this.props;\r\n\r\n        if (!await Dialogs.Confirm(\"Lock current section to baseline?\")) return;\r\n        onSectionChanged([currentSection], sectionBaseline); \r\n    }\r\n\r\n    async interpolateSections() {\r\n        const { onInterpolateSections } = this.props;\r\n        onInterpolateSections?.();\r\n    }\r\n    \r\n    setDrawingMode(mode: drawingMode) {\r\n        this.setState({\r\n            mode\r\n        })\r\n    }\r\n\r\n    onSectionSelected(showSectionSelector: boolean, currentSection: number) {\r\n        const {onSectionSelected} = this.props;\r\n        onSectionSelected(showSectionSelector, currentSection);\r\n    }\r\n\r\n    renderMenu() {\r\n        const { showSectionSelector, currentSection, wheels, onSectionSelected, onInterpolateSections } = this.props;\r\n        const { mode } = this.state;\r\n        const iconParams: Partial<IIconProps> = {\r\n            bordered: true\r\n        }\r\n\r\n        const sectionParams: Partial<IIconProps> = {\r\n            ...iconParams,\r\n            readOnly: !showSectionSelector,\r\n            readOnlyTitle: \"Turn on section editor\"\r\n        };\r\n\r\n        const toolbarFactory = new ToolbarFactory();\r\n        const items = toolbarFactory.SideEditorToolbar(\r\n            {\r\n                hasWheels: !wheels,\r\n                mode,\r\n                showSectionSelector,\r\n                currentSection,\r\n                sectionParams\r\n            },\r\n            this\r\n        );\r\n\r\n        return <Toolbar className=\"menu menu-top\" items={items} iconParams={iconParams} />\r\n    }\r\n    \r\n    render() {\r\n        const { \r\n            id,\r\n            title, \r\n            width, \r\n            height, \r\n            maxY, \r\n            symmetrical, \r\n            contour, \r\n            onCountourChange, \r\n            wheels, \r\n            wheelDrawing, \r\n            sections,\r\n            section,\r\n            sectionBaseline,\r\n            onSectionChanged,\r\n            onSectionSelected,\r\n            showSectionSelector,\r\n            currentSection,\r\n            design,\r\n            sectionMode\r\n        } = this.props;\r\n        const { mode } = this.state;\r\n\r\n        const titleParts = [\r\n            title,\r\n            currentSection !== null ? `@${currentSection}`: null\r\n        ]\r\n        return (\r\n            <div className=\"side-editor\">\r\n                {this.renderMenu()}\r\n                <div className=\"side-drawing-container\">\r\n                    {titleParts.filter(Boolean).join(\",\")}\r\n                    <DrawingCanvas \r\n                        id={id}\r\n                        symmetrical={symmetrical}\r\n                        width={width}\r\n                        height={height}\r\n                        contour={contour} \r\n                        maxY={maxY}\r\n                        mode={mode}\r\n                        onCountourChange={onCountourChange}\r\n                        wheels={wheels}\r\n                        wheelDrawing={wheelDrawing}\r\n                        sections={sections}\r\n                        onSectionChanged={onSectionChanged}\r\n                        showSectionSelector={showSectionSelector}\r\n                        section={section}\r\n                        sectionBaseline={sectionBaseline}\r\n                        onSectionSelected={(show, s) => {\r\n                            onSectionSelected(showSectionSelector, s);\r\n                        }}\r\n                        sectionIndex={currentSection}\r\n                        design={design}\r\n                        sectionMode={sectionMode}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import { STLExporter } from \"three/examples/jsm/exporters/STLExporter\";\r\nimport { BodyShape } from \"./BodyShape\";\r\nimport { Dialogs, Forms } from \"./components\";\r\nimport { IDesignStoreState, IStorageModel } from \"./DesignStore\";\r\nimport { generationParity } from \"./SidePlane\";\r\nimport { mergeBufferGeometries } from \"three/examples/jsm/utils/BufferGeometryUtils\";\r\nimport { MathUtils } from \"three\";\r\nimport * as THREE from \"three\";\r\nimport { DesignTools } from \"./DesignTools\";\r\nimport axios from \"axios\";\r\nimport { Tools } from \"./lib/tools\";\r\n\r\nexport class DesignStoreOperations {\r\n    constructor(private designStoreState: IDesignStoreState) {\r\n\r\n    }\r\n\r\n    exportText(content: string, contentType: string, fileName: string) {\r\n        const blob = new Blob( [ content ], { type: contentType } );\r\n        this.exportBlob(blob, fileName);\r\n    }\r\n\r\n    exportBlob(blob: Blob, fileName: string) {\r\n        const link = document.createElement( 'a' );\r\n        link.style.display = 'none';\r\n        document.body.appendChild( link );\r\n    \r\n        link.href = URL.createObjectURL( blob );\r\n        link.download = fileName;\r\n        link.click();\r\n    \r\n        link.remove();\r\n    }\r\n\r\n    async exportSTL() {\r\n        const { design } = this.designStoreState;\r\n        if (!design) return;\r\n\r\n        const params = await Forms.Modal(\"Export to STL\", {\r\n            stringName: `${design.name}.stl`,\r\n            intXRotationDeg: 90,\r\n            intYRotationDeg: 0,\r\n            intZRotationDeg: 0\r\n        });\r\n    \r\n        if (!params) return;\r\n    \r\n        const { boxSize, topPoints, frontPoints, sidePoints, wheels } = design;\r\n        const exporter = new STLExporter();\r\n        const bodyShape = new BodyShape(boxSize.x, boxSize.y, boxSize.z, generationParity.All);\r\n        const designTools = new DesignTools(design);\r\n        const interpolatedSegments = designTools.interpolateSections();\r\n        bodyShape.applyContour(sidePoints, frontPoints, topPoints, wheels, interpolatedSegments );\r\n        const singleGeometry = mergeBufferGeometries(bodyShape.geometry);\r\n        \r\n        singleGeometry.rotateX(MathUtils.degToRad(params.intXRotationDeg));\r\n        singleGeometry.rotateY(MathUtils.degToRad(params.intYRotationDeg));\r\n        singleGeometry.rotateZ(MathUtils.degToRad(params.intXRotationDeg));\r\n    \r\n        const material = new THREE.MeshBasicMaterial( { color: 0xffff00 } );\r\n        const mesh = new THREE.Mesh( singleGeometry, material );\r\n    \r\n        const stl = exporter.parse(mesh);\r\n        this.exportText(stl, 'text/plain', params.stringName || \"test.stl\");\r\n    }\r\n\r\n    async loadSampleDesigns() {\r\n        if (!await Dialogs.Confirm(\"Load sample designs?\")) return;\r\n\r\n        const { designStore } = this.designStoreState;        \r\n        const response = await axios.get(\"SampleDesigns.json\");\r\n        designStore.replaceStorageModel(response.data);\r\n    }\r\n\r\n    async downloadDesigns() {\r\n        const { storageModel } = this.designStoreState;        \r\n        \r\n        const params = await Forms.Modal(\"Download designs\", {\r\n            stringName: `CarBodyDesigns.json`\r\n        });\r\n    \r\n        if (!params) return;\r\n        const json = JSON.stringify(storageModel, null, 2);\r\n        this.exportText(json, 'application/json', params.stringName || \"CarBodyDesigns.json\");\r\n    }\r\n\r\n    async uploadDesigns() {\r\n        const params = await Forms.Modal(\"Upload designs\", {\r\n            flagAppendToExisting: false\r\n        });\r\n        if (!params) return;\r\n        const { designStore } = this.designStoreState;        \r\n\r\n        const fileInput = document.createElement(\"input\");\r\n        fileInput.setAttribute(\"type\", \"file\");\r\n        fileInput.setAttribute(\"accept\", \"application/json\");\r\n\r\n        fileInput.onchange = () => {\r\n            const file = fileInput?.files?.[0];\r\n            if (!file) return;\r\n\r\n            let fr = new FileReader();\r\n            fr.onload = async (ev) => {\r\n                if (ev?.target?.result) {\r\n                    const parsed = JSON.parse(ev?.target?.result?.toString()) as IStorageModel;\r\n                    if (!parsed.version) {\r\n                        await Dialogs.Notification(\"Provided file is not a designs model\");\r\n                        return;\r\n                    }\r\n\r\n                    if (params.flagAppendToExisting) {\r\n                        designStore.appendStorageModel(parsed);\r\n                    }\r\n                    else {\r\n                        designStore.replaceStorageModel(parsed);\r\n                    }\r\n                }\r\n            };\r\n            fr.readAsText(file);\r\n        };\r\n\r\n        document.body.appendChild( fileInput );\r\n    \r\n        fileInput.click();    \r\n        fileInput.remove();\r\n    }\r\n\r\n    async resetAll() {\r\n        const { designStore } = this.designStoreState;        \r\n        if (!await Dialogs.Confirm(\"Reset all designs?\")) return;\r\n        designStore.resetAll();\r\n    }\r\n\r\n    async newDesign() {\r\n        const { designStore } = this.designStoreState;        \r\n\r\n        const now = new Date();\r\n        const newDesign = await Forms.Modal(\r\n            \"New Design\", \r\n            {\r\n                stringName: `${now.toLocaleDateString()} - ${now.toLocaleTimeString()}`\r\n            }\r\n        );\r\n    \r\n        if (newDesign) {\r\n            const design = designStore.newDesing(newDesign.stringName);\r\n            designStore.updateDesign(design);\r\n        }\r\n    }\r\n\r\n    async cloneDesign() {\r\n        const { design, designStore } = this.designStoreState;\r\n\r\n        if (!design) return;\r\n        const now = new Date();\r\n    \r\n        const cloneDesignParams = await Forms.Modal(\r\n            \"Clone Design\", \r\n            {\r\n                stringName: `${design.name} - ${now.toLocaleDateString()} - ${now.toLocaleTimeString()}`\r\n            }\r\n        );\r\n        if (!cloneDesignParams) return;\r\n        const clonedDesign = Tools.clone(design);\r\n        clonedDesign.name = cloneDesignParams.stringName;\r\n        designStore.updateDesign(clonedDesign);  \r\n    }\r\n\r\n    async deleteDesign() {\r\n        const { design, designStore } = this.designStoreState;\r\n\r\n        if (!design) return;\r\n        if (!await Dialogs.Confirm(`Delete ${design.name}`)) return;\r\n    \r\n        designStore.deleteDesign(design);\r\n    }\r\n\r\n    async settings() {\r\n        const { design, designStore } = this.designStoreState;\r\n        if (!design) return;\r\n    \r\n        const settings = await Forms.Modal(design.name, {\r\n            stringName: design.name,\r\n            colorOdd: design.colorOdd,\r\n            colorEven: design.colorEven\r\n        });\r\n        if (!settings) return;\r\n        designStore.updateDesign(design, (d) => {\r\n            d.name = settings.stringName;\r\n            d.colorOdd = settings.colorOdd;\r\n            d.colorEven = settings.colorEven;\r\n        });\r\n    }\r\n}","import React from 'react';\r\nimport { IIconProps, Toolbar } from './components';\r\nimport { DesignStore, IDesignStoreState } from './DesignStore';\r\nimport { IRenderSettings } from './lib';\r\nimport { DesignStoreOperations } from './DesignStoreOperations';\r\nimport { ToolbarFactory } from './ToolbarFactory';\r\n\r\ninterface IProps {\r\n    designStore: DesignStore;\r\n    designStoreState: IDesignStoreState;\r\n    renderSettings: IRenderSettings;\r\n    renderSettingsChanged: (renderSettings: IRenderSettings) => void;\r\n}\r\n\r\nexport class MainToolbar extends React.Component<IProps> {\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n    }\r\n    \r\n    modify(diff: Partial<IRenderSettings>) {\r\n        const { renderSettingsChanged, renderSettings } = this.props;\r\n\r\n        renderSettingsChanged({\r\n            ...renderSettings,\r\n            ...diff\r\n        });\r\n    }\r\n\r\n    toggleWireframes() {\r\n        this.modify({ wireframes: !this.props.renderSettings.wireframes });\r\n    }\r\n\r\n    toggleFlatShading() {\r\n        this.modify({ flatShading: !this.props.renderSettings.flatShading });\r\n    }\r\n\r\n    get dso() {\r\n        const { designStoreState } = this.props;\r\n        return new DesignStoreOperations(designStoreState);\r\n    }\r\n\r\n    render() {\r\n        const toolbarFactory = new ToolbarFactory();\r\n        const items = toolbarFactory.MainToolbar(\r\n            () => this.dso, \r\n            () => this.props.renderSettings,\r\n            (diff) => this.modify(diff)\r\n            );\r\n\r\n        const iconParams: Partial<IIconProps> = {\r\n            bordered: true,\r\n            size: \"large\"\r\n        }\r\n\r\n        return <Toolbar iconParams={iconParams} items={items} className=\"menu menu-top\" />;\r\n    }\r\n}","import React from 'react';\nimport './App.scss';\nimport { AppScene } from './AppScene';\nimport { IRenderSettings, ISectionData, Tools } from './lib';\nimport { ModalsComponent } from './components';\nimport { DesignStore, IDesign, IDesignStoreState } from './DesignStore';\nimport { SideEditor } from './components/side-editor';\nimport { sectionEditorMode, wheelDrawingType } from './components/drawing-model';\nimport { MainToolbar } from './MainToolbar';\nimport { BodyShape, CountourQuery } from './BodyShape';\nimport { generationParity } from './SidePlane';\nimport CookieConsent from 'react-cookie-consent';\nimport { debounce, interval, Subject } from 'rxjs';\n\ninterface IState {\n  designStore: DesignStore;\n  currentSectionData: ISectionData;\n  renderSettings: IRenderSettings;\n  designStoreState: IDesignStoreState;\n  showSectionSelector: boolean;\n  currentSection: number;\n}\n\nexport class App extends React.Component<{}, IState> {\n  _updateStream: Subject<{}> = new Subject<{}>();\n\n  constructor(props: any) {\n    super(props);\n\n    const designStore = new DesignStore();\n\n    this.state = {\n      designStore,\n      renderSettings: {\n        wireframes: false,\n        flatShading: false,\n      },\n      designStoreState: designStore.state,\n      currentSectionData: {\n        front: null,\n        side: null,\n        top: null\n      },\n      showSectionSelector: false,\n      currentSection: 0\n    }\n\n\n    this\n        ._updateStream\n        .pipe(debounce(() => interval(500)))\n        .subscribe(() => this.forceUpdate());\n  }\n\n  componentDidMount() {\n    const { designStore } = this.state;\n    designStore.subscribe(s => this.setState({ designStoreState: s }));\n    this.subscribeForResizeEvents();\n\n    window.ontouchstart = function(event) {\n      if (event.touches.length > 1) { //If there is more than one touch\n          event.preventDefault();\n      }\n    }\n/*\n    window.addEventListener(\"touchstart\", (e) => {\n      e.stopPropagation();\n    })\n    */\n  }\n\n  subscribeForResizeEvents() {\n    window.addEventListener(\"resize\", () => {\n      this._updateStream.next({});\n    });\n  }\n\n  renderDesign() {\n    const { \n      designStoreState, \n      designStore, \n      renderSettings, \n      currentSectionData, \n      showSectionSelector, \n      currentSection \n    } = this.state;\n    const { design } = designStoreState;\n    if (!design) return null;\n\n    const { boxSize, frontPoints, sidePoints, topPoints, wheels, frontSegments } = design;\n\n    const modifyDesign = (diff: Partial<IDesign>) => {\n      const modified = {\n        ...design,\n        ...diff\n      };\n      designStore.updateDesign(modified);\n    }\n\n    const bodyShape = new BodyShape(boxSize.x, boxSize.y, boxSize.z, generationParity.All);\n    bodyShape.applyContour(sidePoints, frontPoints, topPoints, wheels, [] );\n    \n    //const section = bodyShape.sectionPoints(design, currentSectionData);\n\n    const contourQuery = new CountourQuery(frontPoints, frontSegments);\n    const section = frontSegments[currentSectionData.front || 0];\n    const sectionBaseline = section \n      ? contourQuery.query((currentSectionData.front || 0) - 1)\n      : contourQuery.query(currentSectionData.front || 0);\n\n      /*\n    const designTools = new DesignTools(design);\n    const interpolatedSegments = designTools.interpolateSections();\n*/\n    const interpolateSections = () => {      \n      //Generate.range(0, boxSize.x).map(sectionIdx => {\n      //  console.log(sectionIdx, interpolatedSegments[sectionIdx]);\n      //})\n    }\n\n    const onSectionSelected = (show: boolean, section: number) => {\n      this.setState({\n        currentSectionData: {\n          ...currentSectionData,\n          front: show ? section : null\n        },\n        showSectionSelector: show,\n        currentSection: section\n      })\n    }\n\n    const height = window.innerHeight - 100;\n    const tableSizeProps: React.CSSProperties = {\n      width: window.innerWidth,\n      height: height\n    };\n\n    const rowSizeProps: React.CSSProperties = {\n      height: height / 2\n    };\n\n    const cellSizeProps: React.CSSProperties = {\n      width: window.innerWidth / 2,\n      height: height / 2\n    };\n\n    const canvasWidth = Math.floor(window.innerWidth / 2);\n    const canvasHeight = Math.floor(height / 2);\n\n    console.log(canvasWidth, canvasHeight);\n\n    return (\n      <div className=\"main-layout-div\" style={tableSizeProps}>\n        <div className=\"main-layout-row\" style={rowSizeProps}>\n          <div className=\"main-layout-cell\" style={cellSizeProps}>\n          <SideEditor \n                id=\"front\"\n                title={`Front (${frontPoints.length}x${boxSize.z})`}\n                symmetrical={true}\n                width={canvasWidth}\n                height={canvasHeight}\n                contour={frontPoints}\n                maxY={boxSize.z}\n                onCountourChange={(newPoints) => {\n                  modifyDesign({\n                    frontPoints: newPoints\n                  })\n                }}\n                wheels={null}\n                wheelDrawing={wheelDrawingType.None}\n                sections={boxSize.x}\n                onSectionSelected={onSectionSelected}\n                onSectionChanged={(sections, points) => {\n                  const modifiedSegments = [...design.frontSegments];\n                  sections.forEach(s => {\n                    if (s === sections[0] && points !== null) {\n                      modifiedSegments[s] = points.map(p => ({ x: p.x, y: p.y }));\n                    }\n                    else {\n                      delete modifiedSegments[s];\n                    }\n                  })\n                  modifyDesign({\n                    frontSegments: modifiedSegments\n                  })\n                }}\n                sectionBaseline={sectionBaseline}\n                section={section/*section.front.map((p, idx) => ({ x: idx, y: p.y }))*/}\n                onInterpolateSections={interpolateSections}\n                showSectionSelector={showSectionSelector}\n                currentSection={currentSection}\n                design={design}\n                sectionMode={sectionEditorMode.Edit}\n              />\n          </div>\n          <div className=\"main-layout-cell\" style={cellSizeProps}>\n            <SideEditor \n                id=\"top\"\n                title={`Top (${topPoints.length}x${boxSize.y})`}\n                symmetrical={false}\n                width={canvasWidth}\n                height={canvasHeight}\n                contour={topPoints}\n                maxY={boxSize.y}\n                onCountourChange={(newPoints, newWheels) => {\n                  modifyDesign({\n                    topPoints: newPoints,\n                    wheels: newWheels || [] \n                  })\n                }}\n                wheels={wheels}\n                wheelDrawing={wheelDrawingType.Top}\n                sections={boxSize.z}\n                onSectionSelected={onSectionSelected}                \n                onSectionChanged={(sections, points) => {}}\n                section={null/*section.top.map((p, idx) => ({ x: idx, y: p.y }))*/}\n                sectionBaseline={null}\n                showSectionSelector={showSectionSelector}\n                currentSection={currentSection}\n                design={design}\n                sectionMode={sectionEditorMode.Pick}\n              />\n          </div>\n        </div>\n        <div className=\"main-layout-row\" style={rowSizeProps}>\n          <div className=\"main-layout-cell\" style={cellSizeProps}>\n          <SideEditor \n                id=\"side\"\n                title={`Side (${sidePoints.length}x${boxSize.z})`}\n                symmetrical={false}\n                width={canvasWidth}\n                height={canvasHeight}\n                contour={sidePoints}\n                maxY={boxSize.z}\n                onCountourChange={(newPoints, newWheels) => {\n                  modifyDesign({\n                    sidePoints: newPoints,                    \n                    wheels: newWheels || []\n                  })\n                }}\n                wheels={wheels}\n                wheelDrawing={wheelDrawingType.Side}\n                sections={boxSize.y}\n                onSectionSelected={onSectionSelected}\n                onSectionChanged={(sections, points) => {}}\n                section={null/*section.side.map((p, idx) => ({ x: idx, y: p.y }))*/}\n                sectionBaseline={null}\n                showSectionSelector={showSectionSelector}\n                currentSection={currentSection}\n                design={design}\n                sectionMode={sectionEditorMode.Pick}\n              />\n          </div>\n          <div className=\"main-layout-cell\" style={cellSizeProps}>\n          <AppScene \n                width={canvasWidth}\n                height={canvasHeight}\n                design={design}\n                renderSettings={renderSettings}\n              />\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  renderDesignSelector() {\n    const { designStore, designStoreState } = this.state;\n    const { storageModel, design } = designStoreState;\n\n    return (\n      <div className=\"menu menu-top\">\n        {storageModel.designs.map(d => {\n          const classes = {\n            \"design-selector\": true,\n            \"design-selector-active\": d === design\n          }\n          return (\n            <div key={d.name} className={Tools.classNames(classes)} onClick={() => {\n              designStore.setActiveDesign(d);\n            }}>{d.name}</div>\n          );\n        })}\n      </div>      \n    )\n  }\n\n  render() {\n    const { designStore, designStoreState, renderSettings } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div>\n          <div className=\"app-toolbars\">\n            <MainToolbar \n              designStore={designStore} \n              designStoreState={designStoreState} \n              renderSettings={renderSettings} \n              renderSettingsChanged={s => this.setState({ renderSettings: s })}\n            />\n            {this.renderDesignSelector()}\n          </div>\n          {this.renderDesign()}\n        </div>   \n        <ModalsComponent/>\n        {/*<CookieConsent>This website uses cookies to enhance the user experience.</CookieConsent>*/}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export class Tools {\r\n    static withinRange(value: number, min: number, max: number) {\r\n        const mMin = Math.min(min, max);\r\n        const mMax = Math.max(min, max);\r\n\r\n        if (value < mMin) return mMin;\r\n        if (value > mMax) return mMax;    \r\n\r\n        return value;\r\n    }\r\n\r\n    static between(value: number, min: number, max: number) {\r\n        const mMin = Math.min(min, max);\r\n        const mMax = Math.max(min, max);\r\n\r\n        return value > mMin && value < mMax;\r\n    }\r\n\r\n    static betweenInclusive(value: number, min: number, max: number) {\r\n        const mMin = Math.min(min, max);\r\n        const mMax = Math.max(min, max);\r\n\r\n        return value >= mMin && value <= mMax;\r\n    }\r\n\r\n    static classNames(source: {[key: string]: boolean}) {\r\n        if (!source) return \"\";\r\n\r\n        const keys = Object.keys(source);\r\n        const values = keys.filter(k => source[k]).join(\" \");\r\n\r\n        return values;\r\n    }\r\n\r\n    static clone<T>(source: T): T {\r\n        const json = JSON.stringify(source);\r\n        return JSON.parse(json);\r\n    }\r\n\r\n    static pythHB(hyp: number, base: number) {\r\n        return Math.sqrt(hyp * hyp - base * base);\r\n    }\r\n\r\n    static pythBP(base: number, perp: number) {\r\n        return Math.sqrt(base * base + perp * perp);\r\n    }\r\n}","import * as React from \"react\";\r\nimport { Subject } from \"rxjs\";\r\nimport { iconType } from \"..\";\r\n\r\nexport interface IModalDialogButton {\r\n    label: string;\r\n    onClick: () => void;\r\n}\r\n\r\nexport interface IGenericDialogOperation {\r\n    add: IGenericDialog[];\r\n    remove: IGenericDialog[];\r\n}\r\n\r\nexport interface IGenericDialog {\r\n    title: string;\r\n    icon?: iconType;\r\n    body?: JSX.Element | null;\r\n    footer?: JSX.Element | null;\r\n}\r\n\r\nexport interface IModalDialog {\r\n    title: string;\r\n    icon?: iconType;\r\n    body?: JSX.Element | null;\r\n    buttonsFactory: (close: (result: boolean) => void) => IModalDialogButton[];\r\n    genericDialogCallback?: (dialog: IGenericDialog) => void;\r\n}\r\n\r\nexport class Dialogs {\r\n    static DialogsStream: Subject<IGenericDialogOperation> = new Subject<IGenericDialogOperation>();\r\n\r\n    static OKCancelButtons(close: (result: boolean) => void) {\r\n        return [\r\n            {\r\n                label: \"OK\",\r\n                onClick: () => close(true)\r\n            },\r\n            {\r\n                label: \"Cancel\",\r\n                onClick: () => close(false)\r\n            }\r\n        ]\r\n    }\r\n\r\n    static CloseButtons(close: (result: boolean) => void) {\r\n        return [\r\n            {\r\n                label: \"Close\",\r\n                onClick: () => close(false)\r\n            }\r\n        ]\r\n    }\r\n\r\n    static Add(dialog: IGenericDialog) {\r\n        Dialogs.DialogsStream.next({\r\n            add: [dialog],\r\n            remove: []\r\n        })\r\n    }\r\n\r\n    static Remove(dialog: IGenericDialog) {\r\n        Dialogs.DialogsStream.next({\r\n            add: [],\r\n            remove: [dialog]\r\n        })\r\n    }\r\n\r\n    static async Confirm(title: string): Promise<boolean> {\r\n        return await Dialogs.Modal({\r\n            title,\r\n            icon: \"AiOutlineWarning\",\r\n            body: null,\r\n            buttonsFactory: (close) => {\r\n                return [\r\n                    {\r\n                        label: \"OK\",\r\n                        onClick: () => close(true)\r\n                    },\r\n                    {\r\n                        label: \"Cancel\",\r\n                        onClick: () => close(false)\r\n                    }\r\n                ]\r\n            }\r\n        })\r\n    }\r\n\r\n    static async Notification(\r\n        title: string, \r\n        body: JSX.Element | null = null,\r\n        override: Partial<IModalDialog> = {}): Promise<boolean> {\r\n        return await Dialogs.Modal({\r\n            title,\r\n            icon: \"AiOutlineWarning\",\r\n            body: body,\r\n            buttonsFactory: (close) => {\r\n                return [\r\n                    {\r\n                        label: \"Cancel\",\r\n                        onClick: () => close(false)\r\n                    }\r\n                ]\r\n            },\r\n            ...(override || {})\r\n        })\r\n    }\r\n\r\n    static async Modal(dialog: IModalDialog): Promise<boolean> {\r\n        return new Promise<boolean>((resolve, reject) => {\r\n            const buttons = dialog\r\n                .buttonsFactory((result) => {\r\n                    resolve(result);\r\n                    Dialogs.Remove(genericDialog);\r\n                })\r\n                .map(b => {\r\n                    return (\r\n                        <div key={b.label} className=\"modal-button\" onClick={e => {\r\n                            e.stopPropagation();\r\n                            e.preventDefault();\r\n                            b.onClick();\r\n                        }}>{b.label}</div>\r\n                    )\r\n                });\r\n\r\n            const genericDialog: IGenericDialog = {\r\n                title: dialog.title,\r\n                icon: dialog.icon,\r\n                body: dialog.body,\r\n                footer: <div>{buttons}</div>\r\n            }\r\n\r\n            dialog.genericDialogCallback?.(genericDialog);\r\n            Dialogs.Add(genericDialog);\r\n        })\r\n    }\r\n}\r\n","import * as React from \"react\"\r\nimport { IconBaseProps } from \"react-icons\";\r\nimport { CgEditShadows } from \"react-icons/cg\";\r\nimport { GiWireframeGlobe, GiCartwheel } from \"react-icons/gi\";\r\nimport { GrFavorite, GrPowerReset, GrClone } from \"react-icons/gr\";\r\nimport { VscNewFile } from \"react-icons/vsc\";\r\nimport { AiOutlineFunction, AiFillLock, AiOutlineFastForward, AiOutlineGithub, AiOutlineTwitter, AiOutlineExport, AiOutlineSetting, AiOutlineInfoCircle, AiOutlineCloseCircle, AiOutlineWarning, AiOutlineBorderTop, AiOutlineBorderBottom, AiOutlineFullscreen } from \"react-icons/ai\";\r\nimport { ImMoveUp, ImMoveDown, ImPencil2 } from \"react-icons/im\"\r\nimport { GiWhiplash, GiSlicedBread } from \"react-icons/gi\"\r\nimport { TiArrowForwardOutline } from \"react-icons/ti\"\r\nimport { BiChip, BiHelpCircle } from \"react-icons/bi\"\r\nimport { RiDeleteBack2Line } from \"react-icons/ri\"\r\nimport { FiUpload, FiDownload } from \"react-icons/fi\"\r\nimport { FaUniversity } from \"react-icons/fa\"\r\nimport { FcViewDetails } from \"react-icons/fc\"\r\n\r\nimport { Tools } from \"../../lib\";\r\nimport \"./icon.scss\";\r\n\r\nexport type iconSize =\r\n    \"small\" | \"medium\" | \"large\";\r\n\r\nexport type iconType = \r\n    \"GrPowerReset\" | \r\n    \"GiWireframeGlobe\" | \r\n    \"CgEditShadows\" | \r\n    \"VscNewFile\" |\r\n    \"AiOutlineInfoCircle\" |\r\n    \"AiOutlineCloseCircle\" |\r\n    \"AiOutlineWarning\" | \r\n    \"GrClone\" |\r\n    \"ImMoveUp\" |\r\n    \"ImMoveDown\" |\r\n    \"AiOutlineBorderTop\" |\r\n    \"AiOutlineBorderBottom\" | \r\n    \"AiOutlineFullscreen\" |\r\n    \"AiOutlineSetting\" |\r\n    \"AiOutlineExport\" | \r\n    \"GiWhiplash\" |\r\n    \"ImPencil2\" |\r\n    \"GiCartwheel\" |\r\n    \"GiSlicedBread\" |\r\n    \"AiOutlineTwitter\" |\r\n    \"AiOutlineGithub\" |\r\n    \"AiOutlineFastForward\" |\r\n    \"TiArrowForwardOutline\" |\r\n    \"BiChip\" |\r\n    \"RiDeleteBack2Line\" |\r\n    \"AiFillLock\" |\r\n    \"AiOutlineFunction\" |\r\n    \"FiUpload\" |\r\n    \"FiDownload\" |\r\n    \"BiHelpCircle\" |\r\n    \"GrFavorite\" |\r\n    \"FaUniversity\" |\r\n    \"FcViewDetails\"\r\n    ;\r\n\r\nexport interface IIconElementProps {\r\n    size?: iconSize;\r\n    className?: string;    \r\n}\r\n\r\nexport interface IIconProps extends IIconElementProps {\r\n    type?: iconType;\r\n    title?: string;\r\n    readOnlyTitle?: string;\r\n    selected?: boolean;\r\n    readOnly?: boolean;\r\n    hidden?: boolean; \r\n    bordered?: boolean;\r\n    onClick?: () => void;\r\n}\r\n\r\nexport class Icon extends React.Component<IIconProps> {\r\n    getIcon() {\r\n        const { \r\n            type, \r\n            title = \"\", \r\n            readOnlyTitle,\r\n            bordered = false, \r\n            readOnly = false, \r\n            hidden = false,\r\n            className, \r\n            selected = false, \r\n            size = \"medium\", \r\n            onClick\r\n        } = this.props;\r\n\r\n        const classNames: {[key: string]: boolean} = {\r\n            \"icon\": true,\r\n            \"icon-selected\": selected,\r\n            \"icon-bordered\": bordered,\r\n            \"icon-readonly\": readOnly,\r\n            \"icon-hidden\": hidden,\r\n            [`icon-${size}`]: true\r\n        };\r\n\r\n        if (className) classNames[className] = true;\r\n\r\n        const iconTitle = readOnly \r\n            ? title + (readOnlyTitle ? ` (${readOnlyTitle})` : \"\")\r\n            : title;\r\n\r\n        const iconProps: IconBaseProps = {\r\n            title: iconTitle,\r\n            className: Tools.classNames(classNames),\r\n            onClick: () => {\r\n                if (readOnly) return;\r\n                onClick?.()\r\n            }\r\n        };\r\n\r\n        switch (type) {\r\n            case \"CgEditShadows\": return <CgEditShadows {...iconProps}/>;\r\n            case \"GiWireframeGlobe\": return <GiWireframeGlobe {...iconProps}/>;\r\n            case \"GrPowerReset\": return <GrPowerReset {...iconProps}/>;\r\n            case \"VscNewFile\": return <VscNewFile {...iconProps}/>\r\n            case \"AiOutlineInfoCircle\": return <AiOutlineInfoCircle {...iconProps}/>\r\n            case \"AiOutlineCloseCircle\": return <AiOutlineCloseCircle {...iconProps} />\r\n            case \"AiOutlineWarning\": return <AiOutlineWarning {...iconProps}/>\r\n            case \"GrClone\": return <GrClone {...iconProps}/>\r\n            case \"ImMoveUp\": return <ImMoveUp {...iconProps}/>\r\n            case \"ImMoveDown\": return <ImMoveDown {...iconProps}/>\r\n            case \"AiOutlineBorderTop\": return <AiOutlineBorderTop {...iconProps}/>\r\n            case \"AiOutlineBorderBottom\": return <AiOutlineBorderBottom {...iconProps}/>\r\n            case \"AiOutlineFullscreen\": return <AiOutlineFullscreen  {...iconProps}/>\r\n            case \"AiOutlineSetting\": return <AiOutlineSetting {...iconProps}/>\r\n            case \"AiOutlineExport\": return <AiOutlineExport {...iconProps}/>\r\n            case \"GiWhiplash\": return <GiWhiplash {...iconProps}/>\r\n            case \"ImPencil2\": return <ImPencil2 {...iconProps}/>\r\n            case \"GiCartwheel\": return <GiCartwheel {...iconProps}/>\r\n            case \"GiSlicedBread\": return <GiSlicedBread {...iconProps}/>\r\n            case \"AiOutlineTwitter\": return <AiOutlineTwitter {...iconProps}/>\r\n            case \"AiOutlineGithub\": return <AiOutlineGithub {...iconProps} />\r\n            case \"AiOutlineFastForward\": return <AiOutlineFastForward {...iconProps}/>\r\n            case \"TiArrowForwardOutline\": return <TiArrowForwardOutline {...iconProps}/>\r\n            case \"BiChip\": return <BiChip {...iconProps}/>\r\n            case \"RiDeleteBack2Line\": return <RiDeleteBack2Line {...iconProps} />\r\n            case \"AiFillLock\": return <AiFillLock {...iconProps}/>\r\n            case \"AiOutlineFunction\": return <AiOutlineFunction {...iconProps}/>\r\n            case \"FiUpload\": return <FiUpload {...iconProps} />\r\n            case \"FiDownload\": return <FiDownload {...iconProps}/>\r\n            case \"BiHelpCircle\": return <BiHelpCircle {...iconProps}/>\r\n            case \"GrFavorite\": return <GrFavorite {...iconProps}/>\r\n            case \"FaUniversity\": return <FaUniversity {...iconProps}/>\r\n            case \"FcViewDetails\": return <FcViewDetails {...iconProps}/>\r\n            default: return null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"icon-container\">\r\n                {this.getIcon()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport const IconSeparator = (props: IIconElementProps) => {\r\n    const { size, className } = props;\r\n    const classNames: {[key: string]: boolean} = {\r\n        \"icon-separator\": true,\r\n        [`icon-${size}`]: true\r\n    };\r\n\r\n    if (className) classNames[className] = true;\r\n\r\n    return (\r\n        <div className=\"icon-container\">\r\n            <div className={Tools.classNames(classNames)}>&nbsp;</div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Icon, IconSeparator, IIconProps } from '../icon/icon';\r\nimport { Dialogs, IGenericDialog } from '../modal';\r\nimport { ToolbarLegend } from './toolbar-legend';\r\nimport { IToolbarItem } from './toolbar-types';\r\nimport \"./toolbar.scss\";\r\n\r\ninterface IProps {\r\n    items: IToolbarItem[];\r\n    iconParams: Partial<IIconProps>;\r\n    className?: string;\r\n}\r\n\r\nexport class Toolbar extends React.Component<IProps> {\r\n    render() {\r\n        const { className, items, iconParams } = this.props;\r\n\r\n        const separatorParams: Partial<IIconProps> = {\r\n            size: iconParams.size\r\n        }\r\n\r\n        const menuItems = items.map((i, idx) => {\r\n            if (i.isSeparator) return <IconSeparator key={idx} {...separatorParams}/>;\r\n            return (\r\n                <Icon \r\n                    key={idx} \r\n                    {...iconParams} \r\n                    type={i.icon} \r\n                    title={i.title} \r\n                    selected={i.selected?.()} \r\n                    onClick={i.action}\r\n                    {...(i.iconParams || {})}\r\n                />\r\n            )\r\n\r\n        })\r\n\r\n        return (\r\n            <div className={className}>\r\n                {menuItems}\r\n            </div>      \r\n        );\r\n    }\r\n\r\n    static async Modal(title: string, items: IToolbarItem[]) {\r\n        let genericDialog: IGenericDialog | null = null;\r\n\r\n        await Dialogs.Notification(\r\n            title,\r\n            <ToolbarLegend items={items} dialogFactory={() => genericDialog} />,\r\n            { genericDialogCallback: (d) => genericDialog = d }\r\n        );\r\n    }\r\n}\r\n","import * as React from \"react\"\r\nimport { createPortal } from \"react-dom\"\r\nimport { Icon } from \"../icon/icon\";\r\nimport { Dialogs, IGenericDialog } from \"./modal\";\r\nimport \"./modal.scss\";\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\ninterface IState {\r\n    dialogs: IGenericDialog[];\r\n}\r\n\r\nexport class ModalsComponent extends React.Component<IProps, IState> {\r\n    internalDialogs: IGenericDialog[] = [];\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            dialogs: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        Dialogs.DialogsStream.subscribe(op => {\r\n            console.log(\"Add\", op.add.map(o => o.title));\r\n            console.log(\"Remove\", op.remove.map(o => o.title));\r\n            const newDialogs = [\r\n                ...this.internalDialogs.filter(d => !op.remove.includes(d)),\r\n                ...op.add\r\n            ];\r\n\r\n            console.log(\"Current\", newDialogs.map(d => d.title))\r\n            this.setState({\r\n                dialogs: newDialogs\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { dialogs } = this.state;\r\n\r\n        const backdrop = dialogs.length ? <div className=\"modal-backdrop\"/> : null;\r\n        const modalDialogs = dialogs.map((d, idx) => {\r\n            const { title, icon, body, footer } = d;\r\n            return (\r\n                <div key={idx} className=\"modal-dialog\">\r\n                    <div className=\"modal-header\">\r\n                        {icon && <div className=\"modal-header-icon\"><Icon type={icon} size=\"small\" /></div>}\r\n                        <div className=\"modal-header-title\">{title}</div>\r\n                    </div>\r\n                    { body && <div className=\"modal-body\">{body}</div> }\r\n                    { footer && <div className=\"modal-footer\">{footer}</div> }\r\n                </div>   \r\n            )\r\n        });\r\n\r\n        const modalContainer = modalDialogs.length\r\n        ? (\r\n            <div className=\"modal-container\">\r\n                {modalDialogs}\r\n            </div> \r\n        )\r\n        : null;\r\n\r\n        const modals = (\r\n            <div className=\"modal\" onSelect={e => console.log(e)}>\r\n                {backdrop}\r\n                {modalContainer}\r\n            </div>\r\n        )\r\n\r\n        return createPortal(modals, document.body, \"modals\");\r\n    }\r\n}","import * as React from \"react\"\r\nimport { Dialogs } from \"./modal\";\r\nimport \"./form.scss\";\r\n\r\ninterface IDynamicFormProps<T extends {[key: string]: any}> {\r\n    model: T;\r\n    modified: (model: T) => void;\r\n}\r\n\r\ninterface IDynamicFormState<T extends {[key: string]: any}> {\r\n    model: T;   \r\n}\r\n\r\nclass DynamicForm<T extends {[key: string]: any}> extends React.Component<IDynamicFormProps<T>, IDynamicFormState<T>> {\r\n    constructor(props: IDynamicFormProps<T>) {\r\n        super(props);\r\n        this.state = {\r\n            model: props.model\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { modified } = this.props;\r\n        const { model } = this.state;\r\n        if (!model) return null;\r\n\r\n        const keys = Object.keys(model);\r\n\r\n        const components = keys.map(key => {\r\n            const index = key.split('').findIndex(c => c.toUpperCase() === c);\r\n            if (index <= 0) {\r\n                return (\r\n                    <div key={key}>\r\n                        Component type cannot be inferred: {key}\r\n                    </div>\r\n                )\r\n            }\r\n            const fieldName = key.substring(index);\r\n            const fieldLabel = fieldName.split('').map((c, idx) => {\r\n                if (idx === 0) return c;\r\n                if (c === c.toUpperCase()) return ` ${c}`;\r\n                return c;\r\n            }).join(\"\");\r\n\r\n            const formComponent = (fieldEditor: JSX.Element ) => {\r\n                return (\r\n                    <div key={key}>\r\n                        <div className=\"form-label\">{fieldLabel}</div>\r\n                        <div className=\"form-control-container\">{fieldEditor}</div>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            const modify = (newValue: any) => {\r\n                const newModel = Object.assign({}, model, {\r\n                    [key]: newValue\r\n                })\r\n                this.setState({\r\n                    model: newModel\r\n                }, () => modified(this.state.model))\r\n            };\r\n\r\n            const fieldType = key.substring(0, index);\r\n            switch(fieldType) {\r\n                case \"flag\": {\r\n                    return formComponent(<input className=\"form-control\" type=\"checkbox\" checked={!!model[key]} onChange={e => modify(e.target.checked)}/>)\r\n                }\r\n                case \"int\": {\r\n                    return formComponent(<input className=\"form-control\" type=\"number\" value={model[key]} onChange={e => modify(parseInt(e.target.value || \"0\"))}/>)\r\n                }\r\n                case \"string\": {\r\n                    return formComponent(<input className=\"form-control\" type=\"string\" value={model[key]} onChange={e => modify(e.target.value || \"\")}/>)\r\n                }\r\n                case \"color\": {\r\n                    return formComponent(<input \r\n                        className=\"form-control\" \r\n                        type=\"color\" \r\n                        value={`#${(model[key] ?? 0).toString(16).padStart(6,\"0\")}`} \r\n                        onChange={e => {\r\n                            modify(parseInt((e.target.value ?? \"#000000\").substring(1), 16));\r\n                        }}/>)              \r\n                }\r\n                default: {\r\n                    return formComponent(<div>Unsupported field type: {fieldType}</div>)\r\n                }\r\n            }\r\n        });\r\n\r\n        return (\r\n            <form className=\"form\">\r\n                {components}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport class Forms {\r\n    static async Modal<T extends {[key: string]: any}>(title: string, model: T): Promise<T | null> {\r\n        if (!model) return model;\r\n\r\n        let result = model;\r\n        const form = <DynamicForm model={model} modified={(m) => result = m} />\r\n\r\n        if (!await Dialogs.Modal({\r\n            title,\r\n            icon: \"AiOutlineInfoCircle\",\r\n            body: form,\r\n            buttonsFactory: Dialogs.OKCancelButtons\r\n        })) return null;\r\n\r\n        return result;\r\n    }\r\n}","import React from 'react';\r\nimport { Icon } from '../icon/icon';\r\nimport { Dialogs, IGenericDialog } from '../modal';\r\nimport { IToolbarItem } from './toolbar-types';\r\n\r\ninterface IProps {\r\n    items: IToolbarItem[];\r\n    dialogFactory?: (() => IGenericDialog | null) | null;\r\n}\r\n\r\nexport class ToolbarLegend extends React.Component<IProps> {\r\n    render() {\r\n        const { items, dialogFactory } = this.props;\r\n\r\n        const rows = items.map((i, idx) => {\r\n            if (i.isSeparator) {\r\n                return <tr key={idx}><td colSpan={2} className=\"toolbar-legend-separator\"></td></tr>\r\n            }\r\n\r\n            return (\r\n                <tr key={idx}>\r\n                    <td className=\"toolbar-legend-icon\">\r\n                        <Icon type={i.icon} selected={i.selected?.()} \r\n                            onClick={() => {\r\n                            const genericDialog = dialogFactory?.();\r\n                            if (genericDialog) {\r\n                                Dialogs.Remove(genericDialog);\r\n                                i.action?.();\r\n                            }\r\n                        }}/>\r\n                    </td>\r\n                    <td>{i.title}</td>\r\n                </tr>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <table className=\"toolbar-legend\">\r\n                <tbody>\r\n                    {rows}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}","export * from \"./toolbar-types\"\r\nexport * from \"./toolbar\"\r\nexport * from \"./toolbar-legend\"","export class Generate {\r\n    static inclusive(from: number, to: number) {\r\n        return from > to\r\n            ? Generate.range(from, to - from - 1)\r\n            : Generate.range(from, to - from + 1)\r\n    }\r\n\r\n    static range(from: number, length: number) {\r\n        const result: number[] = [];\r\n        if (length === 0) return [];\r\n        if (length > 0) {\r\n            for (let i = 0; i < length; i++) {\r\n                result.push(i + from);\r\n            }\r\n        }\r\n        else {\r\n            for (let i = 0; i > length; i--) {\r\n                result.push(i + from);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}","import * as Rx from \"rxjs\";\r\nimport { bufferTime } from \"rxjs/operators\";\r\n\r\nexport class BufferStream<T> {\r\n    _subject = new Rx.Subject<T>();\r\n\r\n    constructor(time: number, onNext: (value: T[]) => void) {\r\n        this._subject\r\n            .pipe(bufferTime(time))\r\n            .subscribe((value) => {\r\n                value && value.length && onNext(value);\r\n            });\r\n    }\r\n\r\n    next(value: T) {\r\n        this._subject.next(value);\r\n    }\r\n}","export * from \"./generate\";\r\nexport * from \"./g2d\";\r\nexport * from \"./buffer-stream\";\r\nexport * from \"./tools\";\r\nexport * from \"./types\";"],"sourceRoot":""}