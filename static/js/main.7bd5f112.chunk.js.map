{"version":3,"sources":["SidePlane.tsx","BodyShapeTypes.ts","components/drawing-model/index.ts","BodyShape.tsx","DesignTools.ts","Wheels.ts","AppScene.tsx","components/drawing-canvas/drawing-canvas.tsx","components/drawing-canvas/drawing-wheels.tsx","DesignStore.tsx","tutorial.tsx","ToolbarFactory.tsx","components/side-editor/modal-side-editor.tsx","components/side-editor/side-editor.tsx","DesignStoreOperations.ts","MainToolbar.tsx","App.tsx","serviceWorker.js","index.tsx","lib/tools.ts","components/modal/modal.tsx","components/icon/icon.tsx","components/toolbar/toolbar.tsx","components/modal/modals-component.tsx","components/modal/forms.tsx","components/toolbar/toolbar-legend.tsx","components/toolbar/index.ts","lib/generate.ts","lib/buffer-stream.ts","lib/index.ts"],"names":["generationMode","generationParity","normalsDirection","BaseBodyShape","lengthPoints","widthPoints","heightPoints","this","drawingMode","wheelDrawingType","sectionEditorMode","SidePlane","props","vertices","indices","uvs","normals","length","width","pointsMapper","direction","Generate","range","l","w","push","vertice","handlers","p","facesFromIndexes","offset","side","mode","lHalf","wHalf","i0","i1","i2","i3","Uniform","LSymmetrical","WSymmetrical","LWSymmetrical","parityMatch","value","parity","Even","Odd","index","handler","scale","allPoints","map","v","points","forEach","h","x","y","z","log","r","BufferGeometry","transformedVertices","getVector","Vector3","normalIndex","setNormals","values","setNormalVectors","console","idx","v_0_1","subVectors","v_0_2","cross1","crossVectors","normalize","setAttribute","Float32BufferAttribute","setIndex","computeVertexNormals","CountourQuery","countour","segments","i","BodyShape","left","right","front","back","top","bottom","height","scaled","CW","CCW","sidePoints","contourFrontPoints","topPoints","wheels","frontSegments","offsetScale","contourQuery","frontPoints","query","apply","frontScale","yScale","zScale","wheel","find","Tools","betweenInclusive","center","arcRadius","wheelHeight","pythHB","Math","max","halfWidth","yTop","topOffset","wheelTop","design","section","result","every","transformed","sourcePoints","geometry","DesignTools","boxSize","interpolatedSegments","interpolationSource","existingSections","existingIndexes","startSectionIdx","startSection","nextSectionIdx","nextSection","dx","dy","sectionIdx","interpolatedSection","filter","Wheels","wheelGeometry","radius","min","wheelRadius","THREE","rotateX","PI","wheel1","translate","wheel2","AppScene","_subscription","_updateStream","Subject","scene","camera","light","renderer","bodyMesh","orbitControls","groundControls","container","ang","state","flatShading","animate","bind","pipe","debounce","interval","subscribe","updateMesh","init","subscribeForResizeEvents","requestAnimationFrame","forceUpdate","prevProps","renderSettings","ground","add","remove","next","unsubscribe","from","m","colorOdd","colorEven","colorWheels","wireframes","renderWheels","parts","color","interpolateSections","body","applyContour","material","wireframe","wheelsMaterial","wheelsBuilder","g","depthWrite","rotation","receiveShadow","grid","gridMaterial","opacity","transparent","axesHelper","window","innerWidth","innerHeight","position","setPixelRatio","devicePixelRatio","shadowMap","enabled","OrbitControls","domElement","target","set","update","castShadow","shadow","mapSize","d","far","initGround","lightOrbit","vec","applyAxisAngle","render","setSize","offsetWidth","offsetHeight","aspect","updateProjectionMatrix","appendChild","addEventListener","newWidth","newHeight","sizeProps","style","ref","onContainerCreated","React","Component","wheelDrawingMode","DrawingWheels","margin","toCtx","ctx","wheelArcFrontFrom","wheelArcFrontTo","wheelArcBackFrom","wheelArcBackTo","wheelRadiusHandle","beginPath","arc","moveTo","lineTo","stroke","fill","innerCenter","outerCenter","mappedWheelCountour","DrawingCanvas","canvas","sectionCanvas","buffer","lastPoint","sectionSelectorHeight","wheelMode","Create","wheelIndex","onMouseUp","processPoints","BufferStream","document","updateScale","removeEventListener","contour","maxY","currentScale","floor","setState","onCountourChange","e","stopPropagation","preventDefault","mouseDisconnected","drawSignal","clearRect","setLineDash","lineWidth","col","row","strokeStyle","yAxis","scalePoint","pt","wheelDrawing","drawingWheels","None","Side","drawWheelSide","Top","drawWheelTop","currentStyle","imageSmoothingEnabled","samplePoint","to","sectionMode","showSectionSelector","Pick","getContext","drawGrid","sectionBaseline","Edit","drawPoints","drawWheels","drawSections","samples","delta","inclusive","currentSamples","symmetrical","onSectionSelected","halfIndex","between","lerp","reflect","distToCenter","sqrt","pow","distToRadiusHandler","distToOffsetHandler","pythBP","distToWidthHandler","indexOf","wheelDataFromPoint","wheelData","some","rect","getBoundingClientRect","clientX","withinRange","round","clientY","wheelIndexFromPoint","Contour","Wheel","MoveCenter","onWheelChange","ChangeRadius","ChangeOffset","ChangeWidth","onSectionChanged","sections","sectionIndex","sectionSelected","className","type","onChange","parseInt","renderSectionSelector","onDoubleClick","onContextMenu","onPointerEnter","onPointerLeave","onPointerDown","buttons","setPosition","onPointerUp","onPointerMove","onPointerCancel","onMouseDown","onMouseMove","sectionPoints","s","newData","DesignStore","_stream","Rx","designStore","storageModel","defaultStorageModel","updateDesign","version","designs","newDesing","model","undefined","json","localStorage","getItem","JSON","parse","migrate","payload","stringify","setItem","loadFromLocalStorage","name","includes","saveStorageModel","saveToLocalStorage","setActiveDesign","newState","appendStorageModel","replaceStorageModel","Tutorial","title","content","image","alt","src","mainToolbarItems","sideEditorToolbar","items","dialogFactory","textSection","ToolbarFactory","dsoFactory","renderSettingsFactory","renderSettingsModified","dso","icon","action","Toolbar","Modal","tutorials","isSeparator","resetAll","loadSampleDesigns","newDesign","downloadDesigns","uploadDesigns","cloneDesign","settings","exportSTL","deleteDesign","selected","open","SideEditorToolbar","hasWheels","currentSection","sectionParams","Dialogs","buttonsFactory","CloseButtons","data","actions","a","fullscreenEdit","setDrawingMode","hidden","iconParams","readOnly","moveUp","moveDown","allUp","allDown","smooth","lockSection","removeSection","applyToRemaining","ModalSideEditor","_container","clone","id","clientWidth","clientHeight","newSamples","newWheels","SideEditor","OKCancelButtons","Notification","Confirm","onInterpolateSections","bordered","canEditSection","readOnlyTitle","titleParts","renderMenu","Boolean","join","show","DesignStoreOperations","designStoreState","contentType","fileName","blob","Blob","exportBlob","link","createElement","display","href","URL","createObjectURL","download","click","Forms","stringName","intXRotationDeg","intYRotationDeg","intZRotationDeg","params","exporter","STLExporter","bodyShape","All","designTools","finalGeometry","singleGeometry","mergeBufferGeometries","MathUtils","degToRad","rotateY","rotateZ","mesh","stl","exportText","axios","get","response","flagAppendToExisting","fileInput","onchange","file","files","fr","FileReader","onload","ev","parsed","toString","readAsText","now","Date","toLocaleDateString","toLocaleTimeString","cloneDesignParams","clonedDesign","MainToolbar","diff","renderSettingsChanged","modify","size","App","currentSectionData","ontouchstart","event","touches","hasStoredDesigns","initializeFromStorage","modifyDesign","modified","tableSizeProps","rowSizeProps","cellSizeProps","canvasWidth","canvasHeight","newPoints","modifiedSegments","classes","key","classNames","onClick","renderDesignSelector","renderDesign","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","mMin","mMax","source","Object","keys","k","hyp","base","perp","close","label","dialog","DialogsStream","override","Promise","resolve","reject","Remove","genericDialog","b","footer","genericDialogCallback","Add","Icon","iconProps","getIcon","IconSeparator","separatorParams","menuItems","ModalsComponent","internalDialogs","dialogs","op","newDialogs","backdrop","modalDialogs","modalContainer","modals","createPortal","DynamicForm","components","split","findIndex","c","toUpperCase","fieldLabel","substring","formComponent","fieldEditor","newValue","newModel","assign","fieldType","checked","padStart","form","ToolbarLegend","rows","colSpan","time","onNext","_subject","bufferTime"],"mappings":"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","file":"static/js/main.7bd5f112.chunk.js","sourcesContent":["import { Float32BufferAttribute, BufferGeometry, Vector3 } from \"three\";\r\nimport { IBodyPart } from \"./BodyShapeTypes\";\r\nimport { Generate, IPoint3D } from \"./lib\";\r\n\r\nexport enum generationMode {\r\n    Uniform,\r\n    LSymmetrical,\r\n    WSymmetrical,\r\n    LWSymmetrical\r\n}\r\n\r\nexport enum generationParity {\r\n    All,\r\n    Odd,\r\n    Even\r\n}\r\n\r\nexport enum normalsDirection {\r\n    CW = 1,\r\n    CCW = 2\r\n}\r\n\r\nexport interface ISidePlaneProps {\r\n    length: number;\r\n    width: number;\r\n    pointsMapper: (l: number, w: number) => IPoint3D;\r\n    mode: generationMode;\r\n    parity: generationParity;\r\n    log?: boolean;\r\n    direction: normalsDirection;\r\n}\r\n\r\nexport type pointMapper = (p: IPoint3D, allPoints: IPoint3D[]) => IPoint3D;\r\n\r\nexport interface IVerticeData {\r\n    vertice: IPoint3D;\r\n    handlers: pointMapper[];\r\n}\r\n\r\nexport class SidePlane implements IBodyPart  {\r\n    props: ISidePlaneProps;\r\n    vertices: IVerticeData[] = [];\r\n    indices: number[] = [];\r\n    uvs: number[] = [];\r\n    normals: number[] = [];\r\n\r\n    get offset() {\r\n        return this.props.length * this.props.width;\r\n    }\r\n\r\n    get width() {\r\n        return this.props.width;\r\n    }\r\n\r\n    get length() {\r\n        return this.props.length;\r\n    }\r\n\r\n    constructor(props: ISidePlaneProps) {\r\n        const { length, width, pointsMapper, direction } = props;\r\n        const { vertices, indices, uvs } = this;\r\n\r\n        this.props = props;\r\n\r\n        for (const l of Generate.range(0, length)) {\r\n            for (const w of Generate.range(0, width)) {\r\n                vertices.push({\r\n                    vertice: pointsMapper(l, w),\r\n                    handlers: []\r\n                });\r\n                uvs.push(0.5, 0.5);\r\n                //uvs.push(1, 1);\r\n            }\r\n        }\r\n\r\n        for (const l of Generate.range(0, length)) {\r\n            for (const w of Generate.range(0, width)) {\r\n                const p = pointsMapper(l, w);\r\n                vertices.push({\r\n                    vertice: p,\r\n                    handlers: []\r\n                });\r\n                uvs.push(0.5, 0.5);\r\n                //uvs.push(1, 1);\r\n            }\r\n        }\r\n\r\n        const facesFromIndexes = (\r\n            offset: number, \r\n            l: number, \r\n            w: number,\r\n            side: \"front\" | \"back\"\r\n            ) => {\r\n            const { mode } = this.props;\r\n\r\n            const lHalf = (length - 1) / 2;\r\n            const wHalf = (width - 1) / 2;\r\n\r\n            const i0 = offset + l * width + w;\r\n            const i1 = i0 + 1;\r\n            const i2 = i0 + width;\r\n            const i3 = i2 + 1;\r\n\r\n            switch (side) {\r\n                case \"front\":\r\n                    switch (mode) {\r\n                        case generationMode.Uniform: \r\n                            return [\r\n                                i0, i1, i2,\r\n                                i1, i3, i2,\r\n                            ];  \r\n                        case generationMode.LSymmetrical:\r\n                            if ( l < lHalf) {\r\n                                return [\r\n                                    i0, i1, i3,\r\n                                    i0, i3, i2,\r\n                                ]; \r\n                            }\r\n                            else {\r\n                                return [\r\n                                    i0, i1, i2,\r\n                                    i1, i3, i2,\r\n                                ]; \r\n                            }  \r\n                        case generationMode.WSymmetrical:\r\n                            if ( w < wHalf) {\r\n                                return [\r\n                                    i0, i1, i3,\r\n                                    i0, i3, i2,\r\n                                ]; \r\n                            }\r\n                            else {\r\n                                return [\r\n                                    i0, i1, i2,\r\n                                    i1, i3, i2,\r\n                                ]; \r\n                            }    \r\n                        case generationMode.LWSymmetrical:\r\n                            if ((w < wHalf) === (l < lHalf)) {\r\n                                return [\r\n                                    i0, i1, i3,\r\n                                    i0, i3, i2,\r\n                                ]; \r\n                            }\r\n                            else {\r\n                                return [\r\n                                    i0, i1, i2,\r\n                                    i1, i3, i2,\r\n                                ]; \r\n                            }  \r\n                    }\r\n                    break;\r\n                case \"back\":\r\n                    switch (mode) {\r\n                        case generationMode.Uniform: \r\n                            return [\r\n                                i0, i2, i1,\r\n                                i1, i2, i3,\r\n                            ]\r\n                        case generationMode.LSymmetrical:\r\n                            if ( l < lHalf) {\r\n                                return [\r\n                                    i0, i3, i1,\r\n                                    i0, i2, i3,\r\n                                ]  \r\n                            }\r\n                            else {\r\n                                return [\r\n                                    i0, i2, i1,\r\n                                    i1, i2, i3,\r\n                                ]  \r\n                            }   \r\n                        case generationMode.WSymmetrical:\r\n                            if ( w < wHalf) {\r\n                                return [\r\n                                    i0, i3, i1,\r\n                                    i0, i2, i3,\r\n                                ]  \r\n                            }\r\n                            else {\r\n                                return [\r\n                                    i0, i2, i1,\r\n                                    i1, i2, i3,\r\n                                ]  \r\n                            } \r\n                        case generationMode.LWSymmetrical:\r\n                            if ((w < wHalf) === (l < lHalf)) {\r\n                                return [\r\n                                    i0, i3, i1,\r\n                                    i0, i2, i3,\r\n                                ]  \r\n                            }\r\n                            else {\r\n                                return [\r\n                                    i0, i2, i1,\r\n                                    i1, i2, i3,\r\n                                ]  \r\n                            } \r\n                    }\r\n            }\r\n\r\n            return [];\r\n        }\r\n\r\n        // TODO: something is wrong with face normals.\r\n        // Blender does not show them on both sides when double faced is enforced.\r\n\r\n        const enforceDoubleSided = true;\r\n        if (enforceDoubleSided || (direction & normalsDirection.CCW) === normalsDirection.CCW) {\r\n            for (const l of Generate.range(0, length - 1)) {\r\n                for (const w of Generate.range(0, width - 1)) {\r\n                    if (!this.parityMatch((l + w) % 2 !== 0)) continue;\r\n    \r\n                    indices.push(...facesFromIndexes(0, l, w, \"front\"));\r\n                }\r\n            }\r\n        }\r\n\r\n        if (enforceDoubleSided || (direction & normalsDirection.CW) === normalsDirection.CW) {\r\n            for (const l of Generate.range(0, length - 1)) {\r\n                for (const w of Generate.range(0, width - 1)) {\r\n                    if (!this.parityMatch((l + w) % 2 !== 0)) continue;\r\n    \r\n                    indices.push(...facesFromIndexes(this.offset, l, w, \"back\"));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private parityMatch(value: boolean) {\r\n        const { parity } = this.props;\r\n        switch (parity) {\r\n            case generationParity.Even: return value === false;\r\n            case generationParity.Odd: return value === true;\r\n            default: return true;\r\n        }\r\n    }\r\n\r\n    public getVertice(index: number) {\r\n        return this.vertices[index].vertice;\r\n    }\r\n\r\n    public apply(handler: (l: number, w: number, p: IVerticeData) => void) {\r\n        const { length, width } = this.props;\r\n        const { vertices } = this;\r\n        for (const l of Generate.range(0, length)) {\r\n            for (const w of Generate.range(0, width)) {\r\n                handler(l, w, vertices[l * width + w]);\r\n            }\r\n        }\r\n\r\n        for (const l of Generate.range(0, length)) {\r\n            for (const w of Generate.range(0, width)) {\r\n                handler(l, w, vertices[this.offset + l * width + w]);\r\n            }\r\n        }     \r\n    }\r\n\r\n    public transformedVertices(scale: number) {\r\n        const { vertices } = this;\r\n        const allPoints = vertices.map(v => v.vertice);\r\n\r\n        const points: IPoint3D[] = [];\r\n        vertices.forEach(v => {\r\n            let p = v.vertice;\r\n            v.handlers.forEach(h => {\r\n                p = h(p, allPoints);\r\n            });\r\n            points.push({\r\n                x: p.x * scale,\r\n                y: p.y * scale,\r\n                z: p.z * scale\r\n            });\r\n        });\r\n\r\n        return points;\r\n    }\r\n    \r\n    public geometry(scale: number): BufferGeometry {\r\n        const { vertices, indices, uvs, normals } = this;\r\n        const { log } = this.props;\r\n\r\n        const r = new BufferGeometry();\r\n\r\n        const points: number[] = [];\r\n\r\n        const transformed = this.transformedVertices(scale);\r\n        transformed.forEach(p => points.push(p.x, p.y, p.z));\r\n\r\n        const getVector = (index: number) => {\r\n            const vertice =  vertices[index].vertice\r\n            return new Vector3(vertice.x, vertice.y, vertice.z);\r\n        }\r\n        \r\n        let normalIndex = 0;\r\n        const setNormals = (...values: number[]) => {\r\n            for (const value of values) {\r\n                normals[normalIndex++] = value;\r\n            }\r\n        }\r\n\r\n        const setNormalVectors = (...values: Vector3[]) => {\r\n            for (const value of values) {\r\n                if (log) console.log(value);\r\n                setNormals(value.x, value.y, value.z);\r\n            }\r\n        }\r\n\r\n        for (let idx = 0; idx < indices.length; idx += 3) {\r\n            const v_0_1 = new Vector3().subVectors(getVector(indices[idx + 1]), getVector(indices[idx]));\r\n            const v_0_2 = new Vector3().subVectors(getVector(indices[idx + 2]), getVector(indices[idx]));\r\n\r\n            const cross1 = new Vector3().crossVectors(v_0_1, v_0_2).normalize();\r\n            setNormalVectors(cross1, cross1, cross1);\r\n        }\r\n \r\n        r.setAttribute('position', new Float32BufferAttribute(points, 3));\r\n        r.setAttribute('normal', new Float32BufferAttribute(normals, 3));\r\n        r.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\r\n        r.setIndex(indices);\r\n\r\n        r.computeVertexNormals();\r\n\r\n        return r;\r\n    }\r\n}\r\n","import { BufferGeometry } from \"three\";\r\n\r\nexport interface IBodyPart {\r\n    geometry(scale: number): BufferGeometry;\r\n}\r\n\r\nexport class BaseBodyShape {\r\n    get halfLegth() {\r\n        return (this.lengthPoints - 1) / 2;\r\n    }\r\n    get halfWidth() {\r\n        return (this.widthPoints - 1) / 2;\r\n    }\r\n    get halfHeight() {\r\n        return (this.heightPoints - 1) / 2;\r\n    }\r\n\r\n    constructor(\r\n        protected lengthPoints: number, \r\n        protected widthPoints: number, \r\n        protected heightPoints: number) {\r\n    }\r\n}","import { IPoint2D } from \"../../lib\";\r\n\r\nexport enum drawingMode {\r\n    Contour,\r\n    Wheel\r\n}\r\n\r\nexport enum wheelDrawingType {\r\n    None,\r\n    Top,\r\n    Side\r\n}\r\n\r\nexport interface IWheelModel {\r\n    center: IPoint2D;\r\n    wheelRadius: number;\r\n    arcRadius: number;\r\n    offset: number;\r\n    width: number;\r\n}\r\n\r\nexport enum sectionEditorMode {\r\n    None,\r\n    Pick,\r\n    Edit\r\n}","import { BufferGeometry } from \"three\";\r\nimport { BaseBodyShape, IBodyPart } from \"./BodyShapeTypes\";\r\nimport { IWheelModel } from \"./components/drawing-model\";\r\nimport { IDesign } from \"./DesignStore\";\r\nimport { Generate, IPoint2D, IPoint3D, ISectionData, ISectionPoints, Tools } from \"./lib\";\r\nimport { generationMode, generationParity, normalsDirection, SidePlane } from \"./SidePlane\";\r\n\r\nexport class CountourQuery\r\n{\r\n    constructor(private countour: IPoint2D[], private segments: IPoint2D[][]) {\r\n\r\n    }\r\n\r\n    query(l: number) {\r\n        const {countour, segments } = this;\r\n        for (let i = l; i >= 0; i--)\r\n            if (segments[i]) return segments[i];\r\n\r\n        return countour;\r\n    }\r\n}\r\n\r\nexport class BodyShape extends BaseBodyShape {\r\n    private left: SidePlane;\r\n    private right: SidePlane;\r\n    private front: SidePlane;\r\n    private back: SidePlane;\r\n    private top: SidePlane;\r\n    private bottom: SidePlane;\r\n\r\n    constructor(\r\n        lengthPoints: number, \r\n        widthPoints: number, \r\n        heightPoints: number,\r\n        parity: generationParity) {\r\n\r\n        super(lengthPoints, widthPoints, heightPoints);\r\n\r\n        const length = lengthPoints - 1;\r\n        const width = widthPoints - 1;\r\n        const height = heightPoints - 1;\r\n\r\n        const halfLegth = 0;// (lengthPoints - 1) / 2;\r\n        const halfWidth = 0;//(widthPoints - 1) / 2;\r\n        const halfHeight = 0;//(heightPoints - 1) / 2;\r\n\r\n        //console.log(halfLegth, halfWidth, halfHeight);\r\n\r\n        const scale = (points: number[]): IPoint3D => {\r\n            const scaled = points.map(p => p);\r\n            return {\r\n                x: scaled[0],\r\n                y: scaled[1],\r\n                z: scaled[2]\r\n            };\r\n        };\r\n\r\n        this.left = new SidePlane({\r\n            length: lengthPoints,\r\n            width: heightPoints,\r\n            pointsMapper: (l, w) => scale([l - halfLegth, w - halfHeight, width - halfWidth]),\r\n            mode: generationMode.LSymmetrical,\r\n            parity: parity,\r\n            direction: normalsDirection.CW\r\n        });\r\n\r\n        this.right = new SidePlane({\r\n            length: lengthPoints,\r\n            width: heightPoints,\r\n            pointsMapper: (l, w) => scale([l - halfLegth, w - halfHeight, - halfWidth]),\r\n            mode: generationMode.LSymmetrical,\r\n            parity: parity,\r\n            direction: normalsDirection.CCW\r\n        });\r\n\r\n        this.front = new SidePlane({\r\n            length: widthPoints,\r\n            width: heightPoints,\r\n            pointsMapper: (l, w) => scale([-halfLegth, w - halfHeight, l - halfWidth]),\r\n            mode: generationMode.LSymmetrical,\r\n            parity: parity,\r\n            direction: normalsDirection.CW\r\n        });\r\n\r\n        this.back = new SidePlane({\r\n            length: widthPoints,\r\n            width: heightPoints,\r\n            pointsMapper: (l, w) => scale([length - halfLegth, w - halfHeight, l - halfWidth]),\r\n            mode: generationMode.LSymmetrical,\r\n            parity: parity,\r\n            direction: normalsDirection.CCW\r\n        });\r\n\r\n        this.top = new SidePlane({\r\n            length: lengthPoints,\r\n            width: widthPoints,\r\n            pointsMapper: (l, w) => scale([l - halfLegth, height - halfHeight, w - halfWidth]),\r\n            mode: generationMode.LWSymmetrical,\r\n            parity: parity,\r\n            direction: normalsDirection.CCW\r\n        });    \r\n\r\n        this.bottom = new SidePlane({\r\n            length: lengthPoints,\r\n            width: widthPoints,\r\n            pointsMapper: (l, w) => scale([l - halfLegth, 0/*height - halfHeight*/, w - halfWidth]),\r\n            mode: generationMode.LWSymmetrical,\r\n            parity: parity,\r\n            direction: normalsDirection.CW\r\n        });  \r\n    }\r\n\r\n    public applyContour(\r\n        sidePoints: IPoint2D[],\r\n        contourFrontPoints: IPoint2D[],\r\n        topPoints: IPoint2D[],\r\n        wheels: IWheelModel[],\r\n        frontSegments: IPoint2D[][]\r\n    ) {\r\n        const { lengthPoints, widthPoints, heightPoints } = this;\r\n\r\n        const offsetScale = (value: number, offset: number, scale: number) => {\r\n            return (value - offset) * scale + offset;\r\n        }\r\n\r\n        const contourQuery = new CountourQuery(contourFrontPoints, frontSegments);\r\n        const frontPoints = (l: number) => {\r\n            return contourQuery.query(l);\r\n        }\r\n\r\n        this.left.apply((l, w, p) => {\r\n            const frontScale = frontPoints(l)[widthPoints - 1].y / heightPoints;\r\n            const yScale = sidePoints[l].y / heightPoints;\r\n            const zScale = topPoints[l].y / widthPoints;\r\n\r\n            p.handlers = [(p) => {\r\n                const wheel = wheels.find(w => Tools.betweenInclusive(p.x, w.center.x - w.arcRadius, w.center.x + w.arcRadius));\r\n\r\n                if (wheel) {\r\n                    const wheelHeight = Tools.pythHB(wheel.arcRadius, wheel.center.x - p.x );\r\n                    const y = Math.max(wheel.center.y + wheelHeight, p.y * yScale * frontScale);\r\n                    return {\r\n                        x: p.x,\r\n                        y: y,//p.y * yScale * frontScale,\r\n                        z: offsetScale(p.z, this.halfWidth, zScale)\r\n                    }\r\n                }\r\n                else {\r\n                    return {\r\n                        x: p.x,\r\n                        y: p.y * yScale * frontScale,\r\n                        z: offsetScale(p.z, this.halfWidth, zScale)\r\n                    }\r\n                }\r\n            }]\r\n        });\r\n\r\n        this.right.apply((l, w, p) => {\r\n            const frontScale = frontPoints(l)[0].y / heightPoints;\r\n            const yScale = sidePoints[l].y / heightPoints;\r\n            const zScale = topPoints[l].y / widthPoints;\r\n\r\n            p.handlers = [(p) => {\r\n                const wheel = wheels.find(w => Tools.betweenInclusive(p.x, w.center.x - w.arcRadius, w.center.x + w.arcRadius));\r\n\r\n                if (wheel) {\r\n                    const wheelHeight = Tools.pythHB(wheel.arcRadius, wheel.center.x - p.x );\r\n                    const y = Math.max(wheel.center.y + wheelHeight, p.y * yScale * frontScale);\r\n                    return {\r\n                        x: p.x,\r\n                        y: y,//p.y * yScale * frontScale,\r\n                        z: offsetScale(p.z, this.halfWidth, zScale)\r\n                    }\r\n                }\r\n                else {\r\n                    return {\r\n                        x: p.x,\r\n                        y: p.y * yScale * frontScale,\r\n                        z: offsetScale(p.z, this.halfWidth, zScale)\r\n                    }\r\n                }\r\n            }]\r\n        });\r\n\r\n        this.top.apply((l, w, p) => {\r\n            const frontScale = frontPoints(l)[w].y / heightPoints;\r\n            const yScale = sidePoints[l].y / heightPoints;\r\n            const zScale = topPoints[l].y / widthPoints;\r\n\r\n            p.handlers = [(p) => {\r\n                const wheel = wheels.find(w => Tools.betweenInclusive(p.x, w.center.x - w.arcRadius, w.center.x + w.arcRadius));\r\n\r\n                if (wheel) {\r\n                    const wheelHeight = Tools.pythHB(wheel.arcRadius, wheel.center.x - p.x );\r\n\r\n                    const yTop = p.y * yScale * frontScale;\r\n                    const topOffset = p.z === 0 || p.z === widthPoints - 1 ? 0 : 1;\r\n\r\n                    const wheelTop = wheel.center.y + wheelHeight + topOffset;\r\n\r\n                    const y = Tools.betweenInclusive(p.z, this.halfWidth - wheel.offset + 1, this.halfWidth + wheel.offset - 1)\r\n                        ? yTop\r\n                        : Math.max(yTop, wheelTop);\r\n\r\n                    return {\r\n                        x: p.x,\r\n                        y: y,\r\n                        z: offsetScale(p.z, this.halfWidth, zScale)\r\n                    }         \r\n                }\r\n                else {\r\n                    return {\r\n                        x: p.x,\r\n                        y: p.y * yScale * frontScale,\r\n                        z: offsetScale(p.z, this.halfWidth, zScale)\r\n                    }\r\n                }\r\n            }]\r\n        });\r\n\r\n        this.bottom.apply((l, w, p) => {\r\n            const frontScale = frontPoints(l)[w].y / heightPoints;\r\n            const yScale = sidePoints[l].y / heightPoints;\r\n            const zScale = topPoints[l].y / widthPoints;\r\n\r\n            p.handlers = [(p, allPoints) => {\r\n                const wheel = wheels.find(w => Tools.betweenInclusive(p.x, w.center.x - w.arcRadius, w.center.x + w.arcRadius));\r\n\r\n                if (wheel) {\r\n                    const wheelHeight = Tools.pythHB(wheel.arcRadius, wheel.center.x - p.x );\r\n\r\n                    const y = Tools.betweenInclusive(p.z, this.halfWidth - wheel.offset, this.halfWidth + wheel.offset)\r\n                        ? p.y * yScale * frontScale\r\n                        : wheel.center.y + wheelHeight;\r\n\r\n                    return {\r\n                        x: p.x,\r\n                        y: y,\r\n                        z: offsetScale(p.z, this.halfWidth, zScale)\r\n                    }         \r\n                }\r\n                else {\r\n                    return {\r\n                        x: p.x,\r\n                        y: p.y * yScale * frontScale,\r\n                        z: offsetScale(p.z, this.halfWidth, zScale)\r\n                    }\r\n                }\r\n            }]\r\n        });\r\n\r\n        this.front.apply((l, w, p) => {\r\n            const frontScale = frontPoints(0)[l].y / heightPoints;\r\n            const yScale = sidePoints[0].y / heightPoints;\r\n            const zScale = topPoints[0].y / widthPoints;\r\n\r\n            p.handlers = [(p) => {\r\n                return {\r\n                    x: p.x,\r\n                    y: p.y * yScale * frontScale,\r\n                    z: offsetScale(p.z, this.halfWidth, zScale)\r\n                }\r\n            }]\r\n        });\r\n\r\n        this.back.apply((l, w, p) => {\r\n            const frontScale = frontPoints(this.top.length - 1)[l].y / heightPoints;\r\n            const yScale = sidePoints[lengthPoints - 1].y / heightPoints;\r\n            const zScale = topPoints[lengthPoints - 1].y / widthPoints;\r\n\r\n            p.handlers = [(p) => {\r\n                return {\r\n                    x: p.x,\r\n                    y: p.y * yScale * frontScale,\r\n                    z: offsetScale(p.z, this.halfWidth, zScale)\r\n                }\r\n            }]\r\n        });\r\n    }\r\n\r\n\r\n    public sectionPoints(\r\n        design: IDesign,\r\n        section: ISectionData): ISectionPoints {\r\n        const { \r\n            front, top,\r\n            //left, right, \r\n            //back,  bottom \r\n        } = this;\r\n\r\n        const result : ISectionPoints = {\r\n            front: [],\r\n            side: [],\r\n            top: []\r\n        }\r\n\r\n        if (section === null || [section.front, section.side, section.top].every(p => p === null)) return result;\r\n\r\n        const transformed = top.transformedVertices(1);\r\n\r\n        if (section.front !== null) {\r\n            if (design.frontSegments[section.front]) {\r\n                result.front.push(...design.frontSegments[section.front]);\r\n            }\r\n            else {\r\n                const sourcePoints = Generate\r\n                .range(0, front.length)\r\n                .map(y => transformed[y + (section.front || 0) * front.length])\r\n                ;\r\n\r\n                result.front.push(...sourcePoints.map(p => ({ x: p.x, y: p.y })));\r\n            }\r\n        }\r\n\r\n        if (section.top !== null) {\r\n            const sourcePoints = Generate\r\n                .range(0, top.length)\r\n                .map(y => transformed[(section.top || 0) + y * top.width])\r\n                ;\r\n\r\n            result.top.push(...sourcePoints.map(p => ({ x: p.x, y: p.z })));\r\n        }\r\n\r\n        if (section.side !== null) {\r\n            const sourcePoints = Generate\r\n                .range(0, top.length)\r\n                .map(y => transformed[(section.side || 0) + y * top.width])\r\n                ;\r\n\r\n            result.side.push(...sourcePoints.map(p => ({ x: p.x, y: p.y })));\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public get geometry(): BufferGeometry[] {\r\n        const { left, right, front, back, top, bottom } = this;\r\n      \r\n        const parts: IBodyPart[] = [\r\n            left,\r\n            right,\r\n            front, \r\n            back, \r\n            top,\r\n            bottom\r\n        ]\r\n        return parts.map(p => p.geometry(5));\r\n    }\r\n}\r\n","import { IDesign } from \"./DesignStore\";\r\nimport { Generate, IPoint2D } from \"./lib\";\r\n\r\nexport class DesignTools {\r\n    constructor(private design: IDesign) {\r\n\r\n    }\r\n\r\n    get interpolationSource() {\r\n        const { design } = this;\r\n        const { frontSegments, frontPoints  } = design;\r\n        const interpolatedSegments: IPoint2D[][] = [...frontSegments];\r\n\r\n        // prefill first segmet with from countour\r\n        if (!interpolatedSegments[0]) interpolatedSegments[0] = [...frontPoints];\r\n\r\n        return interpolatedSegments;\r\n    }\r\n\r\n    get existingIndexes() {\r\n        const { design } = this;\r\n        const { boxSize } = design;\r\n        const interpolationSource = this.interpolationSource;\r\n        const sectionsIndexes = Generate.range(0, boxSize.x);\r\n        const existingSections = sectionsIndexes.filter(i => interpolationSource[i]);\r\n\r\n        return existingSections;\r\n    }\r\n\r\n    interpolateSections() {\r\n        const { design } = this;\r\n        const { boxSize } = design;\r\n\r\n        const interpolatedSegments = this.interpolationSource;\r\n        const existingSections = this.existingIndexes;\r\n\r\n        for (let idx = 0; idx < existingSections.length - 1; idx++)\r\n        {\r\n            const startSectionIdx = existingSections[idx];\r\n            const startSection = interpolatedSegments[startSectionIdx];\r\n\r\n            const nextSectionIdx = existingSections[idx + 1];\r\n            const nextSection = interpolatedSegments[nextSectionIdx];\r\n            const dx = nextSectionIdx - startSectionIdx;\r\n            const dy = Generate.range(0, boxSize.y).map(i => (nextSection[i].y - startSection[i].y) / dx);\r\n\r\n            for (let sectionIdx = startSectionIdx + 1; sectionIdx < nextSectionIdx; sectionIdx++) {\r\n                const interpolatedSection = Generate.range(0, boxSize.y).map((i): IPoint2D => ({\r\n                    x: i,\r\n                    y: startSection[i].y + dy[i] * (sectionIdx - startSectionIdx)\r\n                }));\r\n                interpolatedSegments[sectionIdx] = interpolatedSection;\r\n            }\r\n        }\r\n\r\n        return interpolatedSegments;\r\n    }\r\n}","import * as THREE from 'three';\r\nimport { BaseBodyShape } from \"./BodyShapeTypes\";\r\nimport { IWheelModel } from './components/drawing-model';\r\n\r\nexport class Wheels extends BaseBodyShape {\r\n    geometry(wheels: IWheelModel[]) {\r\n        const result: THREE.BufferGeometry[] = [];\r\n        const scale = 5;\r\n\r\n        const wheelGeometry = (wheel: IWheelModel) => {\r\n            const radius = Math.min(wheel.wheelRadius, wheel.arcRadius - 0.5);\r\n\r\n            const wheelGeometry = new THREE.CylinderGeometry( \r\n                radius * scale, \r\n                radius * scale, \r\n                wheel.width * scale, \r\n                32 \r\n            );\r\n\r\n            wheelGeometry.rotateX(Math.PI / 2);\r\n            return wheelGeometry;\r\n        }\r\n\r\n        for (const wheel of wheels) {\r\n\r\n            const wheel1 = wheelGeometry(wheel);\r\n\r\n            wheel1.translate(\r\n                wheel.center.x * scale, \r\n                wheel.center.y * scale,\r\n                (this.halfWidth - wheel.offset) * scale - wheel.width * scale / 2\r\n            );\r\n\r\n            result.push(wheel1);\r\n\r\n            const wheel2 = wheelGeometry(wheel);\r\n\r\n            wheel2.translate(\r\n                wheel.center.x * scale, \r\n                wheel.center.y * scale,\r\n                (this.halfWidth + wheel.offset) * scale + wheel.width * scale / 2\r\n            );\r\n\r\n            result.push(wheel2);\r\n        }\r\n        \r\n        return result;\r\n    }\r\n}","import React from \"react\"\r\nimport * as THREE from 'three';\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport { BodyShape } from \"./BodyShape\";\r\nimport { IRenderSettings } from \"./lib\";\r\nimport { Vector3 } from \"three\";\r\nimport { generationParity } from \"./SidePlane\";\r\nimport { Subject, debounce, Subscription, interval } from \"rxjs\";\r\nimport { IDesign } from \"./DesignStore\";\r\nimport { DesignTools } from \"./DesignTools\";\r\nimport { Wheels } from \"./Wheels\";\r\n// https://dustinpfister.github.io/2018/04/13/threejs-orbit-controls/\r\n// https://stackoverflow.com/questions/2368784/draw-on-html5-canvas-using-a-mouse\r\n// https://threejs.org/docs/#examples/en/controls/OrbitControls\r\n\r\nexport interface IProps {\r\n    height: number;\r\n    width: number;\r\n    design: IDesign;\r\n    renderSettings: IRenderSettings;\r\n}\r\n\r\ninterface IState {\r\n}\r\n\r\nexport class AppScene extends React.Component<IProps, IState> {\r\n    _subscription: Subscription;\r\n    _updateStream: Subject<{}> = new Subject<{}>();\r\n\r\n    scene: THREE.Scene | null = null;\r\n    camera: THREE.PerspectiveCamera | null = null;\r\n    light: THREE.DirectionalLight | null = null;\r\n    renderer: THREE.WebGLRenderer | null = null;\r\n    bodyMesh: THREE.Mesh[] | null = null;\r\n    orbitControls: OrbitControls | null = null;\r\n    groundControls: THREE.Object3D[] = [];\r\n\r\n    container: HTMLDivElement | null = null;\r\n\r\n    public constructor(props: IProps)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            flatShading: true\r\n        }\r\n        this.animate = this.animate.bind(this);\r\n        \r\n        this._subscription = this\r\n            ._updateStream\r\n            .pipe(debounce(() => interval(500)))\r\n            .subscribe(() => this.updateMesh(\"debounce\"));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.init();\r\n        this.subscribeForResizeEvents();\r\n        this.updateMesh(\"mount\");\r\n\r\n        requestAnimationFrame(this.animate);\r\n        this.forceUpdate();\r\n    }\r\n\r\n    componentDidUpdate(prevProps: IProps) {\r\n        if (prevProps.renderSettings.ground !== this.props.renderSettings.ground) {\r\n            if (this.props.renderSettings.ground) {\r\n                this.scene?.add(...this.groundControls);\r\n            }\r\n            else {\r\n                this.scene?.remove(...this.groundControls);\r\n            }\r\n        }\r\n\r\n        this._updateStream.next({});\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._subscription.unsubscribe();\r\n    }\r\n\r\n    updateMesh(from: string) {\r\n        const { scene } = this;\r\n\r\n        if (!scene) return;\r\n\r\n        if (this.bodyMesh)\r\n            this.bodyMesh.forEach(m => this.scene?.remove(m));\r\n\r\n        this.bodyMesh = [];\r\n\r\n        const { \r\n            design,\r\n            renderSettings\r\n        } = this.props;\r\n        const { \r\n            boxSize, \r\n            frontPoints, \r\n            sidePoints, \r\n            topPoints, \r\n            colorOdd, \r\n            colorEven, \r\n            colorWheels,\r\n            wheels \r\n        } = design;\r\n\r\n        const { flatShading, wireframes, renderWheels } = renderSettings;\r\n        const wireframesColor = 0x00FF00;\r\n        \r\n        const parts = [\r\n            { parity: generationParity.Odd, color: colorOdd },\r\n            { parity: generationParity.Even, color: colorEven }          \r\n        ];\r\n\r\n        const designTools = new DesignTools(design);\r\n        const interpolatedSegments = designTools.interpolateSections();\r\n    \r\n        for (const p of parts) {\r\n            const body = new BodyShape(boxSize.x, boxSize.y, boxSize.z, p.parity);\r\n            body.applyContour(sidePoints, frontPoints, topPoints, wheels, interpolatedSegments);\r\n\r\n            //const material = new THREE.MeshBasicMaterial( { color: 0xffff00, wireframe: true } );\r\n            //const material = new THREE.MeshBasicMaterial( { color: 0xffff00 } );\r\n            const material = new THREE.MeshPhongMaterial({ \r\n                color: wireframes ? wireframesColor : p.color, \r\n                wireframe: wireframes, \r\n                flatShading: flatShading \r\n            });\r\n            this.bodyMesh.push(...body.geometry.map(m => new THREE.Mesh( m, material )));\r\n        }\r\n\r\n        if (renderWheels) {\r\n            const wheelsMaterial = new THREE.MeshPhongMaterial({ \r\n                color: wireframes ? wireframesColor : colorWheels, \r\n                wireframe: wireframes, \r\n                flatShading: flatShading \r\n            });\r\n    \r\n            const wheelsBuilder = new Wheels(boxSize.x, boxSize.y, boxSize.z);\r\n            this.bodyMesh.push(...wheelsBuilder.geometry(wheels).map(g => new THREE.Mesh(g, wheelsMaterial )));\r\n        }\r\n\r\n        this.bodyMesh.forEach(m => scene.add( m ));\r\n    }\r\n\r\n    initGround() {\r\n        if (!this.scene) return;\r\n\r\n        const ground = new THREE.Mesh( new THREE.PlaneGeometry( 2000, 2000 ), new THREE.MeshPhongMaterial( { color: 0x999999, depthWrite: false } ) );\r\n        ground.rotation.x = - Math.PI / 2;\r\n        ground.receiveShadow = true;\r\n\r\n        const grid = new THREE.GridHelper( 2000, 20, 0x000000, 0x000000 );\r\n        const gridMaterial = grid.material as THREE.Material;\r\n        gridMaterial.opacity = 0.2;\r\n        gridMaterial.transparent = true;\r\n\r\n        this.groundControls = [ground, grid]\r\n\r\n        this.scene.add( ...this.groundControls );\r\n    }\r\n\r\n    init()\r\n    {\r\n        this.scene = new THREE.Scene();\r\n    \r\n        // The X axis is red. The Y axis is green. The Z axis is blue.\r\n        var axesHelper = new THREE.AxesHelper( 500 );\r\n        this.scene.add( axesHelper );\r\n\r\n        //this.scene.background = new THREE.Color( 0xa0a0a0 );\r\n        //this.scene.fog = new THREE.Fog( 0xa0a0a0, 200, 5000 );\r\n\r\n        this.camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 1, 10000 );\r\n        this.camera.position.x = -300;\r\n        this.camera.position.z = 300;\r\n        this.camera.position.y = 300;\r\n        this.renderer = new THREE.WebGLRenderer();\r\n        this.renderer.setPixelRatio( window.devicePixelRatio );\r\n        this.renderer.shadowMap.enabled = true;\r\n\r\n        this.orbitControls = new OrbitControls(this.camera, this.renderer.domElement);\r\n        this.orbitControls.target.set( 0, 25, 0 );\r\n        this.orbitControls.update();\r\n\r\n        this.scene.add( new THREE.AmbientLight( 0x777777 ) );\r\n\r\n        this.light = new THREE.DirectionalLight( 0xdfebff, 1 );\r\n        this.light.position.set( 500, 600, 700 );\r\n        //light.position.multiplyScalar( 1.3 );\r\n\r\n        this.light.castShadow = true;\r\n\r\n        this.light.shadow.mapSize.width = 1024;\r\n        this.light.shadow.mapSize.height = 1024;\r\n\r\n        const d = 300;\r\n\r\n        this.light.shadow.camera.left = - d;\r\n        this.light.shadow.camera.right = d;\r\n        this.light.shadow.camera.top = d;\r\n        this.light.shadow.camera.bottom = - d;\r\n\r\n        this.light.shadow.camera.far = 1000;\r\n\r\n        this.scene.add( this.light );\r\n\r\n        this.initGround();\r\n    }\r\n\r\n    ang = 0;\r\n    animate()\r\n    {\r\n        const { renderSettings } = this.props;\r\n        const { renderer, scene, camera, orbitControls } = this;\r\n\r\n        requestAnimationFrame(this.animate);\r\n\r\n        if (renderSettings.lightOrbit) {\r\n            this.ang += 0.01;\r\n            const vec = new Vector3(500, 600, 700);\r\n            vec.applyAxisAngle(new Vector3(0, 1, 0), this.ang);\r\n    \r\n            this.light?.position?.set(vec.x, vec.y, vec.z);\r\n        }\r\n\r\n        orbitControls?.update();\r\n\r\n        if (renderer && scene && camera) {\r\n            renderer.render( scene, camera );\r\n        }\r\n    }\r\n\r\n    onContainerCreated(d: HTMLDivElement | null) {\r\n        this.container = d;\r\n        if (d && this.renderer?.domElement)\r\n        {\r\n            this.renderer.setSize(d.offsetWidth - 2, d.offsetHeight - 2);\r\n            if (this.camera) {\r\n                this.camera.aspect = d.offsetWidth / d.offsetHeight;\r\n                this.camera.updateProjectionMatrix();\r\n            }\r\n\r\n            d.appendChild?.(this.renderer.domElement);                \r\n        }\r\n    }\r\n\r\n    subscribeForResizeEvents() {\r\n        window.addEventListener(\"resize\", () => {\r\n            const { renderer, camera, container } = this;\r\n\r\n            if (renderer && container && camera) {\r\n                const newWidth = container.offsetWidth - 2;\r\n                const newHeight = container.offsetHeight - 2;\r\n                camera.aspect = newWidth / newHeight;\r\n                camera.updateProjectionMatrix();\r\n                renderer.setSize(newWidth, newHeight);\r\n            }\r\n        });\r\n    }\r\n\r\n    public render() {\r\n        const { width, height } = this.props;\r\n\r\n        const sizeProps: React.CSSProperties = {\r\n            width: width,\r\n            height: height\r\n        };\r\n        \r\n        return (\r\n            <div style={sizeProps}>\r\n                <div style={sizeProps} ref={(d) => this.onContainerCreated(d)} />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { IDesign } from \"../../DesignStore\";\r\nimport { DesignTools } from \"../../DesignTools\";\r\nimport { BufferStream, Generate, IPoint2D } from \"../../lib\";\r\nimport { Tools } from \"../../lib/tools\";\r\nimport { drawingMode, IWheelModel, sectionEditorMode, wheelDrawingType } from \"../drawing-model\";\r\nimport \"./drawing-canvas.scss\";\r\nimport { DrawingWheels } from \"./drawing-wheels\";\r\n\r\nexport interface IDrawingCanvasProps {\r\n    id: string;\r\n    symmetrical: boolean;\r\n    height: number;\r\n    width: number;\r\n    maxY: number;\r\n    contour: IPoint2D[];\r\n    section: IPoint2D[] | null;\r\n    sectionBaseline: IPoint2D[] | null;\r\n    wheelDrawing: wheelDrawingType;\r\n    wheels: IWheelModel[] | null;\r\n    onCountourChange: (samples: IPoint2D[], wheels: IWheelModel[] | null) => void;\r\n    onSectionSelected: (showSectionSelector: boolean, section: number) => void;\r\n    onSectionChanged: (sections: number[], points: IPoint2D[] | null) => void;\r\n    sections: number;\r\n    design: IDesign;\r\n    sectionMode: sectionEditorMode;\r\n}\r\n\r\nenum wheelDrawingMode {\r\n    Create,\r\n    MoveCenter,\r\n    ChangeRadius,\r\n    ChangeWidth,\r\n    ChangeOffset\r\n}\r\n\r\ninterface IWheelData {\r\n    wheel: IWheelModel | null;\r\n    wheelIndex: number;\r\n    distToCenter: number;\r\n    distToRadiusHandler: number;\r\n    distToOffsetHandler: number;\r\n    distToWidthHandler: number;\r\n}\r\n\r\ninterface IProps extends IDrawingCanvasProps {\r\n    mode: drawingMode;\r\n    showSectionSelector: boolean;\r\n    sectionIndex: number;\r\n}\r\n\r\ninterface IState {\r\n    margin: number;\r\n    sectionSelectorHeight: number;\r\n    //width: number;\r\n    //height: number;\r\n    scale: number;\r\n    wheelMode: wheelDrawingMode;\r\n    wheelIndex: number;\r\n}\r\n\r\nexport class DrawingCanvas extends Component<IProps, IState> {\r\n    canvas: HTMLCanvasElement | null = null;\r\n    sectionCanvas: HTMLCanvasElement | null = null;\r\n\r\n    buffer: BufferStream<IPoint2D> | null = null;\r\n\r\n    enabled = false;\r\n    lastPoint: IPoint2D | null = null;\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            scale: 0,\r\n            margin: 25,\r\n            sectionSelectorHeight: 80,\r\n            wheelMode: wheelDrawingMode.Create,\r\n            wheelIndex: -1\r\n        }\r\n\r\n        this.onMouseUp = this.onMouseUp.bind(this);\r\n        this.processPoints = this.processPoints.bind(this);\r\n        this.buffer = new BufferStream<IPoint2D>(50, this.processPoints);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mouseup\", this.onMouseUp);\r\n        this.updateScale();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mouseup\", this.onMouseUp);\r\n    }\r\n\r\n    updateScale() {\r\n        const { width, height, contour, maxY} = this.props;\r\n        const { sectionSelectorHeight, scale: currentScale, margin } = this.state;\r\n\r\n        const scale = Math.min(\r\n            Math.floor((width - 2 * margin - 20) / contour.length),\r\n            Math.floor((height - 2 * margin - sectionSelectorHeight) / maxY)\r\n        );\r\n\r\n        if (currentScale !== scale) {\r\n            this.setState({\r\n                scale\r\n            })\r\n        }\r\n    }\r\n\r\n    get currentSamples(): IPoint2D[] {\r\n        const { contour, section, sectionBaseline, showSectionSelector } = this.props;\r\n\r\n        const sectionPoints = section || sectionBaseline;\r\n        const source = \r\n            showSectionSelector && sectionPoints\r\n            ? sectionPoints\r\n            : contour;\r\n        \r\n        return source.map(s => ({ ...s }));\r\n    }\r\n\r\n    set currentSamples(newData: IPoint2D[]) {\r\n        const { wheels, showSectionSelector, sectionIndex, onCountourChange, onSectionChanged } = this.props;\r\n\r\n        if (showSectionSelector) {\r\n            onSectionChanged([sectionIndex], newData);\r\n        }\r\n        else {\r\n            onCountourChange(newData, wheels);\r\n        }\r\n    }\r\n\r\n    mouseDisconnected() {\r\n        this.enabled = false;\r\n        this.lastPoint = null;\r\n        this.setState({\r\n            wheelMode: wheelDrawingMode.Create,\r\n            wheelIndex: -1\r\n        }, () => {\r\n            const { contour, wheels, onCountourChange } = this.props;\r\n            if (wheels) {\r\n                const validWheels = wheels.filter(w => w.arcRadius > 2);\r\n                onCountourChange(contour, validWheels);     \r\n            }\r\n        });\r\n    }\r\n\r\n    onMouseUp(e: MouseEvent | null) {\r\n        if (!this.enabled) return;\r\n\r\n        e?.stopPropagation();\r\n        e?.preventDefault();\r\n\r\n        this.mouseDisconnected();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.drawSignal();\r\n        this.updateScale();\r\n    }\r\n\r\n    get width() {\r\n        const { contour } = this.props;\r\n        const { scale } = this.state;\r\n        \r\n        return (contour.length - 1) * scale;\r\n    }\r\n\r\n    get height() {\r\n        const { maxY } = this.props;\r\n        const { scale } = this.state;\r\n\r\n        return maxY * scale;\r\n    }\r\n\r\n    drawGrid(ctx: CanvasRenderingContext2D) {\r\n        const { contour, maxY } = this.props;\r\n        const { scale, margin } = this.state;\r\n        \r\n        const width = (contour.length - 1) * scale;\r\n        const height = maxY * scale;\r\n\r\n        ctx.clearRect(0, 0, width + 2 * margin, height + 2 * margin);\r\n\r\n        ctx.setLineDash([]);\r\n        ctx.lineWidth = 1;\r\n\r\n        ctx.beginPath();\r\n        ctx.moveTo(margin, margin + height);\r\n        ctx.lineTo(margin + width, margin + height);\r\n        ctx.stroke();\r\n\r\n        ctx.setLineDash([1, 2])\r\n\r\n        for (const col of Generate.range(0, contour.length)) {\r\n            ctx.moveTo(margin + col * scale, margin);\r\n            ctx.lineTo(margin + col * scale, margin + height);    \r\n        }\r\n\r\n        for (const row of Generate.range(0, maxY)) {\r\n            ctx.moveTo(margin + 0, margin + row * scale);\r\n            ctx.lineTo(margin + width, margin + row * scale);    \r\n        }\r\n\r\n        ctx.strokeStyle = \"#000000\";\r\n        ctx.stroke();\r\n        ctx.setLineDash([]);\r\n    }\r\n\r\n    translate(p: IPoint2D | null): IPoint2D {\r\n        const { maxY } = this.props;\r\n        const { scale } = this.state;\r\n        const yAxis = maxY * scale;\r\n\r\n        if (!p) return { x: 0, y: 0 };\r\n\r\n        return {\r\n            x: Math.floor(p.x),\r\n            y: yAxis - p.y\r\n        };\r\n    }\r\n\r\n    samplePoint(points: IPoint2D[], idx: number): IPoint2D | null {\r\n        return this.scalePoint(points[idx]);\r\n    }\r\n\r\n    scalePoint(pt: IPoint2D | null) {\r\n        const { scale } = this.state;\r\n        if (!pt) return null;\r\n\r\n        return {\r\n            x: pt.x * scale,\r\n            y: pt.y * scale\r\n        }\r\n    }\r\n\r\n    drawWheels(ctx: CanvasRenderingContext2D) {\r\n        const { wheels, wheelDrawing } = this.props;\r\n        const { margin, scale } = this.state;\r\n\r\n        const drawingWheels = new DrawingWheels(margin, scale, (p) => this.translate(this.scalePoint(p)));\r\n\r\n        for (const wheel of wheels || []) {\r\n            switch (wheelDrawing) {\r\n                case wheelDrawingType.None: break;\r\n                case wheelDrawingType.Side: drawingWheels.drawWheelSide(ctx, wheel); break;\r\n                case wheelDrawingType.Top: drawingWheels.drawWheelTop(ctx, wheel); break;\r\n            }\r\n        }\r\n    }\r\n\r\n    drawPoints(ctx: CanvasRenderingContext2D, points: IPoint2D[], color: string) {\r\n        const { margin } = this.state;\r\n\r\n        const currentStyle = ctx.strokeStyle;\r\n        ctx.lineWidth = 3;\r\n        ctx.imageSmoothingEnabled = true;\r\n        ctx.strokeStyle = color;\r\n\r\n        ctx.beginPath();\r\n\r\n        for (let i = 0; i < points.length - 1; i++) {\r\n            const from = this.translate(this.samplePoint(points, i));\r\n            const to = this.translate(this.samplePoint(points, i + 1));\r\n\r\n            ctx.moveTo(margin + from.x, margin + from.y);\r\n            ctx.lineTo(margin + to.x, margin + to.y);\r\n        }\r\n\r\n        ctx.stroke();\r\n        ctx.strokeStyle = currentStyle;\r\n    }\r\n\r\n    drawSections(ctx: CanvasRenderingContext2D) {\r\n        const { margin } = this.state;\r\n        const { design, sectionMode, showSectionSelector } = this.props;\r\n    \r\n        if (!showSectionSelector || sectionMode !== sectionEditorMode.Pick) return;\r\n        const designTools = new DesignTools(design);\r\n        const existingIndexes = designTools.existingIndexes;\r\n\r\n        ctx.beginPath();\r\n\r\n        for (const idx of existingIndexes) {\r\n            const from = this.translate(this.scalePoint({ x: idx, y: 0 }));\r\n            const to = this.translate(this.scalePoint({x: idx, y: this.height}));\r\n\r\n            ctx.moveTo(margin + from.x, margin + from.y);\r\n            ctx.lineTo(margin + to.x, margin + to.y);\r\n        }\r\n\r\n        ctx.stroke();\r\n    }\r\n\r\n    drawSignal() {\r\n        const { canvas } = this;\r\n        if (!canvas) return;\r\n\r\n        const ctx = canvas.getContext(\"2d\");\r\n        if (!ctx) return;\r\n\r\n        this.drawGrid(ctx);\r\n\r\n        const { contour, section, sectionBaseline, showSectionSelector, sectionMode } = this.props;\r\n\r\n        if (showSectionSelector && sectionMode === sectionEditorMode.Edit) {            \r\n            if (sectionBaseline)\r\n                this.drawPoints(ctx, sectionBaseline, \"gray\");\r\n\r\n            if (section)\r\n                this.drawPoints(ctx, section, \"black\");\r\n        }\r\n        else {\r\n            this.drawPoints(ctx, contour, \"black\");\r\n        }\r\n\r\n\r\n        this.drawWheels(ctx);\r\n        this.drawSections(ctx);\r\n    }\r\n\r\n    lerp(samples: IPoint2D[], from: IPoint2D, to: IPoint2D) {\r\n        const dx = to.x - from.x;\r\n        const dy = to.y - from.y;\r\n        const delta = dy / dx;\r\n\r\n        Generate\r\n        .inclusive(from.x, to.x)\r\n        .forEach((i, idx) => {\r\n            samples[i].y = from.y + idx * delta;\r\n        })\r\n    }\r\n\r\n    reflect(pt: IPoint2D): IPoint2D {\r\n        const samples = this.currentSamples;\r\n        const halfIndex = (samples.length - 1) / 2;\r\n\r\n        return {\r\n            x: 2 * halfIndex - pt.x,\r\n            y: pt.y\r\n        }\r\n    }\r\n\r\n    processPoints(points: IPoint2D[]) {\r\n        const { symmetrical, showSectionSelector, sectionMode, onSectionSelected } = this.props;\r\n\r\n        if (showSectionSelector && sectionMode === sectionEditorMode.Pick) {\r\n            onSectionSelected(showSectionSelector, points[points.length - 1].x);\r\n            return;\r\n        }\r\n        \r\n        const samples = this.currentSamples;\r\n\r\n        const halfIndex = (samples.length - 1) / 2;\r\n\r\n        for (const pt of points) {\r\n            const { lastPoint } = this;\r\n            if (lastPoint && pt.x !== lastPoint.x) {\r\n                if (symmetrical) {\r\n                    if (Tools.between(halfIndex, lastPoint.x, pt.x)) {\r\n                        // do nothing here\r\n                        // console.log(\"skipped\", halfIndex, lastPoint.x, pt.x);\r\n\r\n                        //this.lerp(samples, lastPoint, pt);\r\n                        //this.lerp(samples, this.reflect(pt), this.reflect(lastPoint));\r\n                    }\r\n                    else {\r\n                        this.lerp(samples, lastPoint, pt);\r\n                        this.lerp(samples, this.reflect(pt), this.reflect(lastPoint));\r\n                    }\r\n                }\r\n                else {\r\n                    this.lerp(samples, lastPoint, pt);\r\n                }                \r\n            }\r\n            else {\r\n                if (symmetrical) {\r\n                    samples[pt.x].y = pt.y;\r\n                    samples[this.reflect(pt).x].y = pt.y;\r\n                }\r\n                else {\r\n                    samples[pt.x].y = pt.y;\r\n                }\r\n            }\r\n\r\n            this.lastPoint = pt;\r\n        }\r\n\r\n        this.currentSamples = samples;\r\n    }\r\n\r\n    onWheelChange(wheel: IWheelModel, wheelIndex: number) {\r\n        const { contour, wheels, onCountourChange } = this.props;\r\n        if (!wheels ) return;\r\n\r\n        if (wheelIndex === -1) {\r\n            this.setState({\r\n                wheelIndex: wheels.length\r\n            }, () => {\r\n                onCountourChange(contour, [...wheels, wheel])\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                wheelIndex: wheelIndex\r\n            }, () => {\r\n                onCountourChange(contour, wheels.map((w, idx) => idx === wheelIndex ? wheel : w))\r\n            })\r\n        }\r\n    }\r\n\r\n    wheelDataFromPoint(pt: IPoint2D, wheel: IWheelModel): IWheelData {\r\n        const { wheels } = this.props;\r\n\r\n        const distToCenter = Math.sqrt(\r\n            Math.pow(pt.x - wheel.center.x, 2) + \r\n            Math.pow(pt.y - wheel.center.y, 2),\r\n        );\r\n\r\n        const distToRadiusHandler = Math.sqrt(\r\n            Math.pow(pt.x - wheel.center.x, 2) + \r\n            Math.pow(pt.y - (wheel.center.y + wheel.wheelRadius), 2),\r\n        );\r\n\r\n        const distToOffsetHandler = Tools.pythBP(pt.x - wheel.center.x, pt.y - 2 * wheel.offset);\r\n        const distToWidthHandler = Tools.pythBP(pt.x - wheel.center.x, pt.y - 2 * (wheel.offset + wheel.width ));\r\n\r\n        return {\r\n            wheel,\r\n            wheelIndex: (wheels || []).indexOf(wheel),\r\n            distToCenter,\r\n            distToRadiusHandler,\r\n            distToOffsetHandler,\r\n            distToWidthHandler\r\n        }\r\n    }\r\n\r\n    wheelIndexFromPoint(pt: IPoint2D): IWheelData {\r\n        const { wheels } = this.props;\r\n        const { wheelIndex } = this.state;\r\n\r\n        if (wheels && wheels[wheelIndex]) return this.wheelDataFromPoint(pt, wheels[wheelIndex]);\r\n\r\n        for (const wheel of wheels || []) {\r\n            const wheelData = this.wheelDataFromPoint(pt, wheel);\r\n\r\n            const distances = [\r\n                wheelData.distToCenter,\r\n                wheelData.distToRadiusHandler,\r\n                wheelData.distToOffsetHandler,\r\n                wheelData.distToWidthHandler\r\n            ]\r\n\r\n            if (distances.some(d => d < 2)) {\r\n                return wheelData;\r\n            }\r\n        }\r\n\r\n        return {\r\n            wheel: null,\r\n            wheelIndex: -1,\r\n            distToCenter: 0,\r\n            distToRadiusHandler: 0,\r\n            distToOffsetHandler: 0,\r\n            distToWidthHandler: 0\r\n        }\r\n    };\r\n\r\n    fromCanvasCoordinates(canvas: HTMLCanvasElement | null, e: React.MouseEvent<HTMLCanvasElement>): IPoint2D {\r\n        const { contour, maxY } = this.props;\r\n        const { scale, margin } = this.state;\r\n\r\n        if (!canvas) return { x: 0, y: 0 };\r\n\r\n        var rect = canvas.getBoundingClientRect();\r\n        const pt = this.translate({ \r\n            x: e.clientX - rect.left - margin, \r\n            y: 0\r\n        });\r\n\r\n        pt.x = Tools.withinRange(Math.round(pt.x / scale), 0, contour.length - 1);\r\n        pt.y = Tools.withinRange(pt.y / scale, 0, maxY);\r\n\r\n        return pt;\r\n    }\r\n\r\n    setPosition(e: React.MouseEvent<HTMLCanvasElement>) {\r\n        const { contour, maxY, mode, wheelDrawing } = this.props;\r\n        const { scale, margin, wheelMode } = this.state;\r\n        if (!this.canvas) return;\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n\r\n        var rect = this.canvas.getBoundingClientRect();\r\n        const pt = this.translate({ \r\n            x: e.clientX - rect.left - margin, \r\n            y: e.clientY - rect.top - margin \r\n        });\r\n        \r\n        pt.x = Tools.withinRange(Math.round(pt.x / scale), 0, contour.length - 1);\r\n        pt.y = Tools.withinRange(pt.y / scale, 0, maxY);\r\n\r\n        const wheelData = this.wheelIndexFromPoint(pt);\r\n\r\n        const { wheel, wheelIndex, distToCenter, distToRadiusHandler, distToOffsetHandler, distToWidthHandler } = wheelData;\r\n\r\n        if (mode === drawingMode.Contour/* && !wheel*/) {\r\n            this.buffer?.next(pt);\r\n            return;\r\n        }\r\n        else if (mode === drawingMode.Wheel || (mode === drawingMode.Contour && wheel)) {\r\n            const { wheels } = this.props;\r\n\r\n            if (!wheels) return;\r\n\r\n            if (wheel) {\r\n                switch (wheelDrawing) {\r\n                    case wheelDrawingType.Side:\r\n                        pt.x = Tools.withinRange(pt.x, wheel.wheelRadius, contour.length - 1 - wheel.wheelRadius); \r\n                        pt.y = Tools.withinRange(pt.y, 0, maxY - wheel.wheelRadius); \r\n                        break;\r\n                    case wheelDrawingType.Top:\r\n                        pt.x = Tools.withinRange(pt.x, wheel.wheelRadius, contour.length - 1 - wheel.wheelRadius); \r\n                        pt.y = Tools.withinRange(pt.y, 0, maxY); \r\n                        break;\r\n                }\r\n            }\r\n\r\n            switch (wheelMode) {\r\n                // eslint-disable-next-line\r\n                case wheelDrawingMode.MoveCenter: {\r\n                    if (wheel) {\r\n                        this.onWheelChange({\r\n                            ...wheel,\r\n                            center: pt,\r\n                        }, wheelIndex);\r\n                    }\r\n                } break;\r\n                // eslint-disable-next-line\r\n                case wheelDrawingMode.ChangeRadius: {\r\n                    if (wheel) {\r\n                        this.onWheelChange({\r\n                            ...wheel,\r\n                            arcRadius: distToCenter,\r\n                            wheelRadius: distToCenter\r\n                        }, wheelIndex);\r\n                    }\r\n                } break;\r\n                // eslint-disable-next-line\r\n                case wheelDrawingMode.ChangeOffset: {\r\n                    if (wheel) {\r\n                        this.onWheelChange({\r\n                            ...wheel,\r\n                            offset: pt.y / 2\r\n                        }, wheelIndex);\r\n                    }\r\n                } break;\r\n                // eslint-disable-next-line\r\n                case wheelDrawingMode.ChangeWidth: {\r\n                    if (wheel) {\r\n                        this.onWheelChange({\r\n                            ...wheel,\r\n                            width: (pt.y / 2) - wheel.offset\r\n                        }, wheelIndex);\r\n                    }\r\n                } break;\r\n                // eslint-disable-next-line\r\n                case wheelDrawingMode.Create: {\r\n                    switch (wheelDrawing) {\r\n                        // eslint-disable-next-line\r\n                        case wheelDrawingType.Side: {\r\n                            if (wheel) {\r\n                                if (distToCenter < 2) {\r\n                                    this.setState({\r\n                                        wheelMode: wheelDrawingMode.MoveCenter\r\n                                    });\r\n                                    return;\r\n                                }\r\n                                else if (distToRadiusHandler < 3) {\r\n                                    this.setState({\r\n                                        wheelMode: wheelDrawingMode.ChangeRadius\r\n                                    });\r\n                                    return;\r\n                                }\r\n                            }\r\n                        } break;\r\n                        // eslint-disable-next-line\r\n                        case wheelDrawingType.Top: {\r\n                            if (wheel) {\r\n                                if (distToOffsetHandler < 2) {\r\n                                    this.setState({\r\n                                        wheelMode: wheelDrawingMode.ChangeOffset\r\n                                    });\r\n                                    return;\r\n                                }\r\n                                else if (distToWidthHandler < 3) {\r\n                                    this.setState({\r\n                                        wheelMode: wheelDrawingMode.ChangeWidth\r\n                                    });\r\n                                    return;\r\n                                }\r\n                            }\r\n                        } break;\r\n                    }\r\n\r\n                    this.setState({\r\n                        wheelMode: wheelDrawingMode.ChangeRadius,\r\n                    }, () => {\r\n                        this.onWheelChange({\r\n                            center: pt,\r\n                            arcRadius: 0,\r\n                            wheelRadius: 0,\r\n                            offset: 10,\r\n                            width: 10\r\n                        }, wheelIndex);\r\n                    });\r\n                } break;\r\n            }\r\n        }\r\n    }\r\n\r\n    renderSectionSelector() {\r\n        const { sectionMode, onSectionChanged, onSectionSelected, sections, sectionIndex, showSectionSelector } = this.props;\r\n\r\n        if (sectionMode !== sectionEditorMode.Edit) return null;\r\n        if (!onSectionChanged) return null;\r\n        if (!showSectionSelector) return null;\r\n\r\n        const sectionSelected = (section: number) => {\r\n            onSectionSelected(showSectionSelector, section)\r\n        }\r\n\r\n        const max = sections - 1;\r\n        return (\r\n            <div className=\"section-selector\">\r\n                <input type=\"range\" min={0} max={max} value={sectionIndex} onChange={e => sectionSelected(parseInt(e.target.value))}/>\r\n                <input type=\"number\" value={sectionIndex} min={0} max={max} onChange={e => sectionSelected(parseInt(e.target.value))}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { contour, maxY } = this.props;\r\n        const { scale, margin } = this.state;\r\n        if (!scale) return null;\r\n\r\n        const width = contour.length * scale  + 2 * margin;\r\n        const height = maxY * scale  + 2 * margin;\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    {this.renderSectionSelector()}\r\n                    <canvas\r\n                        width={width}\r\n                        height={height}\r\n                        className=\"drawing-canvas\"\r\n                        onDoubleClick={e => {\r\n                            e.stopPropagation();\r\n                            e.preventDefault();         \r\n                        }}\r\n                        onContextMenu={e => {\r\n                            e.stopPropagation();\r\n                            e.preventDefault();\r\n                        }}\r\n                        onPointerEnter={e => {\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                        }}\r\n                        onPointerLeave={e => {\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                            this.mouseDisconnected();\r\n                        }}\r\n                        onPointerDown={e => {\r\n                            if (e.buttons !== 1) return;\r\n\r\n                            this.enabled = true;\r\n                            this.lastPoint = null;\r\n                            this.setPosition(e);\r\n\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                        }}\r\n                        onPointerUp={e => {\r\n                            this.mouseDisconnected();\r\n \r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                        }}\r\n                        onPointerMove={e => {\r\n                            if (!this.enabled) return;\r\n                            this.setPosition(e);\r\n\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                        }}\r\n                        onPointerCancel={e => {\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                        }}\r\n                        onMouseDown={(e) => {\r\n                            if (e.buttons !== 1) return;\r\n                            this.enabled = true;\r\n                            this.lastPoint = null;\r\n                            this.setPosition(e);\r\n                            e.preventDefault();\r\n                            e.stopPropagation(); \r\n                        }}\r\n                        onMouseMove={(e) => {\r\n                            if (!this.enabled) return;\r\n                            this.setPosition(e);\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                        }}\r\n                        onMouseUp={e => {\r\n                            this.mouseDisconnected();\r\n                            e.stopPropagation();\r\n                            e.preventDefault();\r\n                        }}\r\n                        ref={(r) => {\r\n                            this.canvas = r;\r\n                            this.drawSignal();\r\n                        }}\r\n                    />                \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import { IPoint2D } from \"../../lib\";\r\nimport { IWheelModel } from \"../drawing-model\";\r\n\r\nexport class DrawingWheels {\r\n    constructor(\r\n        private margin: number, \r\n        private scale: number,\r\n        private toCtx: (p: IPoint2D) => IPoint2D) {\r\n\r\n    }\r\n\r\n    drawWheelSide(ctx: CanvasRenderingContext2D, wheel: IWheelModel) {\r\n        const { margin, scale, toCtx } = this;\r\n\r\n        const center = toCtx(wheel.center);\r\n        const wheelArcFrontFrom = toCtx({ x: wheel.center.x - wheel.wheelRadius, y: wheel.center.y });\r\n        const wheelArcFrontTo = toCtx({ x: wheel.center.x - wheel.wheelRadius, y: 0 });\r\n\r\n        const wheelArcBackFrom = toCtx({ x: wheel.center.x + wheel.wheelRadius, y: wheel.center.y });\r\n        const wheelArcBackTo = toCtx({ x: wheel.center.x + wheel.wheelRadius, y: 0 });\r\n\r\n        const wheelRadiusHandle = toCtx({ x: wheel.center.x, y: wheel.center.y + wheel.wheelRadius });\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(\r\n            margin + center.x, \r\n            margin + center.y,\r\n            wheel.wheelRadius * scale,\r\n            Math.PI, \r\n            2 * Math.PI\r\n        );\r\n\r\n        ctx.moveTo(margin + wheelArcFrontFrom.x, margin + wheelArcFrontFrom.y);\r\n        ctx.lineTo(margin + wheelArcFrontTo.x, margin + wheelArcFrontTo.y);\r\n\r\n        ctx.moveTo(margin + wheelArcBackFrom.x, margin + wheelArcBackFrom.y);\r\n        ctx.lineTo(margin + wheelArcBackTo.x, margin + wheelArcBackTo.y);\r\n\r\n        ctx.stroke();\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(\r\n            margin + center.x, \r\n            margin + center.y,\r\n            5,\r\n            0,\r\n            2 * Math.PI,\r\n        )\r\n\r\n        ctx.arc(\r\n            margin + wheelRadiusHandle.x, \r\n            margin + wheelRadiusHandle.y,\r\n            5,\r\n            0,\r\n            2 * Math.PI,\r\n        )\r\n        ctx.fill();\r\n    }\r\n\r\n    drawWheelTop(ctx: CanvasRenderingContext2D, wheel: IWheelModel) {\r\n        const { margin, toCtx } = this;\r\n\r\n        const innerCenter = toCtx({\r\n            x: wheel.center.x,\r\n            y: 2 * wheel.offset\r\n        });\r\n        const outerCenter = toCtx({\r\n            x: wheel.center.x,\r\n            y: 2 * (wheel.offset + wheel.width)\r\n        });        \r\n\r\n        const wheelContour: IPoint2D[] = [\r\n            {\r\n                x: wheel.center.x - wheel.wheelRadius,\r\n                y: 2 * wheel.offset\r\n            },\r\n            {\r\n                x: wheel.center.x + wheel.wheelRadius,\r\n                y: 2 * wheel.offset\r\n            },\r\n            {\r\n                x: wheel.center.x + wheel.wheelRadius,\r\n                y: 2 * (wheel.offset + wheel.width)\r\n            },\r\n            {\r\n                x: wheel.center.x - wheel.wheelRadius,\r\n                y: 2 * (wheel.offset + wheel.width)\r\n            },\r\n        ];\r\n\r\n        const mappedWheelCountour = wheelContour.map(toCtx);\r\n \r\n        ctx.beginPath();\r\n        ctx.moveTo(margin + mappedWheelCountour[3].x, margin + mappedWheelCountour[3].y);\r\n        mappedWheelCountour.forEach((p, idx) => {\r\n            ctx.lineTo(margin + p.x, margin + p.y);\r\n        })\r\n        ctx.stroke();\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(\r\n            margin + innerCenter.x, \r\n            margin + innerCenter.y,\r\n            5,\r\n            0,\r\n            2 * Math.PI,\r\n        )\r\n\r\n        ctx.arc(\r\n            margin + outerCenter.x, \r\n            margin + outerCenter.y,\r\n            5,\r\n            0,\r\n            2 * Math.PI,\r\n        )\r\n        ctx.fill();\r\n    }\r\n}","import { IWheelModel } from \"./components/drawing-model\";\r\nimport { Generate, IPoint2D, IPoint3D } from \"./lib\";\r\nimport * as Rx from \"rxjs\";\r\n\r\nexport interface IDesign {\r\n    name: string;\r\n    boxSize: IPoint3D;\r\n    sidePoints: IPoint2D[];\r\n    frontPoints: IPoint2D[];\r\n    topPoints: IPoint2D[];\r\n    colorOdd: number;\r\n    colorEven: number;\r\n    colorWheels: number;\r\n    wheels: IWheelModel[];\r\n    frontSegments: IPoint2D[][];\r\n}\r\n  \r\nexport interface IStorageModel {\r\n    version: number;\r\n    designs: IDesign[];\r\n}\r\n\r\nexport interface IDesignStore {\r\n    replaceStorageModel(storageModel: IStorageModel): void;\r\n    appendStorageModel(storageModel: IStorageModel): void;\r\n    resetAll(): void;\r\n    newDesing(name: string): IDesign;\r\n    updateDesign(design: IDesign | null, update?: (design: IDesign) => void): void;\r\n    deleteDesign(design: IDesign | null): void;\r\n}\r\n\r\nexport interface IDesignStoreState {\r\n    designStore: IDesignStore;\r\n    storageModel: IStorageModel | null;\r\n    design: IDesign | null;\r\n}\r\n\r\nexport class DesignStore {\r\n    _stream: Rx.BehaviorSubject<IDesignStoreState>;\r\n\r\n    constructor() {\r\n        this._stream = new Rx.BehaviorSubject<IDesignStoreState>({ \r\n            designStore: this, \r\n            storageModel: this.defaultStorageModel(), \r\n            design: null\r\n        });\r\n    }\r\n\r\n    get hasStoredDesigns() {\r\n        return localStorage.getItem(\"Designs\") !== null;\r\n    }\r\n\r\n    initializeFromStorage() {\r\n        this.updateDesign(null);\r\n    }\r\n\r\n    subscribe(handler: (state: IDesignStoreState) => void) {\r\n        this._stream.subscribe(handler);\r\n    }\r\n\r\n    get state() {\r\n        return this._stream.value;\r\n    }\r\n\r\n    defaultStorageModel(): IStorageModel {\r\n        return { version: 1, designs: [this.newDesing(\"Default\")] }\r\n    }\r\n\r\n    migrate(model: IStorageModel) {\r\n        model.designs.forEach(d => {\r\n            if (!d.wheels) d.wheels = [];\r\n            d.wheels.forEach(w => {\r\n                if (!w.offset) w.offset = 10;\r\n                if (!w.width) w.width = 10;\r\n            });\r\n\r\n            if (!d.frontSegments) d.frontSegments = [];\r\n\r\n            if (d.colorWheels === undefined)\r\n                d.colorWheels = 0x202020;\r\n        });\r\n    }\r\n\r\n    loadFromLocalStorage() : IStorageModel {\r\n        const json = localStorage.getItem(\"Designs\");\r\n        if (!json) return this.defaultStorageModel();\r\n    \r\n        const model = JSON.parse(json) as IStorageModel;\r\n        this.migrate(model);\r\n        \r\n        return model;\r\n    }\r\n\r\n    saveStorageModel(model: IStorageModel) {\r\n        if (!model) return;\r\n\r\n        const payload = JSON.stringify(model);\r\n        localStorage.setItem(\"Designs\", payload);\r\n    }\r\n\r\n    saveToLocalStorage(design: IDesign | null, update?: (design: IDesign) => void) {\r\n        if (!design) return;\r\n    \r\n        const model = this.loadFromLocalStorage()\r\n        model.designs = model.designs.map(d => {\r\n            if (d.name === design.name) {\r\n                update?.(design);\r\n                return design;\r\n            }\r\n\r\n            return d;\r\n        });\r\n        if (!model.designs.includes(design)) model.designs.push(design);\r\n    \r\n        this.saveStorageModel(model);\r\n    }\r\n\r\n    deleteDesign(design: IDesign | null) {\r\n        if (!design) return;\r\n        const model = this.loadFromLocalStorage();\r\n        model.designs = model.designs.filter(d => d.name !== design.name);\r\n        this.saveStorageModel(model);\r\n        this.updateDesign(null);\r\n    }\r\n\r\n    updateDesign(design: IDesign | null, update?: (design: IDesign) => void) {\r\n        if (design) {\r\n            this.saveToLocalStorage(design, update);\r\n        }\r\n\r\n        this.setActiveDesign(design);\r\n    }\r\n\r\n    setActiveDesign(design: IDesign | null) {\r\n        const storageModel = this.loadFromLocalStorage();\r\n\r\n        const newState: IDesignStoreState = {\r\n            designStore: this,\r\n            storageModel: storageModel, \r\n            design: storageModel.designs.find(d => d.name === design?.name) || storageModel.designs[0]\r\n        }\r\n\r\n        this._stream.next(newState);\r\n    }\r\n\r\n    newDesing(name: string): IDesign {\r\n        const boxSize: IPoint3D = {x: 101, y: 41, z: 31};\r\n        const sidePoints = Generate.range(0, boxSize.x).map(i => ({ x: i, y: boxSize.z }));\r\n        const frontPoints = Generate.range(0, boxSize.y).map(i => ({ x: i, y: boxSize.z }));\r\n        const topPoints = Generate.range(0, boxSize.x).map(i => ({ x: i, y: boxSize.y }));\r\n    \r\n        return {\r\n            name,\r\n            boxSize,\r\n            sidePoints,\r\n            frontPoints,\r\n            topPoints,\r\n            colorOdd: 0xEB7D09,\r\n            colorEven: 0x000000,\r\n            colorWheels: 0x202020,\r\n            wheels: [],\r\n            frontSegments: []\r\n        }\r\n    }\r\n\r\n    resetAll() {\r\n        this.saveStorageModel(this.defaultStorageModel());\r\n        this.setActiveDesign(null);\r\n    }\r\n\r\n    replaceStorageModel(storageModel: IStorageModel) {\r\n        this.migrate(storageModel);\r\n        this.saveStorageModel(storageModel ?? this.defaultStorageModel());\r\n        this.setActiveDesign(null);\r\n    }\r\n\r\n    appendStorageModel(appendStorageModel: IStorageModel) {\r\n        const { storageModel } = this._stream.value;\r\n        if (!storageModel) return;\r\n\r\n        this.migrate(storageModel);\r\n        storageModel.designs.push(...appendStorageModel.designs);\r\n        this.replaceStorageModel(storageModel);\r\n    }\r\n}","import React from 'react';\r\nimport { IToolbarItem, ToolbarLegend } from './components/toolbar';\r\nimport \"./tutorial.scss\";\r\n\r\ninterface IProps {\r\n    mainToolbarItems: IToolbarItem[];\r\n    sideEditorToolbar: IToolbarItem[];\r\n}\r\n\r\nexport class Tutorial extends React.Component<IProps> {\r\n    section(title: string, content: JSX.Element | null, image: string | null = null) {\r\n        return (\r\n            <div className=\"tutorial-section\">\r\n                <header>{title}</header>\r\n                {content}\r\n                {image && <img alt=\"meaningful text\" src={`tutorial/${image}.gif`} />}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    textSection(title: string, content: string | JSX.Element | null, image: string | null = null) {\r\n        return this.section(\r\n            title, \r\n            content ? <p>{content}</p> : null,\r\n            image\r\n            );\r\n    }\r\n\r\n    render() {\r\n        const { mainToolbarItems, sideEditorToolbar } = this.props;\r\n\r\n        return (\r\n            <div className=\"tutorial\">\r\n                {this.section(\"Main Toolbar\", <ToolbarLegend items={mainToolbarItems} dialogFactory={null} />)}\r\n                {this.section(\"Side Editor Toolbar\", <ToolbarLegend items={sideEditorToolbar} dialogFactory={null} />)}\r\n                {this.textSection(\"Front view\", \"Draw front view of car body, then smooth contour\", \"car_front\")}\r\n                {this.textSection(\"Top view\", \"Draw top view of car body, then smooth contour\", \"car_top\")}\r\n                {this.textSection(\"Side view\", \"Draw side view of car body, then smooth contour\", \"car_side\")}\r\n                {this.textSection(\"Add wheels\", \"\", \"car_wheels\")}\r\n                {this.textSection(\"Front section\", \"Draw front sections view of car body, then smooth contour\", \"car_sections\")}\r\n                {this.textSection(\"3D View\", \"\", \"car_fly_by\")}\r\n          </div>\r\n        )\r\n    }\r\n}","import React from \"react\"\r\nimport { Dialogs, IIconProps, Toolbar } from \"./components\"\r\nimport { drawingMode, sectionEditorMode } from \"./components/drawing-model\";\r\nimport { IToolbarItem } from \"./components/toolbar\";\r\nimport { DesignStoreOperations } from \"./DesignStoreOperations\"\r\nimport { IRenderSettings } from \"./lib\";\r\nimport { Tutorial } from \"./tutorial\"\r\n\r\nexport interface ISideEditorData {\r\n    sectionMode: sectionEditorMode;\r\n    mode: drawingMode;\r\n    showSectionSelector: boolean;\r\n    hasWheels: boolean;\r\n    currentSection: number;\r\n    sectionParams: Partial<IIconProps>;\r\n}\r\n\r\nexport interface ISideEditorActions {\r\n    fullscreenEdit() : Promise<void>;\r\n    moveUp(): void;\r\n    moveDown(): void;\r\n    allUp(): void;\r\n    allDown(): void;\r\n    smooth(): void;\r\n    lockSection(): void;\r\n    removeSection(): void;\r\n    applyToRemaining(): void;\r\n    onSectionSelected(showSectionSelector: boolean, currentSection: number): void;\r\n    setDrawingMode(mode: drawingMode): void;\r\n}\r\n\r\nexport class ToolbarFactory {\r\n    MainToolbar(\r\n        dsoFactory: () => DesignStoreOperations,\r\n        renderSettingsFactory: () => IRenderSettings,\r\n        renderSettingsModified: (diff: Partial<IRenderSettings>) => void\r\n        ): IToolbarItem[] {\r\n        const dso = () => dsoFactory();\r\n        const renderSettings = () => renderSettingsFactory();\r\n\r\n        const items: IToolbarItem[] = [\r\n            { icon: \"FcViewDetails\", title: \"Legend\", action: () => Toolbar.Modal(\"Main Toolbar\", items) },\r\n            { icon: \"FaUniversity\", title: \"Tutorials\", action: () => this.tutorials(items) },\r\n            { isSeparator: true },\r\n            { icon: \"GrPowerReset\", title: \"Reset All\", action: () => dso().resetAll() },\r\n            { icon: \"GrFavorite\", title: \"Load sample designs\", action: () => dso().loadSampleDesigns() },\r\n            { isSeparator: true },\r\n            { icon: \"VscNewFile\", title: \"New Design\", action: () => dso().newDesign()},\r\n            { icon: \"FiDownload\", title: \"Download designs\" , action: () => dso().downloadDesigns()},\r\n            { icon: \"FiUpload\", title: \"Upload designs\", action: () => dso().uploadDesigns()},\r\n            { isSeparator: true },\r\n            { icon: \"GrClone\", title: \"Clone Design\", action: () => dso().cloneDesign()},\r\n            { icon: \"AiOutlineSetting\", title: \"Design Settings\", action: () => dso().settings()},\r\n            { icon: \"AiOutlineExport\", title: \"Export Design to STL\", action: () => dso().exportSTL()},\r\n            { icon: \"AiOutlineCloseCircle\", title: \"Delete Design\", action: () => dso().deleteDesign()},\r\n            { isSeparator: true },\r\n            { icon: \"GiWireframeGlobe\", title: \"Wireframes\", selected: () => renderSettings().wireframes, action: () => renderSettingsModified({ wireframes: !renderSettings().wireframes })} ,\r\n            { icon: \"CgEditShadows\", title: \"Flat Shading\", selected: () => renderSettings().flatShading, action: () => renderSettingsModified({ flatShading: !renderSettings().flatShading })},\r\n            { icon: \"GiFlatPlatform\", title: \"Ground plane\", selected: () => renderSettings().ground, action: ()=> renderSettingsModified({ ground: !renderSettings().ground })},\r\n            { icon: \"CgSmartHomeLight\", title: \"Light orbiting\", selected: () => renderSettings().lightOrbit, action: ()=> renderSettingsModified({ lightOrbit: !renderSettings().lightOrbit })},\r\n            { icon: \"GiCartwheel\", title: \"Render Wheels\", selected: () => renderSettings().renderWheels, action: ()=> renderSettingsModified({ renderWheels: !renderSettings().renderWheels })},\r\n            { isSeparator: true },\r\n            { icon: \"AiOutlineGithub\", title: \"GitHub - Project Repository\", action: () => { window.open(\"https://github.com/EvgenyMuryshkin/CarBodyDesigner\")}},\r\n            { icon: \"AiOutlineTwitter\", title: \"Twitter - Evgeny Muryshkin\", action: () => { window.open(\"https://twitter.com/ITMayWorkDev\")}},\r\n            { icon: \"BiChip\", title: \"QuSoC - FPGA design toolkit\", action: () => { window.open(\"https://github.com/EvgenyMuryshkin/qusoc\")}},\r\n        ];\r\n\r\n        return items;\r\n    }\r\n\r\n    async tutorials(mainToolbarItems: IToolbarItem[]) {\r\n        const sideEditorToolbar = this.SideEditorToolbar(\r\n            {\r\n                sectionMode: sectionEditorMode.Edit,\r\n                mode: drawingMode.Contour,\r\n                showSectionSelector: false,\r\n                hasWheels: false,\r\n                currentSection: 0,\r\n                sectionParams: {}\r\n            },\r\n            null\r\n        );\r\n\r\n        await Dialogs.Modal({\r\n            title: \"How to create a car model\",\r\n            icon: \"FaUniversity\",\r\n            body: <Tutorial mainToolbarItems={mainToolbarItems} sideEditorToolbar={sideEditorToolbar}/>,\r\n            buttonsFactory: Dialogs.CloseButtons\r\n        });\r\n    }\r\n\r\n    SideEditorToolbar(data: ISideEditorData, actions: ISideEditorActions | null): IToolbarItem[] {\r\n        const { mode, hasWheels, sectionParams, showSectionSelector, currentSection } = data;\r\n\r\n        const items: IToolbarItem[] = [\r\n            { icon: \"FcViewDetails\", title: \"Legend\", action: () => Toolbar.Modal(\"Main Toolbar\", items) },\r\n            { icon: \"AiOutlineFullscreen\", title: \"Fullscreen edit\",  action: async () => await actions?.fullscreenEdit() },\r\n            { isSeparator: true },\r\n            { icon: \"ImPencil2\", title: \"Draw countour\", selected: () => mode === drawingMode.Contour, \r\n                action: () => actions?.setDrawingMode(drawingMode.Contour)\r\n            },   \r\n            { icon: \"GiCartwheel\", title:\"Draw wheel\", selected: () => mode === drawingMode.Wheel, \r\n                hidden: () => !hasWheels,\r\n                action: () => actions?.setDrawingMode(drawingMode.Wheel),\r\n                iconParams: {\r\n                    readOnly: showSectionSelector\r\n                },\r\n            },\r\n            { isSeparator: true },\r\n            { icon: \"ImMoveUp\", title: \"Move Up\", action: () => actions?.moveUp()},\r\n            { icon: \"ImMoveDown\", title: \"Move Down\", action: () => actions?.moveDown()},\r\n            { icon: \"AiOutlineBorderTop\", title: \"All Up\", action: () => actions?.allUp()},\r\n            { icon: \"AiOutlineBorderBottom\", title: \"All Down\", action: () => actions?.allDown()},\r\n            { icon: \"GiWhiplash\", title: \"Smooth\", action: () => actions?.smooth()},\r\n            { isSeparator: true },\r\n            { icon: \"GiSlicedBread\" ,\r\n                title: \"Slice Edit\",\r\n                selected: () => showSectionSelector,\r\n                action: () => actions?.onSectionSelected(!showSectionSelector, currentSection)\r\n            },\r\n            { icon: \"AiFillLock\",\r\n                title: \"Lock section\",\r\n                iconParams: sectionParams,\r\n                action: () => actions?.lockSection()\r\n            },\r\n            { icon: \"RiDeleteBack2Line\", \r\n                title: \"Revert section\",\r\n                iconParams: sectionParams,\r\n                action: () => actions?.removeSection()\r\n            },                \r\n            { icon: \"TiArrowForwardOutline\", \r\n                title: \"Apply to remaining sections\",\r\n                iconParams: sectionParams,\r\n                action: () => actions?.applyToRemaining()\r\n            }\r\n            /*,\r\n            { \r\n                icon: \"AiOutlineFunction\", \r\n                iconParams: sectionParams,\r\n                title: \"Interpolate sections\",\r\n                hidden: () => !onInterpolateSections,\r\n                action: () => this.interpolateSections()\r\n            }*/\r\n        ];\r\n\r\n        return items;\r\n    }\r\n}","import * as React from \"react\"\r\nimport { IPoint2D, Tools } from \"../../lib\";\r\nimport { IWheelModel } from \"../drawing-model\";\r\nimport { ISideEditorProps, SideEditor } from \"./side-editor\";\r\nimport \"./side-editor.scss\";\r\n\r\ninterface IProps extends ISideEditorProps {\r\n\r\n}\r\n\r\ninterface IState {\r\n    contour: IPoint2D[];\r\n    wheels: IWheelModel[] | null;\r\n}\r\n\r\nexport class ModalSideEditor extends React.Component<IProps, IState> {\r\n    _container: HTMLDivElement | null = null;\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            contour: [],\r\n            wheels: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { contour, wheels } = this.props;\r\n        this.setState({\r\n            contour: contour.map((s): IPoint2D => ({ x: s.x, y: s.y })),\r\n            wheels: wheels ? wheels.map(w => Tools.clone(w)) : null\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { \r\n            id, \r\n            title, \r\n            symmetrical, \r\n            maxY, \r\n            onCountourChange, \r\n            wheelDrawing, \r\n            sections, \r\n            onSectionSelected, \r\n            onSectionChanged,\r\n            section,\r\n            sectionBaseline,\r\n            showSectionSelector,\r\n            currentSection,\r\n            design,\r\n            sectionMode\r\n        } = this.props;\r\n        const { contour, wheels } = this.state;\r\n\r\n        const width = (this._container?.clientWidth ?? 0) * 0.9;\r\n        const height = (this._container?.clientHeight ?? 0) * 0.9;\r\n\r\n        return (\r\n            <div className=\"modal-side-editor\" ref={r => this._container = r}>\r\n                ({this._container?.clientWidth}x{this._container?.clientHeight})\r\n                { width && height ? <SideEditor \r\n                    id={`${id}_modal`}\r\n                    title={title}\r\n                    symmetrical={symmetrical}\r\n                    width={width}\r\n                    height={height}\r\n                    contour={contour} \r\n                    maxY={maxY}\r\n                    onCountourChange={(newSamples, newWheels) => {\r\n                        this.setState({\r\n                            contour: newSamples,\r\n                            wheels: newWheels\r\n                        }, \r\n                        () => onCountourChange(this.state.contour, this.state.wheels))\r\n                    }}\r\n                    wheels={wheels}\r\n                    wheelDrawing={wheelDrawing}\r\n                    sections={sections}\r\n                    sectionBaseline={sectionBaseline}\r\n                    onSectionChanged={onSectionChanged}\r\n                    onSectionSelected={onSectionSelected}\r\n                    section={section}\r\n                    showSectionSelector={showSectionSelector}\r\n                    currentSection={currentSection}\r\n                    design={design}\r\n                    sectionMode={sectionMode}\r\n                    /> : null\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from \"react\"\r\nimport { Generate, IPoint2D } from \"../../lib\";\r\nimport { ISideEditorActions, ToolbarFactory } from \"../../ToolbarFactory\";\r\nimport { DrawingCanvas, IDrawingCanvasProps } from \"../drawing-canvas/drawing-canvas\";\r\nimport { drawingMode, sectionEditorMode } from \"../drawing-model\";\r\nimport { IIconProps } from \"../icon/icon\";\r\nimport { Dialogs } from \"../modal/modal\";\r\nimport { Toolbar } from \"../toolbar/toolbar\";\r\nimport { ModalSideEditor } from \"./modal-side-editor\";\r\nimport \"./side-editor.scss\";\r\n\r\nexport interface ISideEditorProps extends IDrawingCanvasProps {\r\n    title: string;\r\n    currentSection: number;\r\n    showSectionSelector: boolean;\r\n    onInterpolateSections?: () => void;\r\n}\r\n\r\ninterface IState {\r\n    mode: drawingMode;\r\n}\r\n\r\nexport class SideEditor extends React.Component<ISideEditorProps, IState> implements ISideEditorActions {\r\n    constructor(props: ISideEditorProps) {\r\n        super(props);\r\n        this.state = {\r\n            mode: drawingMode.Contour\r\n        }\r\n    }\r\n\r\n    get currentSamples(): IPoint2D[] {\r\n        const { contour, section, sectionBaseline, showSectionSelector } = this.props;\r\n        const sectionPoints = section || sectionBaseline;\r\n\r\n        const source = \r\n            showSectionSelector && sectionPoints \r\n            ? sectionPoints\r\n            : contour;\r\n        \r\n        return source.map(s => ({ ...s }));\r\n    }\r\n\r\n    set currentSamples(newData: IPoint2D[]) {\r\n        const { wheels, currentSection, showSectionSelector, onCountourChange, onSectionChanged } = this.props;\r\n\r\n        if (showSectionSelector) {\r\n            onSectionChanged([currentSection], newData);\r\n        }\r\n        else {\r\n            onCountourChange(newData, wheels);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps: ISideEditorProps) {\r\n        if (this.props.showSectionSelector && this.state.mode !== drawingMode.Contour)\r\n            this.setState({\r\n                mode: drawingMode.Contour\r\n            }) \r\n    }\r\n\r\n    moveUp() {\r\n        const { maxY } = this.props;\r\n        const samples = this.currentSamples;\r\n        if (samples.some(s => s.y > maxY - 1)) return;\r\n        samples.forEach(s => s.y++);\r\n        this.currentSamples = samples;\r\n    }\r\n\r\n    moveDown() {\r\n        const samples = this.currentSamples;\r\n        if (samples.some(s => s.y < 1)) return;\r\n        samples.forEach(s => s.y--);\r\n        this.currentSamples = samples;\r\n    }\r\n    \r\n    allUp() {\r\n        const { maxY } = this.props;\r\n        const samples = this.currentSamples;\r\n        samples.forEach(s => s.y = maxY);\r\n        this.currentSamples = samples;\r\n\r\n    }\r\n\r\n    allDown() {\r\n        const samples = this.currentSamples;\r\n        samples.forEach(s => s.y = 0);\r\n        this.currentSamples = samples;\r\n    }\r\n\r\n    async fullscreenEdit() {\r\n        const { title, contour, wheels, onCountourChange } = this.props;\r\n        let newSamples = contour;\r\n        let newWheels = wheels;\r\n\r\n        if (await Dialogs.Modal({\r\n            title: title,\r\n            body: <ModalSideEditor {...this.props} onCountourChange={(s, w) => {\r\n                newSamples = s;\r\n                newWheels = w;\r\n            }}/>,\r\n            buttonsFactory: Dialogs.OKCancelButtons\r\n        })) {\r\n            onCountourChange(newSamples, newWheels);\r\n        }\r\n    }\r\n\r\n    smooth() {\r\n        const { currentSamples } = this;\r\n        const newSamples = this\r\n            .currentSamples\r\n            .map((s, idx): IPoint2D => {\r\n                if (idx === 0 || idx === currentSamples.length - 1) return s;\r\n                return {\r\n                    x: s.x,\r\n                    y: (currentSamples[idx-1].y + currentSamples[idx].y + currentSamples[idx + 1].y) / 3\r\n                }\r\n            });\r\n        this.currentSamples = newSamples;\r\n    }\r\n\r\n    async applyToRemaining() {\r\n        const { showSectionSelector, currentSection, sections, onSectionChanged } = this.props;\r\n        if (!showSectionSelector) {\r\n            await Dialogs.Notification(\"Section editor is disabled\");\r\n            return;\r\n        }\r\n\r\n        if (!await Dialogs.Confirm(\"Apply current contour to the rest of the model?\")) return;\r\n\r\n        const { currentSamples } = this;\r\n\r\n        onSectionChanged(Generate.inclusive(currentSection, sections), currentSamples);\r\n    }\r\n\r\n    async removeSection() {\r\n        const { currentSection, onSectionChanged } = this.props;\r\n\r\n        if (!await Dialogs.Confirm(\"Revert current section to baseline?\")) return;\r\n        onSectionChanged([currentSection], null);\r\n    }\r\n\r\n    async lockSection() {\r\n        const { currentSection, sectionBaseline, onSectionChanged } = this.props;\r\n\r\n        if (!await Dialogs.Confirm(\"Lock current section to baseline?\")) return;\r\n        onSectionChanged([currentSection], sectionBaseline); \r\n    }\r\n\r\n    async interpolateSections() {\r\n        const { onInterpolateSections } = this.props;\r\n        onInterpolateSections?.();\r\n    }\r\n    \r\n    setDrawingMode(mode: drawingMode) {\r\n        this.setState({\r\n            mode\r\n        })\r\n    }\r\n\r\n    onSectionSelected(showSectionSelector: boolean, currentSection: number) {\r\n        const {onSectionSelected} = this.props;\r\n        onSectionSelected(showSectionSelector, currentSection);\r\n    }\r\n\r\n    renderMenu() {\r\n        const { showSectionSelector, currentSection, wheels, sectionMode } = this.props;\r\n        const { mode } = this.state;\r\n        const iconParams: Partial<IIconProps> = {\r\n            bordered: true\r\n        }\r\n\r\n        const canEditSection = sectionMode === sectionEditorMode.Edit;\r\n\r\n        const sectionParams: Partial<IIconProps> = {\r\n            ...iconParams,\r\n            readOnly: !showSectionSelector || !canEditSection,\r\n            readOnlyTitle: (!showSectionSelector && \"Turn on section editor\") || (!canEditSection && \"Use front view to edit sections\") || \"\"\r\n        };\r\n\r\n        const toolbarFactory = new ToolbarFactory();\r\n        const items = toolbarFactory.SideEditorToolbar(\r\n            {\r\n                hasWheels: !wheels,\r\n                mode,\r\n                sectionMode,\r\n                showSectionSelector,\r\n                currentSection,\r\n                sectionParams\r\n            },\r\n            this\r\n        );\r\n\r\n        return <Toolbar className=\"menu menu-top\" items={items} iconParams={iconParams} />\r\n    }\r\n    \r\n    render() {\r\n        const { \r\n            id,\r\n            title, \r\n            width, \r\n            height, \r\n            maxY, \r\n            symmetrical, \r\n            contour, \r\n            onCountourChange, \r\n            wheels, \r\n            wheelDrawing, \r\n            sections,\r\n            section,\r\n            sectionBaseline,\r\n            onSectionChanged,\r\n            onSectionSelected,\r\n            showSectionSelector,\r\n            currentSection,\r\n            design,\r\n            sectionMode\r\n        } = this.props;\r\n        const { mode } = this.state;\r\n\r\n        const titleParts = [\r\n            title,\r\n            currentSection !== null ? `@${currentSection}`: null\r\n        ]\r\n        return (\r\n            <div className=\"side-editor\">\r\n                {this.renderMenu()}\r\n                <div className=\"side-drawing-container\">\r\n                    {titleParts.filter(Boolean).join(\",\")}\r\n                    <DrawingCanvas \r\n                        id={id}\r\n                        symmetrical={symmetrical}\r\n                        width={width}\r\n                        height={height}\r\n                        contour={contour} \r\n                        maxY={maxY}\r\n                        mode={mode}\r\n                        onCountourChange={onCountourChange}\r\n                        wheels={wheels}\r\n                        wheelDrawing={wheelDrawing}\r\n                        sections={sections}\r\n                        onSectionChanged={onSectionChanged}\r\n                        showSectionSelector={showSectionSelector}\r\n                        section={section}\r\n                        sectionBaseline={sectionBaseline}\r\n                        onSectionSelected={(show, s) => {\r\n                            onSectionSelected(showSectionSelector, s);\r\n                        }}\r\n                        sectionIndex={currentSection}\r\n                        design={design}\r\n                        sectionMode={sectionMode}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import { STLExporter } from \"three/examples/jsm/exporters/STLExporter\";\r\nimport { BodyShape } from \"./BodyShape\";\r\nimport { Dialogs, Forms } from \"./components\";\r\nimport { IDesignStoreState, IStorageModel } from \"./DesignStore\";\r\nimport { generationParity } from \"./SidePlane\";\r\nimport { mergeBufferGeometries } from \"three/examples/jsm/utils/BufferGeometryUtils\";\r\nimport { MathUtils } from \"three\";\r\nimport * as THREE from \"three\";\r\nimport { DesignTools } from \"./DesignTools\";\r\nimport axios from \"axios\";\r\nimport { Tools } from \"./lib/tools\";\r\nimport { Wheels } from \"./Wheels\";\r\nimport { IRenderSettings } from \"./lib\";\r\n\r\nexport class DesignStoreOperations {\r\n    constructor(private designStoreState: IDesignStoreState, private renderSettings: IRenderSettings) {\r\n\r\n    }\r\n\r\n    exportText(content: string, contentType: string, fileName: string) {\r\n        const blob = new Blob( [ content ], { type: contentType } );\r\n        this.exportBlob(blob, fileName);\r\n    }\r\n\r\n    exportBlob(blob: Blob, fileName: string) {\r\n        const link = document.createElement( 'a' );\r\n        link.style.display = 'none';\r\n        document.body.appendChild( link );\r\n    \r\n        link.href = URL.createObjectURL( blob );\r\n        link.download = fileName;\r\n        link.click();\r\n    \r\n        link.remove();\r\n    }\r\n\r\n    async exportSTL() {\r\n        const { renderWheels } = this.renderSettings;\r\n        const { design } = this.designStoreState;\r\n        if (!design) return;\r\n\r\n        const params = await Forms.Modal(\"Export to STL\", {\r\n            stringName: `${design.name}.stl`,\r\n            intXRotationDeg: 90,\r\n            intYRotationDeg: 0,\r\n            intZRotationDeg: 0\r\n        });\r\n    \r\n        if (!params) return;\r\n    \r\n        const { boxSize, topPoints, frontPoints, sidePoints, wheels } = design;\r\n        const exporter = new STLExporter();\r\n        const bodyShape = new BodyShape(boxSize.x, boxSize.y, boxSize.z, generationParity.All);\r\n        const designTools = new DesignTools(design);\r\n        const interpolatedSegments = designTools.interpolateSections();\r\n        bodyShape.applyContour(sidePoints, frontPoints, topPoints, wheels, interpolatedSegments );\r\n\r\n        const finalGeometry = bodyShape.geometry;\r\n\r\n        if (renderWheels) {\r\n            const wheelsBuilder = new Wheels(boxSize.x, boxSize.y, boxSize.z);\r\n            finalGeometry.push(...wheelsBuilder.geometry(wheels));\r\n        }\r\n\r\n        const singleGeometry = mergeBufferGeometries(finalGeometry);\r\n        \r\n        singleGeometry.rotateX(MathUtils.degToRad(params.intXRotationDeg));\r\n        singleGeometry.rotateY(MathUtils.degToRad(params.intYRotationDeg));\r\n        singleGeometry.rotateZ(MathUtils.degToRad(params.intXRotationDeg));\r\n    \r\n        const material = new THREE.MeshBasicMaterial( { color: 0xffff00 } );\r\n        const mesh = new THREE.Mesh( singleGeometry, material );\r\n    \r\n        const stl = exporter.parse(mesh);\r\n        this.exportText(stl, 'text/plain', params.stringName || \"test.stl\");\r\n    }\r\n\r\n    async loadSampleDesigns() {\r\n        if (!await Dialogs.Confirm(\"Load sample designs?\")) return;\r\n\r\n        const { designStore } = this.designStoreState;        \r\n        const response = await axios.get(\"SampleDesigns.json\");\r\n        designStore.replaceStorageModel(response.data);\r\n    }\r\n\r\n    async downloadDesigns() {\r\n        const { storageModel } = this.designStoreState;        \r\n        \r\n        const params = await Forms.Modal(\"Download designs\", {\r\n            stringName: `CarBodyDesigns.json`\r\n        });\r\n    \r\n        if (!params) return;\r\n        const json = JSON.stringify(storageModel, null, 2);\r\n        this.exportText(json, 'application/json', params.stringName || \"CarBodyDesigns.json\");\r\n    }\r\n\r\n    async uploadDesigns() {\r\n        const params = await Forms.Modal(\"Upload designs\", {\r\n            flagAppendToExisting: false\r\n        });\r\n        if (!params) return;\r\n        const { designStore } = this.designStoreState;        \r\n\r\n        const fileInput = document.createElement(\"input\");\r\n        fileInput.setAttribute(\"type\", \"file\");\r\n        fileInput.setAttribute(\"accept\", \"application/json\");\r\n\r\n        fileInput.onchange = () => {\r\n            const file = fileInput?.files?.[0];\r\n            if (!file) return;\r\n\r\n            let fr = new FileReader();\r\n            fr.onload = async (ev) => {\r\n                if (ev?.target?.result) {\r\n                    const parsed = JSON.parse(ev?.target?.result?.toString()) as IStorageModel;\r\n                    if (!parsed.version) {\r\n                        await Dialogs.Notification(\"Provided file is not a designs model\");\r\n                        return;\r\n                    }\r\n\r\n                    if (params.flagAppendToExisting) {\r\n                        designStore.appendStorageModel(parsed);\r\n                    }\r\n                    else {\r\n                        designStore.replaceStorageModel(parsed);\r\n                    }\r\n                }\r\n            };\r\n            fr.readAsText(file);\r\n        };\r\n\r\n        document.body.appendChild( fileInput );\r\n    \r\n        fileInput.click();    \r\n        fileInput.remove();\r\n    }\r\n\r\n    async resetAll() {\r\n        const { designStore } = this.designStoreState;        \r\n        if (!await Dialogs.Confirm(\"Reset all designs?\")) return;\r\n        designStore.resetAll();\r\n    }\r\n\r\n    async newDesign() {\r\n        const { designStore } = this.designStoreState;        \r\n\r\n        const now = new Date();\r\n        const newDesign = await Forms.Modal(\r\n            \"New Design\", \r\n            {\r\n                stringName: `${now.toLocaleDateString()} - ${now.toLocaleTimeString()}`\r\n            }\r\n        );\r\n    \r\n        if (newDesign) {\r\n            const design = designStore.newDesing(newDesign.stringName);\r\n            designStore.updateDesign(design);\r\n        }\r\n    }\r\n\r\n    async cloneDesign() {\r\n        const { design, designStore } = this.designStoreState;\r\n\r\n        if (!design) return;\r\n        const now = new Date();\r\n    \r\n        const cloneDesignParams = await Forms.Modal(\r\n            \"Clone Design\", \r\n            {\r\n                stringName: `${design.name} - ${now.toLocaleDateString()} - ${now.toLocaleTimeString()}`\r\n            }\r\n        );\r\n        if (!cloneDesignParams) return;\r\n        const clonedDesign = Tools.clone(design);\r\n        clonedDesign.name = cloneDesignParams.stringName;\r\n        designStore.updateDesign(clonedDesign);  \r\n    }\r\n\r\n    async deleteDesign() {\r\n        const { design, designStore } = this.designStoreState;\r\n\r\n        if (!design) return;\r\n        if (!await Dialogs.Confirm(`Delete ${design.name}`)) return;\r\n    \r\n        designStore.deleteDesign(design);\r\n    }\r\n\r\n    async settings() {\r\n        const { design, designStore } = this.designStoreState;\r\n        if (!design) return;\r\n    \r\n        const settings = await Forms.Modal(design.name, {\r\n            stringName: design.name,\r\n            colorOdd: design.colorOdd,\r\n            colorEven: design.colorEven,\r\n            colorWheels: design.colorWheels\r\n        });\r\n        if (!settings) return;\r\n        designStore.updateDesign(design, (d) => {\r\n            d.name = settings.stringName;\r\n            d.colorOdd = settings.colorOdd;\r\n            d.colorEven = settings.colorEven;\r\n            d.colorWheels = settings.colorWheels;\r\n        });\r\n    }\r\n}","import React from 'react';\r\nimport { IIconProps, Toolbar } from './components';\r\nimport { DesignStore, IDesignStoreState } from './DesignStore';\r\nimport { IRenderSettings } from './lib';\r\nimport { DesignStoreOperations } from './DesignStoreOperations';\r\nimport { ToolbarFactory } from './ToolbarFactory';\r\n\r\ninterface IProps {\r\n    designStore: DesignStore;\r\n    designStoreState: IDesignStoreState;\r\n    renderSettings: IRenderSettings;\r\n    renderSettingsChanged: (renderSettings: IRenderSettings) => void;\r\n}\r\n\r\nexport class MainToolbar extends React.Component<IProps> {\r\n    \r\n    modify(diff: Partial<IRenderSettings>) {\r\n        const { renderSettingsChanged, renderSettings } = this.props;\r\n\r\n        renderSettingsChanged({\r\n            ...renderSettings,\r\n            ...diff\r\n        });\r\n    }\r\n\r\n    toggleWireframes() {\r\n        this.modify({ wireframes: !this.props.renderSettings.wireframes });\r\n    }\r\n\r\n    toggleFlatShading() {\r\n        this.modify({ flatShading: !this.props.renderSettings.flatShading });\r\n    }\r\n\r\n    get dso() {\r\n        const { designStoreState, renderSettings } = this.props;\r\n        return new DesignStoreOperations(designStoreState, renderSettings);\r\n    }\r\n\r\n    render() {\r\n        const toolbarFactory = new ToolbarFactory();\r\n        const items = toolbarFactory.MainToolbar(\r\n            () => this.dso, \r\n            () => this.props.renderSettings,\r\n            (diff) => this.modify(diff)\r\n            );\r\n\r\n        const iconParams: Partial<IIconProps> = {\r\n            bordered: true,\r\n            size: \"large\"\r\n        }\r\n\r\n        return <Toolbar iconParams={iconParams} items={items} className=\"menu menu-top\" />;\r\n    }\r\n}","import React from 'react';\r\nimport './App.scss';\r\nimport { AppScene } from './AppScene';\r\nimport { IRenderSettings, ISectionData, Tools } from './lib';\r\nimport { ModalsComponent } from './components';\r\nimport { DesignStore, IDesign, IDesignStoreState } from './DesignStore';\r\nimport { SideEditor } from './components/side-editor';\r\nimport { sectionEditorMode, wheelDrawingType } from './components/drawing-model';\r\nimport { MainToolbar } from './MainToolbar';\r\nimport { BodyShape, CountourQuery } from './BodyShape';\r\nimport { generationParity } from './SidePlane';\r\nimport CookieConsent from 'react-cookie-consent';\r\nimport { debounce, interval, Subject } from 'rxjs';\r\nimport { DesignStoreOperations } from './DesignStoreOperations';\r\n\r\ninterface IState {\r\n  designStore: DesignStore;\r\n  currentSectionData: ISectionData;\r\n  renderSettings: IRenderSettings;\r\n  designStoreState: IDesignStoreState;\r\n  showSectionSelector: boolean;\r\n  currentSection: number;\r\n}\r\n\r\nexport class App extends React.Component<{}, IState> {\r\n  _updateStream: Subject<{}> = new Subject<{}>();\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    const designStore = new DesignStore();\r\n\r\n    this.state = {\r\n      designStore,\r\n      renderSettings: {\r\n        wireframes: false,\r\n        flatShading: false,\r\n        ground: true,\r\n        lightOrbit: true,\r\n        renderWheels: true\r\n      },\r\n      designStoreState: designStore.state,\r\n      currentSectionData: {\r\n        front: null,\r\n        side: null,\r\n        top: null\r\n      },\r\n      showSectionSelector: false,\r\n      currentSection: 0\r\n    }\r\n\r\n\r\n    this\r\n        ._updateStream\r\n        .pipe(debounce(() => interval(500)))\r\n        .subscribe(() => this.forceUpdate());\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { designStore, renderSettings } = this.state;\r\n    designStore.subscribe(s => this.setState({ designStoreState: s }));\r\n    this.subscribeForResizeEvents();\r\n\r\n    window.ontouchstart = function(event) {\r\n      if (event.touches.length > 1) { //If there is more than one touch\r\n          event.preventDefault();\r\n      }\r\n    }\r\n\r\n    if (designStore.hasStoredDesigns) {\r\n      designStore.initializeFromStorage();\r\n    }\r\n    else {\r\n      designStore.initializeFromStorage();\r\n\r\n      const ops = new DesignStoreOperations({ designStore: designStore, design: null, storageModel: null }, renderSettings);\r\n      ops.loadSampleDesigns();\r\n    }\r\n/*\r\n    window.addEventListener(\"touchstart\", (e) => {\r\n      e.stopPropagation();\r\n    })\r\n    */\r\n  }\r\n\r\n  subscribeForResizeEvents() {\r\n    window.addEventListener(\"resize\", () => {\r\n      this._updateStream.next({});\r\n    });\r\n  }\r\n\r\n  renderDesign() {\r\n    const { \r\n      designStoreState, \r\n      designStore, \r\n      renderSettings, \r\n      currentSectionData, \r\n      showSectionSelector, \r\n      currentSection \r\n    } = this.state;\r\n    const { design } = designStoreState;\r\n    if (!design) return null;\r\n\r\n    const { boxSize, frontPoints, sidePoints, topPoints, wheels, frontSegments } = design;\r\n\r\n    const modifyDesign = (diff: Partial<IDesign>) => {\r\n      const modified = {\r\n        ...design,\r\n        ...diff\r\n      };\r\n      designStore.updateDesign(modified);\r\n    }\r\n\r\n    const bodyShape = new BodyShape(boxSize.x, boxSize.y, boxSize.z, generationParity.All);\r\n    bodyShape.applyContour(sidePoints, frontPoints, topPoints, wheels, [] );\r\n    \r\n    //const section = bodyShape.sectionPoints(design, currentSectionData);\r\n\r\n    const contourQuery = new CountourQuery(frontPoints, frontSegments);\r\n    const section = frontSegments[currentSectionData.front || 0];\r\n    const sectionBaseline = section \r\n      ? contourQuery.query((currentSectionData.front || 0) - 1)\r\n      : contourQuery.query(currentSectionData.front || 0);\r\n\r\n      /*\r\n    const designTools = new DesignTools(design);\r\n    const interpolatedSegments = designTools.interpolateSections();\r\n*/\r\n    const interpolateSections = () => {      \r\n      //Generate.range(0, boxSize.x).map(sectionIdx => {\r\n      //  console.log(sectionIdx, interpolatedSegments[sectionIdx]);\r\n      //})\r\n    }\r\n\r\n    const onSectionSelected = (show: boolean, section: number) => {\r\n      this.setState({\r\n        currentSectionData: {\r\n          ...currentSectionData,\r\n          front: show ? section : null\r\n        },\r\n        showSectionSelector: show,\r\n        currentSection: section\r\n      })\r\n    }\r\n\r\n    const height = window.innerHeight - 100;\r\n    const tableSizeProps: React.CSSProperties = {\r\n      width: window.innerWidth,\r\n      height: height\r\n    };\r\n\r\n    const rowSizeProps: React.CSSProperties = {\r\n      height: height / 2\r\n    };\r\n\r\n    const cellSizeProps: React.CSSProperties = {\r\n      width: window.innerWidth / 2,\r\n      height: height / 2\r\n    };\r\n\r\n    const canvasWidth = Math.floor(window.innerWidth / 2);\r\n    const canvasHeight = Math.floor(height / 2);\r\n\r\n    return (\r\n      <div className=\"main-layout-div\" style={tableSizeProps}>\r\n        <div className=\"main-layout-row\" style={rowSizeProps}>\r\n          <div className=\"main-layout-cell\" style={cellSizeProps}>\r\n          <SideEditor \r\n                id=\"front\"\r\n                title={`Front (${frontPoints.length}x${boxSize.z})`}\r\n                symmetrical={true}\r\n                width={canvasWidth}\r\n                height={canvasHeight}\r\n                contour={frontPoints}\r\n                maxY={boxSize.z}\r\n                onCountourChange={(newPoints) => {\r\n                  modifyDesign({\r\n                    frontPoints: newPoints\r\n                  })\r\n                }}\r\n                wheels={null}\r\n                wheelDrawing={wheelDrawingType.None}\r\n                sections={boxSize.x}\r\n                onSectionSelected={onSectionSelected}\r\n                onSectionChanged={(sections, points) => {\r\n                  const modifiedSegments = [...design.frontSegments];\r\n                  sections.forEach(s => {\r\n                    if (s === sections[0] && points !== null) {\r\n                      modifiedSegments[s] = points.map(p => ({ x: p.x, y: p.y }));\r\n                    }\r\n                    else {\r\n                      delete modifiedSegments[s];\r\n                    }\r\n                  })\r\n                  modifyDesign({\r\n                    frontSegments: modifiedSegments\r\n                  })\r\n                }}\r\n                sectionBaseline={sectionBaseline}\r\n                section={section/*section.front.map((p, idx) => ({ x: idx, y: p.y }))*/}\r\n                onInterpolateSections={interpolateSections}\r\n                showSectionSelector={showSectionSelector}\r\n                currentSection={currentSection}\r\n                design={design}\r\n                sectionMode={sectionEditorMode.Edit}\r\n              />\r\n          </div>\r\n          <div className=\"main-layout-cell\" style={cellSizeProps}>\r\n            <SideEditor \r\n                id=\"top\"\r\n                title={`Top (${topPoints.length}x${boxSize.y})`}\r\n                symmetrical={false}\r\n                width={canvasWidth}\r\n                height={canvasHeight}\r\n                contour={topPoints}\r\n                maxY={boxSize.y}\r\n                onCountourChange={(newPoints, newWheels) => {\r\n                  modifyDesign({\r\n                    topPoints: newPoints,\r\n                    wheels: newWheels || [] \r\n                  })\r\n                }}\r\n                wheels={wheels}\r\n                wheelDrawing={wheelDrawingType.Top}\r\n                sections={boxSize.z}\r\n                onSectionSelected={onSectionSelected}                \r\n                onSectionChanged={(sections, points) => {}}\r\n                section={null/*section.top.map((p, idx) => ({ x: idx, y: p.y }))*/}\r\n                sectionBaseline={null}\r\n                showSectionSelector={showSectionSelector}\r\n                currentSection={currentSection}\r\n                design={design}\r\n                sectionMode={sectionEditorMode.Pick}\r\n              />\r\n          </div>\r\n        </div>\r\n        <div className=\"main-layout-row\" style={rowSizeProps}>\r\n          <div className=\"main-layout-cell\" style={cellSizeProps}>\r\n          <SideEditor \r\n                id=\"side\"\r\n                title={`Side (${sidePoints.length}x${boxSize.z})`}\r\n                symmetrical={false}\r\n                width={canvasWidth}\r\n                height={canvasHeight}\r\n                contour={sidePoints}\r\n                maxY={boxSize.z}\r\n                onCountourChange={(newPoints, newWheels) => {\r\n                  modifyDesign({\r\n                    sidePoints: newPoints,                    \r\n                    wheels: newWheels || []\r\n                  })\r\n                }}\r\n                wheels={wheels}\r\n                wheelDrawing={wheelDrawingType.Side}\r\n                sections={boxSize.y}\r\n                onSectionSelected={onSectionSelected}\r\n                onSectionChanged={(sections, points) => {}}\r\n                section={null/*section.side.map((p, idx) => ({ x: idx, y: p.y }))*/}\r\n                sectionBaseline={null}\r\n                showSectionSelector={showSectionSelector}\r\n                currentSection={currentSection}\r\n                design={design}\r\n                sectionMode={sectionEditorMode.Pick}\r\n              />\r\n          </div>\r\n          <div className=\"main-layout-cell\" style={cellSizeProps}>\r\n          <AppScene \r\n                width={canvasWidth}\r\n                height={canvasHeight}\r\n                design={design}\r\n                renderSettings={renderSettings}\r\n              />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderDesignSelector() {\r\n    const { designStore, designStoreState } = this.state;\r\n    const { storageModel, design } = designStoreState;\r\n\r\n    if (!storageModel) return null;\r\n\r\n    return (\r\n      <div className=\"menu menu-top\">\r\n        {storageModel.designs.map(d => {\r\n          const classes = {\r\n            \"design-selector\": true,\r\n            \"design-selector-active\": d === design\r\n          }\r\n          return (\r\n            <div key={d.name} className={Tools.classNames(classes)} onClick={() => {\r\n              designStore.setActiveDesign(d);\r\n            }}>{d.name}</div>\r\n          );\r\n        })}\r\n      </div>      \r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { designStore, designStoreState, renderSettings } = this.state;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <div>\r\n          <div className=\"app-toolbars\">\r\n            <MainToolbar \r\n              designStore={designStore} \r\n              designStoreState={designStoreState} \r\n              renderSettings={renderSettings} \r\n              renderSettingsChanged={s => this.setState({ renderSettings: s })}\r\n            />\r\n            {this.renderDesignSelector()}\r\n          </div>\r\n          {this.renderDesign()}\r\n        </div>   \r\n        <ModalsComponent/>\r\n        <CookieConsent>This website uses cookies to enhance the user experience.</CookieConsent>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export class Tools {\r\n    static withinRange(value: number, min: number, max: number) {\r\n        const mMin = Math.min(min, max);\r\n        const mMax = Math.max(min, max);\r\n\r\n        if (value < mMin) return mMin;\r\n        if (value > mMax) return mMax;    \r\n\r\n        return value;\r\n    }\r\n\r\n    static between(value: number, min: number, max: number) {\r\n        const mMin = Math.min(min, max);\r\n        const mMax = Math.max(min, max);\r\n\r\n        return value > mMin && value < mMax;\r\n    }\r\n\r\n    static betweenInclusive(value: number, min: number, max: number) {\r\n        const mMin = Math.min(min, max);\r\n        const mMax = Math.max(min, max);\r\n\r\n        return value >= mMin && value <= mMax;\r\n    }\r\n\r\n    static classNames(source: {[key: string]: boolean}) {\r\n        if (!source) return \"\";\r\n\r\n        const keys = Object.keys(source);\r\n        const values = keys.filter(k => source[k]).join(\" \");\r\n\r\n        return values;\r\n    }\r\n\r\n    static clone<T>(source: T): T {\r\n        const json = JSON.stringify(source);\r\n        return JSON.parse(json);\r\n    }\r\n\r\n    static pythHB(hyp: number, base: number) {\r\n        return Math.sqrt(hyp * hyp - base * base);\r\n    }\r\n\r\n    static pythBP(base: number, perp: number) {\r\n        return Math.sqrt(base * base + perp * perp);\r\n    }\r\n}","import * as React from \"react\";\r\nimport { Subject } from \"rxjs\";\r\nimport { iconType } from \"..\";\r\n\r\nexport interface IModalDialogButton {\r\n    label: string;\r\n    onClick: () => void;\r\n}\r\n\r\nexport interface IGenericDialogOperation {\r\n    add: IGenericDialog[];\r\n    remove: IGenericDialog[];\r\n}\r\n\r\nexport interface IGenericDialog {\r\n    title: string;\r\n    icon?: iconType;\r\n    body?: JSX.Element | null;\r\n    footer?: JSX.Element | null;\r\n}\r\n\r\nexport interface IModalDialog {\r\n    title: string;\r\n    icon?: iconType;\r\n    body?: JSX.Element | null;\r\n    buttonsFactory: (close: (result: boolean) => void) => IModalDialogButton[];\r\n    genericDialogCallback?: (dialog: IGenericDialog) => void;\r\n}\r\n\r\nexport class Dialogs {\r\n    static DialogsStream: Subject<IGenericDialogOperation> = new Subject<IGenericDialogOperation>();\r\n\r\n    static OKCancelButtons(close: (result: boolean) => void) {\r\n        return [\r\n            {\r\n                label: \"OK\",\r\n                onClick: () => close(true)\r\n            },\r\n            {\r\n                label: \"Cancel\",\r\n                onClick: () => close(false)\r\n            }\r\n        ]\r\n    }\r\n\r\n    static CloseButtons(close: (result: boolean) => void) {\r\n        return [\r\n            {\r\n                label: \"Close\",\r\n                onClick: () => close(false)\r\n            }\r\n        ]\r\n    }\r\n\r\n    static Add(dialog: IGenericDialog) {\r\n        Dialogs.DialogsStream.next({\r\n            add: [dialog],\r\n            remove: []\r\n        })\r\n    }\r\n\r\n    static Remove(dialog: IGenericDialog) {\r\n        Dialogs.DialogsStream.next({\r\n            add: [],\r\n            remove: [dialog]\r\n        })\r\n    }\r\n\r\n    static async Confirm(title: string): Promise<boolean> {\r\n        return await Dialogs.Modal({\r\n            title,\r\n            icon: \"AiOutlineWarning\",\r\n            body: null,\r\n            buttonsFactory: (close) => {\r\n                return [\r\n                    {\r\n                        label: \"OK\",\r\n                        onClick: () => close(true)\r\n                    },\r\n                    {\r\n                        label: \"Cancel\",\r\n                        onClick: () => close(false)\r\n                    }\r\n                ]\r\n            }\r\n        })\r\n    }\r\n\r\n    static async Notification(\r\n        title: string, \r\n        body: JSX.Element | null = null,\r\n        override: Partial<IModalDialog> = {}): Promise<boolean> {\r\n        return await Dialogs.Modal({\r\n            title,\r\n            icon: \"AiOutlineWarning\",\r\n            body: body,\r\n            buttonsFactory: (close) => {\r\n                return [\r\n                    {\r\n                        label: \"Cancel\",\r\n                        onClick: () => close(false)\r\n                    }\r\n                ]\r\n            },\r\n            ...(override || {})\r\n        })\r\n    }\r\n\r\n    static async Modal(dialog: IModalDialog): Promise<boolean> {\r\n        return new Promise<boolean>((resolve, reject) => {\r\n            const buttons = dialog\r\n                .buttonsFactory((result) => {\r\n                    resolve(result);\r\n                    Dialogs.Remove(genericDialog);\r\n                })\r\n                .map(b => {\r\n                    return (\r\n                        <div key={b.label} className=\"modal-button\" onClick={e => {\r\n                            e.stopPropagation();\r\n                            e.preventDefault();\r\n                            b.onClick();\r\n                        }}>{b.label}</div>\r\n                    )\r\n                });\r\n\r\n            const genericDialog: IGenericDialog = {\r\n                title: dialog.title,\r\n                icon: dialog.icon,\r\n                body: dialog.body,\r\n                footer: <div>{buttons}</div>\r\n            }\r\n\r\n            dialog.genericDialogCallback?.(genericDialog);\r\n            Dialogs.Add(genericDialog);\r\n        })\r\n    }\r\n}\r\n","import * as React from \"react\"\r\nimport { IconBaseProps } from \"react-icons\";\r\nimport { CgEditShadows, CgSmartHomeLight } from \"react-icons/cg\";\r\nimport { GiWireframeGlobe, GiCartwheel } from \"react-icons/gi\";\r\nimport { GrFavorite, GrPowerReset, GrClone } from \"react-icons/gr\";\r\nimport { VscNewFile } from \"react-icons/vsc\";\r\nimport { AiOutlineFunction, AiFillLock, AiOutlineFastForward, AiOutlineGithub, AiOutlineTwitter, AiOutlineExport, AiOutlineSetting, AiOutlineInfoCircle, AiOutlineCloseCircle, AiOutlineWarning, AiOutlineBorderTop, AiOutlineBorderBottom, AiOutlineFullscreen } from \"react-icons/ai\";\r\nimport { ImMoveUp, ImMoveDown, ImPencil2 } from \"react-icons/im\"\r\nimport { GiWhiplash, GiSlicedBread, GiFlatPlatform } from \"react-icons/gi\"\r\nimport { TiArrowForwardOutline } from \"react-icons/ti\"\r\nimport { BiChip, BiHelpCircle } from \"react-icons/bi\"\r\nimport { RiDeleteBack2Line } from \"react-icons/ri\"\r\nimport { FiUpload, FiDownload } from \"react-icons/fi\"\r\nimport { FaUniversity } from \"react-icons/fa\"\r\nimport { FcViewDetails } from \"react-icons/fc\"\r\n\r\nimport { Tools } from \"../../lib\";\r\nimport \"./icon.scss\";\r\n\r\nexport type iconSize =\r\n    \"small\" | \"medium\" | \"large\";\r\n\r\nexport type iconType = \r\n    \"GrPowerReset\" | \r\n    \"GiWireframeGlobe\" | \r\n    \"CgEditShadows\" | \r\n    \"VscNewFile\" |\r\n    \"AiOutlineInfoCircle\" |\r\n    \"AiOutlineCloseCircle\" |\r\n    \"AiOutlineWarning\" | \r\n    \"GrClone\" |\r\n    \"ImMoveUp\" |\r\n    \"ImMoveDown\" |\r\n    \"AiOutlineBorderTop\" |\r\n    \"AiOutlineBorderBottom\" | \r\n    \"AiOutlineFullscreen\" |\r\n    \"AiOutlineSetting\" |\r\n    \"AiOutlineExport\" | \r\n    \"GiWhiplash\" |\r\n    \"ImPencil2\" |\r\n    \"GiCartwheel\" |\r\n    \"GiSlicedBread\" |\r\n    \"AiOutlineTwitter\" |\r\n    \"AiOutlineGithub\" |\r\n    \"AiOutlineFastForward\" |\r\n    \"TiArrowForwardOutline\" |\r\n    \"BiChip\" |\r\n    \"RiDeleteBack2Line\" |\r\n    \"AiFillLock\" |\r\n    \"AiOutlineFunction\" |\r\n    \"FiUpload\" |\r\n    \"FiDownload\" |\r\n    \"BiHelpCircle\" |\r\n    \"GrFavorite\" |\r\n    \"FaUniversity\" |\r\n    \"FcViewDetails\" |\r\n    \"GiFlatPlatform\" |\r\n    \"CgSmartHomeLight\"\r\n    ;\r\n\r\nexport interface IIconElementProps {\r\n    size?: iconSize;\r\n    className?: string;    \r\n}\r\n\r\nexport interface IIconProps extends IIconElementProps {\r\n    type?: iconType;\r\n    title?: string;\r\n    readOnlyTitle?: string;\r\n    selected?: boolean;\r\n    readOnly?: boolean;\r\n    hidden?: boolean; \r\n    bordered?: boolean;\r\n    onClick?: () => void;\r\n}\r\n\r\nexport class Icon extends React.Component<IIconProps> {\r\n    getIcon() {\r\n        const { \r\n            type, \r\n            title = \"\", \r\n            readOnlyTitle,\r\n            bordered = false, \r\n            readOnly = false, \r\n            hidden = false,\r\n            className, \r\n            selected = false, \r\n            size = \"medium\", \r\n            onClick\r\n        } = this.props;\r\n\r\n        const classNames: {[key: string]: boolean} = {\r\n            \"icon\": true,\r\n            \"icon-selected\": selected,\r\n            \"icon-bordered\": bordered,\r\n            \"icon-readonly\": readOnly,\r\n            \"icon-hidden\": hidden,\r\n            [`icon-${size}`]: true\r\n        };\r\n\r\n        if (className) classNames[className] = true;\r\n\r\n        const iconTitle = readOnly \r\n            ? title + (readOnlyTitle ? ` (${readOnlyTitle})` : \"\")\r\n            : title;\r\n\r\n        const iconProps: IconBaseProps = {\r\n            title: iconTitle,\r\n            className: Tools.classNames(classNames),\r\n            onClick: () => {\r\n                if (readOnly) return;\r\n                onClick?.()\r\n            }\r\n        };\r\n\r\n        switch (type) {\r\n            case \"CgEditShadows\": return <CgEditShadows {...iconProps}/>;\r\n            case \"GiWireframeGlobe\": return <GiWireframeGlobe {...iconProps}/>;\r\n            case \"GrPowerReset\": return <GrPowerReset {...iconProps}/>;\r\n            case \"VscNewFile\": return <VscNewFile {...iconProps}/>\r\n            case \"AiOutlineInfoCircle\": return <AiOutlineInfoCircle {...iconProps}/>\r\n            case \"AiOutlineCloseCircle\": return <AiOutlineCloseCircle {...iconProps} />\r\n            case \"AiOutlineWarning\": return <AiOutlineWarning {...iconProps}/>\r\n            case \"GrClone\": return <GrClone {...iconProps}/>\r\n            case \"ImMoveUp\": return <ImMoveUp {...iconProps}/>\r\n            case \"ImMoveDown\": return <ImMoveDown {...iconProps}/>\r\n            case \"AiOutlineBorderTop\": return <AiOutlineBorderTop {...iconProps}/>\r\n            case \"AiOutlineBorderBottom\": return <AiOutlineBorderBottom {...iconProps}/>\r\n            case \"AiOutlineFullscreen\": return <AiOutlineFullscreen  {...iconProps}/>\r\n            case \"AiOutlineSetting\": return <AiOutlineSetting {...iconProps}/>\r\n            case \"AiOutlineExport\": return <AiOutlineExport {...iconProps}/>\r\n            case \"GiWhiplash\": return <GiWhiplash {...iconProps}/>\r\n            case \"ImPencil2\": return <ImPencil2 {...iconProps}/>\r\n            case \"GiCartwheel\": return <GiCartwheel {...iconProps}/>\r\n            case \"GiSlicedBread\": return <GiSlicedBread {...iconProps}/>\r\n            case \"AiOutlineTwitter\": return <AiOutlineTwitter {...iconProps}/>\r\n            case \"AiOutlineGithub\": return <AiOutlineGithub {...iconProps} />\r\n            case \"AiOutlineFastForward\": return <AiOutlineFastForward {...iconProps}/>\r\n            case \"TiArrowForwardOutline\": return <TiArrowForwardOutline {...iconProps}/>\r\n            case \"BiChip\": return <BiChip {...iconProps}/>\r\n            case \"RiDeleteBack2Line\": return <RiDeleteBack2Line {...iconProps} />\r\n            case \"AiFillLock\": return <AiFillLock {...iconProps}/>\r\n            case \"AiOutlineFunction\": return <AiOutlineFunction {...iconProps}/>\r\n            case \"FiUpload\": return <FiUpload {...iconProps} />\r\n            case \"FiDownload\": return <FiDownload {...iconProps}/>\r\n            case \"BiHelpCircle\": return <BiHelpCircle {...iconProps}/>\r\n            case \"GrFavorite\": return <GrFavorite {...iconProps}/>\r\n            case \"FaUniversity\": return <FaUniversity {...iconProps}/>\r\n            case \"FcViewDetails\": return <FcViewDetails {...iconProps}/>\r\n            case \"GiFlatPlatform\": return <GiFlatPlatform {...iconProps}/>\r\n            case \"CgSmartHomeLight\": return <CgSmartHomeLight {...iconProps}/>\r\n            default: return null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"icon-container\">\r\n                {this.getIcon()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport const IconSeparator = (props: IIconElementProps) => {\r\n    const { size, className } = props;\r\n    const classNames: {[key: string]: boolean} = {\r\n        \"icon-separator\": true,\r\n        [`icon-${size}`]: true\r\n    };\r\n\r\n    if (className) classNames[className] = true;\r\n\r\n    return (\r\n        <div className=\"icon-container\">\r\n            <div className={Tools.classNames(classNames)}>&nbsp;</div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Icon, IconSeparator, IIconProps } from '../icon/icon';\r\nimport { Dialogs, IGenericDialog } from '../modal';\r\nimport { ToolbarLegend } from './toolbar-legend';\r\nimport { IToolbarItem } from './toolbar-types';\r\nimport \"./toolbar.scss\";\r\n\r\ninterface IProps {\r\n    items: IToolbarItem[];\r\n    iconParams: Partial<IIconProps>;\r\n    className?: string;\r\n}\r\n\r\nexport class Toolbar extends React.Component<IProps> {\r\n    render() {\r\n        const { className, items, iconParams } = this.props;\r\n\r\n        const separatorParams: Partial<IIconProps> = {\r\n            size: iconParams.size\r\n        }\r\n\r\n        const menuItems = items.map((i, idx) => {\r\n            if (i.isSeparator) return <IconSeparator key={idx} {...separatorParams}/>;\r\n            return (\r\n                <Icon \r\n                    key={idx} \r\n                    {...iconParams} \r\n                    type={i.icon} \r\n                    title={i.title} \r\n                    selected={i.selected?.()} \r\n                    onClick={i.action}\r\n                    {...(i.iconParams || {})}\r\n                />\r\n            )\r\n\r\n        })\r\n\r\n        return (\r\n            <div className={className}>\r\n                {menuItems}\r\n            </div>      \r\n        );\r\n    }\r\n\r\n    static async Modal(title: string, items: IToolbarItem[]) {\r\n        let genericDialog: IGenericDialog | null = null;\r\n\r\n        await Dialogs.Notification(\r\n            title,\r\n            <ToolbarLegend items={items} dialogFactory={() => genericDialog} />,\r\n            { genericDialogCallback: (d) => genericDialog = d }\r\n        );\r\n    }\r\n}\r\n","import * as React from \"react\"\r\nimport { createPortal } from \"react-dom\"\r\nimport { Icon } from \"../icon/icon\";\r\nimport { Dialogs, IGenericDialog } from \"./modal\";\r\nimport \"./modal.scss\";\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\ninterface IState {\r\n    dialogs: IGenericDialog[];\r\n}\r\n\r\nexport class ModalsComponent extends React.Component<IProps, IState> {\r\n    internalDialogs: IGenericDialog[] = [];\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            dialogs: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        Dialogs.DialogsStream.subscribe(op => {\r\n            const newDialogs = [\r\n                ...this.internalDialogs.filter(d => !op.remove.includes(d)),\r\n                ...op.add\r\n            ];\r\n\r\n            this.setState({\r\n                dialogs: newDialogs\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { dialogs } = this.state;\r\n\r\n        const backdrop = dialogs.length ? <div className=\"modal-backdrop\"/> : null;\r\n        const modalDialogs = dialogs.map((d, idx) => {\r\n            const { title, icon, body, footer } = d;\r\n            return (\r\n                <div key={idx} className=\"modal-dialog\">\r\n                    <div className=\"modal-header\">\r\n                        {icon && <div className=\"modal-header-icon\"><Icon type={icon} size=\"small\" /></div>}\r\n                        <div className=\"modal-header-title\">{title}</div>\r\n                    </div>\r\n                    { body && <div className=\"modal-body\">{body}</div> }\r\n                    { footer && <div className=\"modal-footer\">{footer}</div> }\r\n                </div>   \r\n            )\r\n        });\r\n\r\n        const modalContainer = modalDialogs.length\r\n        ? (\r\n            <div className=\"modal-container\">\r\n                {modalDialogs}\r\n            </div> \r\n        )\r\n        : null;\r\n\r\n        const modals = (\r\n            <div className=\"modal\">\r\n                {backdrop}\r\n                {modalContainer}\r\n            </div>\r\n        )\r\n\r\n        return createPortal(modals, document.body, \"modals\");\r\n    }\r\n}","import * as React from \"react\"\r\nimport { Dialogs } from \"./modal\";\r\nimport \"./form.scss\";\r\n\r\ninterface IDynamicFormProps<T extends {[key: string]: any}> {\r\n    model: T;\r\n    modified: (model: T) => void;\r\n}\r\n\r\ninterface IDynamicFormState<T extends {[key: string]: any}> {\r\n    model: T;   \r\n}\r\n\r\nclass DynamicForm<T extends {[key: string]: any}> extends React.Component<IDynamicFormProps<T>, IDynamicFormState<T>> {\r\n    constructor(props: IDynamicFormProps<T>) {\r\n        super(props);\r\n        this.state = {\r\n            model: props.model\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { modified } = this.props;\r\n        const { model } = this.state;\r\n        if (!model) return null;\r\n\r\n        const keys = Object.keys(model);\r\n\r\n        const components = keys.map(key => {\r\n            const index = key.split('').findIndex(c => c.toUpperCase() === c);\r\n            if (index <= 0) {\r\n                return (\r\n                    <div key={key}>\r\n                        Component type cannot be inferred: {key}\r\n                    </div>\r\n                )\r\n            }\r\n            const fieldName = key.substring(index);\r\n            const fieldLabel = fieldName.split('').map((c, idx) => {\r\n                if (idx === 0) return c;\r\n                if (c === c.toUpperCase()) return ` ${c}`;\r\n                return c;\r\n            }).join(\"\");\r\n\r\n            const formComponent = (fieldEditor: JSX.Element ) => {\r\n                return (\r\n                    <div key={key}>\r\n                        <div className=\"form-label\">{fieldLabel}</div>\r\n                        <div className=\"form-control-container\">{fieldEditor}</div>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            const modify = (newValue: any) => {\r\n                const newModel = Object.assign({}, model, {\r\n                    [key]: newValue\r\n                })\r\n                this.setState({\r\n                    model: newModel\r\n                }, () => modified(this.state.model))\r\n            };\r\n\r\n            const fieldType = key.substring(0, index);\r\n            switch(fieldType) {\r\n                case \"flag\": {\r\n                    return formComponent(<input className=\"form-control\" type=\"checkbox\" checked={!!model[key]} onChange={e => modify(e.target.checked)}/>)\r\n                }\r\n                case \"int\": {\r\n                    return formComponent(<input className=\"form-control\" type=\"number\" value={model[key]} onChange={e => modify(parseInt(e.target.value || \"0\"))}/>)\r\n                }\r\n                case \"string\": {\r\n                    return formComponent(<input className=\"form-control\" type=\"string\" value={model[key]} onChange={e => modify(e.target.value || \"\")}/>)\r\n                }\r\n                case \"color\": {\r\n                    return formComponent(<input \r\n                        className=\"form-control\" \r\n                        type=\"color\" \r\n                        value={`#${(model[key] ?? 0).toString(16).padStart(6,\"0\")}`} \r\n                        onChange={e => {\r\n                            modify(parseInt((e.target.value ?? \"#000000\").substring(1), 16));\r\n                        }}/>)              \r\n                }\r\n                default: {\r\n                    return formComponent(<div>Unsupported field type: {fieldType}</div>)\r\n                }\r\n            }\r\n        });\r\n\r\n        return (\r\n            <form className=\"form\">\r\n                {components}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport class Forms {\r\n    static async Modal<T extends {[key: string]: any}>(title: string, model: T): Promise<T | null> {\r\n        if (!model) return model;\r\n\r\n        let result = model;\r\n        const form = <DynamicForm model={model} modified={(m) => result = m} />\r\n\r\n        if (!await Dialogs.Modal({\r\n            title,\r\n            icon: \"AiOutlineInfoCircle\",\r\n            body: form,\r\n            buttonsFactory: Dialogs.OKCancelButtons\r\n        })) return null;\r\n\r\n        return result;\r\n    }\r\n}","import React from 'react';\r\nimport { Icon } from '../icon/icon';\r\nimport { Dialogs, IGenericDialog } from '../modal';\r\nimport { IToolbarItem } from './toolbar-types';\r\n\r\ninterface IProps {\r\n    items: IToolbarItem[];\r\n    dialogFactory?: (() => IGenericDialog | null) | null;\r\n}\r\n\r\nexport class ToolbarLegend extends React.Component<IProps> {\r\n    render() {\r\n        const { items, dialogFactory } = this.props;\r\n\r\n        const rows = items.map((i, idx) => {\r\n            if (i.isSeparator) {\r\n                return <tr key={idx}><td colSpan={2} className=\"toolbar-legend-separator\"></td></tr>\r\n            }\r\n\r\n            return (\r\n                <tr key={idx}>\r\n                    <td className=\"toolbar-legend-icon\">\r\n                        <Icon type={i.icon} selected={i.selected?.()} \r\n                            onClick={() => {\r\n                            const genericDialog = dialogFactory?.();\r\n                            if (genericDialog) {\r\n                                Dialogs.Remove(genericDialog);\r\n                                i.action?.();\r\n                            }\r\n                        }}/>\r\n                    </td>\r\n                    <td>{i.title}</td>\r\n                </tr>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <table className=\"toolbar-legend\">\r\n                <tbody>\r\n                    {rows}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}","export * from \"./toolbar-types\"\r\nexport * from \"./toolbar\"\r\nexport * from \"./toolbar-legend\"","export class Generate {\r\n    static inclusive(from: number, to: number) {\r\n        return from > to\r\n            ? Generate.range(from, to - from - 1)\r\n            : Generate.range(from, to - from + 1)\r\n    }\r\n\r\n    static range(from: number, length: number) {\r\n        const result: number[] = [];\r\n        if (length === 0) return [];\r\n        if (length > 0) {\r\n            for (let i = 0; i < length; i++) {\r\n                result.push(i + from);\r\n            }\r\n        }\r\n        else {\r\n            for (let i = 0; i > length; i--) {\r\n                result.push(i + from);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}","import * as Rx from \"rxjs\";\r\nimport { bufferTime } from \"rxjs/operators\";\r\n\r\nexport class BufferStream<T> {\r\n    _subject = new Rx.Subject<T>();\r\n\r\n    constructor(time: number, onNext: (value: T[]) => void) {\r\n        this._subject\r\n            .pipe(bufferTime(time))\r\n            .subscribe((value) => {\r\n                value && value.length && onNext(value);\r\n            });\r\n    }\r\n\r\n    next(value: T) {\r\n        this._subject.next(value);\r\n    }\r\n}","export * from \"./generate\";\r\nexport * from \"./g2d\";\r\nexport * from \"./buffer-stream\";\r\nexport * from \"./tools\";\r\nexport * from \"./types\";"],"sourceRoot":""}